{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"in\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import PresenceTransition from\"../Transitions/PresenceTransition\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{usePropsResolution}from\"../../../hooks/\";var Fade=function Fade(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _usePropsResolution=usePropsResolution('Fade',props),animationState=_usePropsResolution.in,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(PresenceTransition,_extends({visible:animationState},resolvedProps,{ref:ref}),children);};export default React.memo(React.forwardRef(Fade));","map":{"version":3,"sources":["Fade.tsx"],"names":["Fade","props","in","resolvedProps","usePropsResolution","useHasResponsiveProps","animationState","ref","React"],"mappings":"yZAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,kBAAA,yCAEA,OAAA,qBAAA,4CACA,OAAA,kBAAA,uBAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAA,GAAA,CAAmD,IAAlD,CAAA,QAAkD,MAAlD,QAAkD,CAAnCC,KAAmC,0CAC9D,wBAAiDG,kBAAkB,CAAA,MAAA,CADL,KACK,CAAnE,CAAM,cAAN,qBAAQF,EAAR,CAA+BC,aAA/B,0DAKA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CAAoB,OAAO,CAAEC,cAA7B,CAAA,CAAA,aAAA,CAAA,CAAgE,GAAG,CAAEC,GAArE,CAAA,CAAA,CADF,QACE,CADF,CATF,CAAA,CAgBA,cAAeC,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,IAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport PresenceTransition from '../Transitions/PresenceTransition';\nimport type { IFadeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst Fade = ({ children, ...props }: IFadeProps, ref?: any) => {\n  const { in: animationState, ...resolvedProps } = usePropsResolution(\n    'Fade',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <PresenceTransition visible={animationState} {...resolvedProps} ref={ref}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Fade));\n"]},"metadata":{},"sourceType":"module"}