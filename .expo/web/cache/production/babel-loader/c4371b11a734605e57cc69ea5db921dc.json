{"ast":null,"code":"import _extends2 from\"@babel/runtime/helpers/extends\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{useThemeProps}from\"../../../hooks\";import Box from\"../../primitives/Box\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Code=function Code(_ref,ref){var props=_extends2({},_ref);var _useThemeProps=useThemeProps('Code',props),newProps=_extends2({},_useThemeProps);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({_text:{fontFamily:Platform.OS==='ios'?'Courier':'monospace'}},newProps,{ref:ref}));};export default React.memo(React.forwardRef(Code));","map":{"version":3,"sources":["index.tsx"],"names":["Code","props","newProps","useThemeProps","useHasResponsiveProps","fontFamily","Platform","ref","React"],"mappings":"6UAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,6DAEA,OAAA,aAAA,sBACA,MAAA,CAAA,GAAA,4BAEA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAA,GAAA,CAAyC,IAAnCC,CAAAA,KAAmC,oBACpD,mBAAsBE,aAAa,CAAA,MAAA,CADiB,KACjB,CAAnC,CAASD,QAAT,8BAEA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACLC,UAAU,CAAEC,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,CAAAA,SAAAA,CAAoC,WAD3C,CADT,CAAA,CAAA,QAAA,CAAA,CAKE,GAAG,CAAEC,GALP,CAAA,CAAA,CADF,CANF,CAAA,CAkBA,cAAeC,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,IAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ICodeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Code = ({ ...props }: ICodeProps, ref?: any) => {\n  let { ...newProps } = useThemeProps('Code', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      _text={{\n        fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',\n      }}\n      {...newProps}\n      ref={ref}\n    />\n  );\n};\n\nexport type { ICodeProps };\nexport default React.memo(React.forwardRef(Code));\n"]},"metadata":{},"sourceType":"module"}