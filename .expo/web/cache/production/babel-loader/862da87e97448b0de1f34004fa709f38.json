{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{filterDOMProps as $kOq5K$filterDOMProps,mergeProps as $kOq5K$mergeProps}from\"@react-aria/utils\";import{useField as $kOq5K$useField}from\"@react-aria/label\";import{useFocusable as $kOq5K$useFocusable}from\"@react-aria/focus\";import{useRef as $kOq5K$useRef,useEffect as $kOq5K$useEffect}from\"react\";function $parcel$export(e,n,v,s){Object.defineProperty(e,n,{get:v,set:s,enumerable:true,configurable:true});}var $2d73ec29415bd339$exports={};$parcel$export($2d73ec29415bd339$exports,\"useTextField\",function(){return $2d73ec29415bd339$export$712718f7aec83d5;});function $2d73ec29415bd339$export$712718f7aec83d5(props,ref){var _props$inputElementTy=props.inputElementType,inputElementType=_props$inputElementTy===void 0?'input':_props$inputElementTy,_props$isDisabled=props.isDisabled,isDisabled=_props$isDisabled===void 0?false:_props$isDisabled,_props$isRequired=props.isRequired,isRequired=_props$isRequired===void 0?false:_props$isRequired,_props$isReadOnly=props.isReadOnly,isReadOnly=_props$isReadOnly===void 0?false:_props$isReadOnly,validationState=props.validationState,_props$type=props.type,type=_props$type===void 0?'text':_props$type,_props$onChange=props.onChange,_onChange=_props$onChange===void 0?function(){}:_props$onChange;var _$kOq5K$useFocusable=$kOq5K$useFocusable(props,ref),focusableProps=_$kOq5K$useFocusable.focusableProps;var _$kOq5K$useField=$kOq5K$useField(props),labelProps=_$kOq5K$useField.labelProps,fieldProps=_$kOq5K$useField.fieldProps,descriptionProps=_$kOq5K$useField.descriptionProps,errorMessageProps=_$kOq5K$useField.errorMessageProps;var domProps=$kOq5K$filterDOMProps(props,{labelable:true});var inputOnlyProps={type:type,pattern:props.pattern};return{labelProps:labelProps,inputProps:$kOq5K$mergeProps(domProps,inputElementType==='input'&&inputOnlyProps,_objectSpread(_objectSpread({disabled:isDisabled,readOnly:isReadOnly,'aria-required':isRequired||undefined,'aria-invalid':validationState==='invalid'||undefined,'aria-errormessage':props['aria-errormessage'],'aria-activedescendant':props['aria-activedescendant'],'aria-autocomplete':props['aria-autocomplete'],'aria-haspopup':props['aria-haspopup'],value:props.value,defaultValue:props.value?undefined:props.defaultValue,onChange:function onChange(e){return _onChange(e.target.value);},autoComplete:props.autoComplete,maxLength:props.maxLength,minLength:props.minLength,name:props.name,placeholder:props.placeholder,inputMode:props.inputMode,onCopy:props.onCopy,onCut:props.onCut,onPaste:props.onPaste,onCompositionEnd:props.onCompositionEnd,onCompositionStart:props.onCompositionStart,onCompositionUpdate:props.onCompositionUpdate,onSelect:props.onSelect,onBeforeInput:props.onBeforeInput,onInput:props.onInput},focusableProps),fieldProps)),descriptionProps:descriptionProps,errorMessageProps:errorMessageProps};}var $d841c8010a73d545$exports={};$parcel$export($d841c8010a73d545$exports,\"useFormattedTextField\",function(){return $d841c8010a73d545$export$4f384c9210e583c3;});function $d841c8010a73d545$var$supportsNativeBeforeInputEvent(){return typeof window!=='undefined'&&window.InputEvent&&typeof InputEvent.prototype.getTargetRanges==='function';}function $d841c8010a73d545$export$4f384c9210e583c3(props,state1,inputRef){var stateRef=$kOq5K$useRef(state1);stateRef.current=state1;$kOq5K$useEffect(function(){if(!$d841c8010a73d545$var$supportsNativeBeforeInputEvent())return;var input=inputRef.current;var onBeforeInput=function onBeforeInput(e){var state=stateRef.current;var nextValue;switch(e.inputType){case'historyUndo':case'historyRedo':return;case'deleteContent':case'deleteByCut':case'deleteByDrag':nextValue=input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd);break;case'deleteContentForward':nextValue=input.selectionEnd===input.selectionStart?input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd+1):input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd);break;case'deleteContentBackward':nextValue=input.selectionEnd===input.selectionStart?input.value.slice(0,input.selectionStart-1)+input.value.slice(input.selectionStart):input.value.slice(0,input.selectionStart)+input.value.slice(input.selectionEnd);break;case'deleteSoftLineBackward':case'deleteHardLineBackward':nextValue=input.value.slice(input.selectionStart);break;default:if(e.data!=null)nextValue=input.value.slice(0,input.selectionStart)+e.data+input.value.slice(input.selectionEnd);break;}if(nextValue==null||!state.validate(nextValue))e.preventDefault();};input.addEventListener('beforeinput',onBeforeInput,false);return function(){input.removeEventListener('beforeinput',onBeforeInput,false);};},[inputRef,stateRef]);var onBeforeInput1=!$d841c8010a73d545$var$supportsNativeBeforeInputEvent()?function(e){var nextValue=e.target.value.slice(0,e.target.selectionStart)+e.data+e.target.value.slice(e.target.selectionEnd);if(!state1.validate(nextValue))e.preventDefault();}:null;var _$2d73ec29415bd339$ex=$2d73ec29415bd339$export$712718f7aec83d5(props,inputRef),labelProps=_$2d73ec29415bd339$ex.labelProps,textFieldProps=_$2d73ec29415bd339$ex.inputProps,descriptionProps=_$2d73ec29415bd339$ex.descriptionProps,errorMessageProps=_$2d73ec29415bd339$ex.errorMessageProps;var compositionStartState=$kOq5K$useRef(null);return{inputProps:$kOq5K$mergeProps(textFieldProps,{onBeforeInput:onBeforeInput1,onCompositionStart:function onCompositionStart(){var _inputRef$current=inputRef.current,value=_inputRef$current.value,selectionStart=_inputRef$current.selectionStart,selectionEnd=_inputRef$current.selectionEnd;compositionStartState.current={value:value,selectionStart:selectionStart,selectionEnd:selectionEnd};},onCompositionEnd:function onCompositionEnd(){if(!state1.validate(inputRef.current.value)){var _compositionStartStat=compositionStartState.current,value=_compositionStartStat.value,selectionStart=_compositionStartStat.selectionStart,selectionEnd=_compositionStartStat.selectionEnd;inputRef.current.value=value;inputRef.current.setSelectionRange(selectionStart,selectionEnd);state1.setInputValue(value);}}}),labelProps:labelProps,descriptionProps:descriptionProps,errorMessageProps:errorMessageProps};}export{$2d73ec29415bd339$export$712718f7aec83d5 as useTextField,$d841c8010a73d545$export$4f384c9210e583c3 as useFormattedTextField};","map":{"version":3,"sources":["packages/@react-aria/textfield/src/useTextField.ts","packages/@react-aria/textfield/src/useFormattedTextField.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTextFieldProps} from '@react-types/textfield';\nimport {\n  ChangeEvent,\n  DOMFactory,\n  HTMLAttributes,\n  LabelHTMLAttributes,\n  ReactDOM,\n  RefObject\n} from 'react';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\nimport {useFocusable} from '@react-aria/focus';\n\n/**\n * A map of HTML element names and their interface types.\n * For example `'a'` -> `HTMLAnchorElement`.\n */\ntype IntrinsicHTMLElements = {\n  [K in keyof IntrinsicHTMLAttributes]: IntrinsicHTMLAttributes[K] extends HTMLAttributes<infer T> ? T : never\n};\n\n/**\n * A map of HTML element names and their attribute interface types.\n * For example `'a'` -> `AnchorHTMLAttributes<HTMLAnchorElement>`.\n */\ntype IntrinsicHTMLAttributes = {\n  [K in keyof ReactDOM]: ReactDOM[K] extends DOMFactory<infer T, any> ? T : never\n};\n\ntype DefaultElementType = 'input';\n\n/**\n * The intrinsic HTML element names that `useTextField` supports; e.g. `input`,\n * `textarea`.\n */\ntype TextFieldIntrinsicElements = keyof Pick<IntrinsicHTMLElements, 'input' | 'textarea'>;\n\n /**\n  * The HTML element interfaces that `useTextField` supports based on what is\n  * defined for `TextFieldIntrinsicElements`; e.g. `HTMLInputElement`,\n  * `HTMLTextAreaElement`.\n  */\ntype TextFieldHTMLElementType = Pick<IntrinsicHTMLElements, TextFieldIntrinsicElements>;\n\n /**\n  * The HTML attributes interfaces that `useTextField` supports based on what\n  * is defined for `TextFieldIntrinsicElements`; e.g. `InputHTMLAttributes`,\n  * `TextareaHTMLAttributes`.\n  */\ntype TextFieldHTMLAttributesType = Pick<IntrinsicHTMLAttributes, TextFieldIntrinsicElements>;\n\n/**\n * The type of `inputProps` returned by `useTextField`; e.g. `InputHTMLAttributes`,\n * `TextareaHTMLAttributes`.\n */\ntype TextFieldInputProps<T extends TextFieldIntrinsicElements> = TextFieldHTMLAttributesType[T];\n\ninterface AriaTextFieldOptions<T extends TextFieldIntrinsicElements> extends AriaTextFieldProps {\n  /**\n   * The HTML element used to render the input, e.g. 'input', or 'textarea'.\n   * It determines whether certain HTML attributes will be included in `inputProps`.\n   * For example, [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type).\n   * @default 'input'\n   */\n  inputElementType?: T\n}\n\n/**\n * The type of `ref` object that can be passed to `useTextField` based on the given\n * intrinsic HTML element name; e.g.`RefObject<HTMLInputElement>`,\n * `RefObject<HTMLTextAreaElement>`.\n */\ntype TextFieldRefObject<T extends TextFieldIntrinsicElements> = RefObject<TextFieldHTMLElementType[T]>;\n\nexport interface TextFieldAria<T extends TextFieldIntrinsicElements = DefaultElementType> {\n  /** Props for the input element. */\n  inputProps: TextFieldInputProps<T>,\n  /** Props for the text field's visible label element, if any. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props for the text field's description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the text field's error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a text field.\n * @param props - Props for the text field.\n * @param ref - Ref to the HTML input or textarea element.\n */\nexport function useTextField<T extends TextFieldIntrinsicElements = DefaultElementType>(\n  props: AriaTextFieldOptions<T>,\n  ref: TextFieldRefObject<T>\n): TextFieldAria<T> {\n  let {\n    inputElementType = 'input',\n    isDisabled = false,\n    isRequired = false,\n    isReadOnly = false,\n    validationState,\n    type = 'text',\n    onChange = () => {}\n  }: AriaTextFieldOptions<TextFieldIntrinsicElements> = props;\n  let {focusableProps} = useFocusable(props, ref);\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField(props);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  const inputOnlyProps = {\n    type,\n    pattern: props.pattern\n  };\n\n  return {\n    labelProps,\n    inputProps: mergeProps(\n      domProps,\n      inputElementType === 'input' && inputOnlyProps,\n      {\n        disabled: isDisabled,\n        readOnly: isReadOnly,\n        'aria-required': isRequired || undefined,\n        'aria-invalid': validationState === 'invalid' || undefined,\n        'aria-errormessage': props['aria-errormessage'],\n        'aria-activedescendant': props['aria-activedescendant'],\n        'aria-autocomplete': props['aria-autocomplete'],\n        'aria-haspopup': props['aria-haspopup'],\n        value: props.value,\n        defaultValue: props.value ? undefined : props.defaultValue,\n        onChange: (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.value),\n        autoComplete: props.autoComplete,\n        maxLength: props.maxLength,\n        minLength: props.minLength,\n        name: props.name,\n        placeholder: props.placeholder,\n        inputMode: props.inputMode,\n\n        // Clipboard events\n        onCopy: props.onCopy,\n        onCut: props.onCut,\n        onPaste: props.onPaste,\n\n        // Composition events\n        onCompositionEnd: props.onCompositionEnd,\n        onCompositionStart: props.onCompositionStart,\n        onCompositionUpdate: props.onCompositionUpdate,\n\n        // Selection events\n        onSelect: props.onSelect,\n\n        // Input events\n        onBeforeInput: props.onBeforeInput,\n        onInput: props.onInput,\n        ...focusableProps,\n        ...fieldProps\n      }\n    ),\n    descriptionProps,\n    errorMessageProps\n  };\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTextFieldProps} from '@react-types/textfield';\nimport {mergeProps} from '@react-aria/utils';\nimport {RefObject, useEffect, useRef} from 'react';\nimport {TextFieldAria, useTextField} from './useTextField';\n\ninterface FormattedTextFieldState {\n  validate: (val: string) => boolean,\n  setInputValue: (val: string) => void\n}\n\n\nfunction supportsNativeBeforeInputEvent() {\n  return typeof window !== 'undefined' &&\n    window.InputEvent &&\n    // @ts-ignore\n    typeof InputEvent.prototype.getTargetRanges === 'function';\n}\n\nexport function useFormattedTextField(props: AriaTextFieldProps, state: FormattedTextFieldState, inputRef: RefObject<HTMLInputElement>): TextFieldAria {\n\n  let stateRef = useRef(state);\n  stateRef.current = state;\n\n  // All browsers implement the 'beforeinput' event natively except Firefox\n  // (currently behind a flag as of Firefox 84). React's polyfill does not\n  // run in all cases that the native event fires, e.g. when deleting text.\n  // Use the native event if available so that we can prevent invalid deletions.\n  // We do not attempt to polyfill this in Firefox since it would be very complicated,\n  // the benefit of doing so is fairly minor, and it's going to be natively supported soon.\n  useEffect(() => {\n    if (!supportsNativeBeforeInputEvent()) {\n      return;\n    }\n\n    let input = inputRef.current;\n\n    let onBeforeInput = (e: InputEvent) => {\n      let state = stateRef.current;\n\n      // Compute the next value of the input if the event is allowed to proceed.\n      // See https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes for a full list of input types.\n      let nextValue: string;\n      switch (e.inputType) {\n        case 'historyUndo':\n        case 'historyRedo':\n          // Explicitly allow undo/redo. e.data is null in this case, but there's no need to validate,\n          // because presumably the input would have already been validated previously.\n          return;\n        case 'deleteContent':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteContentForward':\n          // This is potentially incorrect, since the browser may actually delete more than a single UTF-16\n          // character. In reality, a full Unicode grapheme cluster consisting of multiple UTF-16 characters\n          // or code points may be deleted. However, in our currently supported locales, there are no such cases.\n          // If we support additional locales in the future, this may need to change.\n          nextValue = input.selectionEnd === input.selectionStart\n            ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1)\n            : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteContentBackward':\n          nextValue = input.selectionEnd === input.selectionStart\n            ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart)\n            : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteSoftLineBackward':\n        case 'deleteHardLineBackward':\n          nextValue = input.value.slice(input.selectionStart);\n          break;\n        default:\n          if (e.data != null) {\n            nextValue =\n              input.value.slice(0, input.selectionStart) +\n              e.data +\n              input.value.slice(input.selectionEnd);\n          }\n          break;\n      }\n\n      // If we did not compute a value, or the new value is invalid, prevent the event\n      // so that the browser does not update the input text, move the selection, or add to\n      // the undo/redo stack.\n      if (nextValue == null || !state.validate(nextValue)) {\n        e.preventDefault();\n      }\n    };\n\n    input.addEventListener('beforeinput', onBeforeInput, false);\n    return () => {\n      input.removeEventListener('beforeinput', onBeforeInput, false);\n    };\n  }, [inputRef, stateRef]);\n\n  let onBeforeInput = !supportsNativeBeforeInputEvent()\n    ? e => {\n      let nextValue =\n        e.target.value.slice(0, e.target.selectionStart) +\n        e.data +\n        e.target.value.slice(e.target.selectionEnd);\n\n      if (!state.validate(nextValue)) {\n        e.preventDefault();\n      }\n    }\n    : null;\n\n  let {labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps} = useTextField(props, inputRef);\n\n  let compositionStartState = useRef(null);\n  return {\n    inputProps: mergeProps(\n      textFieldProps,\n      {\n        onBeforeInput,\n        onCompositionStart() {\n          // Chrome does not implement Input Events Level 2, which specifies the insertFromComposition\n          // and deleteByComposition inputType values for the beforeinput event. These are meant to occur\n          // at the end of a composition (e.g. Pinyin IME, Android auto correct, etc.), and crucially, are\n          // cancelable. The insertCompositionText and deleteCompositionText input types are not cancelable,\n          // nor would we want to cancel them because the input from the user is incomplete at that point.\n          // In Safari, insertFromComposition/deleteFromComposition will fire, however, allowing us to cancel\n          // the final composition result if it is invalid. As a fallback for Chrome and Firefox, which either\n          // don't support Input Events Level 2, or beforeinput at all, we store the state of the input when\n          // the compositionstart event fires, and undo the changes in compositionend (below) if it is invalid.\n          // Unfortunately, this messes up the undo/redo stack, but until insertFromComposition/deleteByComposition\n          // are implemented, there is no other way to prevent composed input.\n          // See https://bugs.chromium.org/p/chromium/issues/detail?id=1022204\n          let {value, selectionStart, selectionEnd} = inputRef.current;\n          compositionStartState.current = {value, selectionStart, selectionEnd};\n        },\n        onCompositionEnd() {\n          if (!state.validate(inputRef.current.value)) {\n            // Restore the input value in the DOM immediately so we can synchronously update the selection position.\n            // But also update the value in React state as well so it is correct for future updates.\n            let {value, selectionStart, selectionEnd} = compositionStartState.current;\n            inputRef.current.value = value;\n            inputRef.current.setSelectionRange(selectionStart, selectionEnd);\n            state.setInputValue(value);\n          }\n        }\n      }\n    ),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}