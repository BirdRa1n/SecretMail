{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"ratio\",\"children\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{default as Box}from\"../../primitives/Box\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{usePropsResolution}from\"../../../hooks\";var AspectView=forwardRef(function(props,ref){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),layout=_React$useState2[0],setLayout=_React$useState2[1];var aspectViewStyle=[StyleSheet.flatten(props.style)||{}];if(layout){var _layout$width=layout.width,width=_layout$width===void 0?0:_layout$width,_layout$height=layout.height,height=_layout$height===void 0?0:_layout$height;if(width===0){aspectViewStyle.push({width:height*props.aspectRatio,height:height});}else{aspectViewStyle.push({width:width,height:width/props.aspectRatio});}}return React.createElement(Box,_extends({ref:ref},props,{style:aspectViewStyle,onLayout:function onLayout(_ref){var inLayout=_ref.nativeEvent.layout;return setLayout(inLayout);}}));});var AspectRatio=function AspectRatio(props,ref){var _children$props;var _usePropsResolution=usePropsResolution('AspectRatio',props,{},{resolveResponsively:['ratio']}),ratio=_usePropsResolution.ratio,_usePropsResolution$c=_usePropsResolution.children,children=_usePropsResolution$c===void 0?React.createElement(React.Fragment,null):_usePropsResolution$c,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded);var computedStyle=resolvedProps.style;var newChildWithProps=React.cloneElement(children,_objectSpread(_objectSpread({},children===null||children===void 0?void 0:children.props),{},{style:StyleSheet.absoluteFillObject}),children===null||children===void 0?void 0:(_children$props=children.props)===null||_children$props===void 0?void 0:_children$props.children);if(useHasResponsiveProps(resolvedProps)){return null;}if(Platform.OS==='web'){return React.createElement(AspectView,_extends({aspectRatio:ratio},resolvedProps,{ref:ref}),newChildWithProps);}else{computedStyle=StyleSheet.flatten([{style:resolvedProps.style},{aspectRatio:ratio}]);return React.createElement(Box,_extends({},resolvedProps,{style:computedStyle,ref:ref}),newChildWithProps);}};export default memo(forwardRef(AspectRatio));","map":{"version":3,"sources":["index.tsx"],"names":["default","AspectView","forwardRef","React","aspectViewStyle","StyleSheet","props","width","height","aspectRatio","ref","nativeEvent","layout","inLayout","setLayout","AspectRatio","children","resolvedProps","usePropsResolution","resolveResponsively","computedStyle","newChildWithProps","style","absoluteFillObject","useHasResponsiveProps","Platform","ratio","memo"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { StyleSheet, ViewStyle, Platform } from 'react-native';\nimport { default as Box } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IAspectRatioProps } from './types';\n\nconst AspectView = forwardRef((props: any, ref?: any) => {\n  const [layout, setLayout] = React.useState();\n  const aspectViewStyle = [StyleSheet.flatten(props.style) || {}];\n  if (layout) {\n    // @ts-ignore\n    let { width = 0, height = 0 } = layout;\n    if (width === 0) {\n      aspectViewStyle.push({ width: height * props.aspectRatio, height });\n    } else {\n      aspectViewStyle.push({ width, height: width / props.aspectRatio });\n    }\n  }\n\n  return (\n    <Box\n      ref={ref}\n      {...props}\n      style={aspectViewStyle}\n      onLayout={({ nativeEvent: { layout: inLayout } }: any) =>\n        setLayout(inLayout)\n      }\n    />\n  );\n});\n\nconst AspectRatio = (props: IAspectRatioProps, ref?: any) => {\n  const { ratio, children = <></>, ...resolvedProps } = usePropsResolution(\n    'AspectRatio',\n    props,\n    {},\n    { resolveResponsively: ['ratio'] }\n  );\n  let computedStyle: ViewStyle | undefined = resolvedProps.style;\n  const newChildWithProps = React.cloneElement(\n    children,\n    {\n      ...children?.props,\n      style: StyleSheet.absoluteFillObject,\n    },\n    children?.props?.children\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n  // DOC:  It uses a aspectRatio property of React Native and manually calculate on Web\n  if (Platform.OS === 'web') {\n    return (\n      <AspectView aspectRatio={ratio} {...resolvedProps} ref={ref}>\n        {newChildWithProps}\n      </AspectView>\n    );\n  } else {\n    computedStyle = StyleSheet.flatten([\n      { style: resolvedProps.style },\n      { aspectRatio: ratio },\n    ]);\n    return (\n      <Box {...resolvedProps} style={computedStyle} ref={ref}>\n        {newChildWithProps}\n      </Box>\n    );\n  }\n};\n\nexport default memo(forwardRef(AspectRatio));\n"]},"metadata":{},"sourceType":"module"}