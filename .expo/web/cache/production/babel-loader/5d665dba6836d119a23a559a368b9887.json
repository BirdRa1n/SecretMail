{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"inputProps\",\"combinedProps\",\"children\",\"wrapperRef\",\"isHovered\",\"isFocusVisible\"],_excluded2=[\"_interactionBox\",\"_icon\",\"_stack\",\"_text\"],_excluded3=[\"icon\",\"children\",\"wrapperRef\",\"isHovered\",\"isFocusVisible\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Box from\"../Box\";import{Stack}from\"../Stack\";import{Center}from\"../../composites/Center\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{wrapStringChild}from\"../../../utils/wrapStringChild\";import{mergeRefs}from\"./../../../utils\";import{useHover}from'@react-native-aria/interactions';import{useRadio}from'@react-native-aria/radio';import{VisuallyHidden}from'@react-aria/visually-hidden';import{RadioContext}from\"./RadioGroup\";import{useFocusRing}from'@react-native-aria/focus';import{CircleIcon}from\"../Icon/Icons\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{combineContextAndProps,isEmptyObj}from\"../../../utils\";import{useFormControlContext}from\"../../composites/FormControl\";var RadioComponent=memo(forwardRef(function(_ref2,ref){var icon=_ref2.icon,inputProps=_ref2.inputProps,combinedProps=_ref2.combinedProps,children=_ref2.children,wrapperRef=_ref2.wrapperRef,isHoveredProp=_ref2.isHovered,isFocusVisibleProp=_ref2.isFocusVisible,props=_objectWithoutProperties(_ref2,_excluded);var isInvalid=combinedProps.isInvalid,isReadOnly=combinedProps.isReadOnly,isIndeterminate=combinedProps.isIndeterminate;var isDisabled=inputProps.disabled,isChecked=inputProps.checked;var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var mergedRefs=mergeRefs([_ref,wrapperRef]);var _useFocusRing=useFocusRing(),focusProps=_useFocusRing.focusProps,isFocusVisible=_useFocusRing.isFocusVisible;var _usePropsResolution=usePropsResolution('Radio',combinedProps,{isInvalid:isInvalid,isReadOnly:isReadOnly,isFocusVisible:isFocusVisibleProp||isFocusVisible,isDisabled:isDisabled,isIndeterminate:isIndeterminate,isChecked:isChecked,isHovered:isHoveredProp||isHovered}),_interactionBox=_usePropsResolution._interactionBox,_icon=_usePropsResolution._icon,_stack=_usePropsResolution._stack,_text=_usePropsResolution._text,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var sizedIcon=function sizedIcon(){return React.cloneElement(icon,_objectSpread({},_icon));};var component=React.createElement(Stack,_stack,React.createElement(Center,null,React.createElement(Box,_interactionBox),React.createElement(Center,resolvedProps,icon&&sizedIcon&&isChecked?sizedIcon():React.createElement(CircleIcon,_extends({},_icon,{opacity:isChecked?1:0})))),wrapStringChild(children,_text));if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,{accessibilityRole:\"label\",ref:mergedRefs},React.createElement(VisuallyHidden,null,React.createElement(\"input\",_extends({},inputProps,focusProps,{ref:ref}))),component);}));var Radio=function Radio(_ref3,ref){var icon=_ref3.icon,children=_ref3.children,wrapperRef=_ref3.wrapperRef,isHoveredProp=_ref3.isHovered,isFocusVisibleProp=_ref3.isFocusVisible,props=_objectWithoutProperties(_ref3,_excluded3);var _contextState$state;var formControlContext=useFormControlContext();var contextState=React.useContext(RadioContext);var combinedProps=combineContextAndProps(_objectSpread(_objectSpread({},formControlContext),contextState),props);var inputRef=React.useRef(null);var radioState=useRadio(_objectSpread(_objectSpread({},combinedProps),{},{'aria-label':props.accessibilityLabel,children:children}),(_contextState$state=contextState.state)!==null&&_contextState$state!==void 0?_contextState$state:{},inputRef);var inputProps=React.useMemo(function(){return radioState.inputProps;},[radioState.inputProps.checked,radioState.inputProps.disabled]);var _React$useState=React.useState(_objectSpread({},combinedProps)),_React$useState2=_slicedToArray(_React$useState,1),contextCombinedProps=_React$useState2[0];if(useHasResponsiveProps(props)){return null;}if(isEmptyObj(contextState)){console.error('Error: Radio must be wrapped inside a Radio.Group');return React.createElement(React.Fragment,null);}return React.createElement(RadioComponent,{inputProps:inputProps,combinedProps:contextCombinedProps,children:children,ref:ref,icon:icon,wrapperRef:wrapperRef,isHovered:isHoveredProp,isFocusVisible:isFocusVisibleProp});};export default memo(forwardRef(Radio));","map":{"version":3,"sources":["Radio.web.tsx"],"names":["RadioComponent","memo","forwardRef","isHovered","isFocusVisible","props","isIndeterminate","disabled","checked","isChecked","_ref","React","useHover","mergedRefs","mergeRefs","useFocusRing","resolvedProps","usePropsResolution","isInvalid","isReadOnly","isFocusVisibleProp","isDisabled","isHoveredProp","sizedIcon","_icon","component","icon","wrapStringChild","useHasResponsiveProps","ref","Radio","formControlContext","useFormControlContext","contextState","combinedProps","combineContextAndProps","inputRef","radioState","useRadio","children","inputProps","isEmptyObj","console"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport { Stack } from '../Stack';\nimport { Center } from '../../composites/Center';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { wrapStringChild } from '../../../utils/wrapStringChild';\nimport type { IRadioProps } from './types';\nimport { mergeRefs } from './../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useRadio } from '@react-native-aria/radio';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { RadioContext } from './RadioGroup';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CircleIcon } from '../Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps, isEmptyObj } from '../../../utils';\nimport { useFormControlContext } from '../../composites/FormControl';\n\nconst RadioComponent = memo(\n  forwardRef(\n    (\n      {\n        icon,\n        inputProps,\n        combinedProps,\n        children,\n        wrapperRef,\n        isHovered: isHoveredProp,\n        isFocusVisible: isFocusVisibleProp,\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const { isInvalid, isReadOnly, isIndeterminate } = combinedProps;\n      const { disabled: isDisabled, checked: isChecked } = inputProps;\n      const _ref = React.useRef(null);\n      const { isHovered } = useHover({}, _ref);\n      const mergedRefs = mergeRefs([_ref, wrapperRef]);\n      const { focusProps, isFocusVisible } = useFocusRing();\n\n      const {\n        _interactionBox,\n        _icon,\n        _stack,\n        _text,\n        ...resolvedProps\n      } = usePropsResolution('Radio', combinedProps, {\n        isInvalid,\n        isReadOnly,\n        isFocusVisible: isFocusVisibleProp || isFocusVisible,\n        isDisabled,\n        isIndeterminate,\n        isChecked,\n        isHovered: isHoveredProp || isHovered,\n      });\n\n      // only calling below function when icon exist.\n      const sizedIcon = () =>\n        //@ts-ignore\n        React.cloneElement(icon, {\n          ..._icon,\n        });\n\n      const component = (\n        <Stack {..._stack}>\n          <Center>\n            {/* Interaction Box */}\n            <Box {..._interactionBox} />\n            {/* Radio */}\n            <Center {...resolvedProps}>\n              {icon && sizedIcon && isChecked ? (\n                sizedIcon()\n              ) : (\n                <CircleIcon {..._icon} opacity={isChecked ? 1 : 0} />\n              )}\n            </Center>\n          </Center>\n          {wrapStringChild(children, _text)}\n        </Stack>\n      );\n      //TODO: refactor for responsive prop\n      if (useHasResponsiveProps(props)) {\n        return null;\n      }\n\n      return (\n        <Box\n          // @ts-ignore - RN web supports accessibilityRole=\"label\"\n          accessibilityRole=\"label\"\n          ref={mergedRefs}\n        >\n          <VisuallyHidden>\n            <input {...inputProps} {...focusProps} ref={ref} />\n          </VisuallyHidden>\n          {component}\n        </Box>\n      );\n    }\n  )\n);\n\nconst Radio = (\n  {\n    icon,\n    children,\n    wrapperRef,\n    isHovered: isHoveredProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: IRadioProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const contextState = React.useContext(RadioContext);\n\n  const combinedProps = combineContextAndProps(\n    { ...formControlContext, ...contextState },\n    props\n  );\n\n  const inputRef = React.useRef(null);\n  const radioState = useRadio(\n    { ...combinedProps, 'aria-label': props.accessibilityLabel, children },\n    contextState.state ?? {},\n    inputRef\n  );\n\n  //@ts-ignore\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const inputProps = React.useMemo(() => radioState.inputProps, [\n    radioState.inputProps.checked,\n    radioState.inputProps.disabled,\n  ]);\n\n  const [contextCombinedProps] = React.useState({\n    ...combinedProps,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (isEmptyObj(contextState)) {\n    console.error('Error: Radio must be wrapped inside a Radio.Group');\n    return <></>;\n  }\n\n  return (\n    <RadioComponent\n      inputProps={inputProps}\n      combinedProps={contextCombinedProps}\n      children={children}\n      ref={ref}\n      icon={icon}\n      wrapperRef={wrapperRef}\n      isHovered={isHoveredProp}\n      isFocusVisible={isFocusVisibleProp}\n    />\n  );\n};\n\nexport default memo(forwardRef(Radio));\n"]},"metadata":{},"sourceType":"module"}