{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{usePropsResolution}from\"../../../hooks\";import React,{useContext,memo,forwardRef,useEffect}from'react';import{default as Box}from\"../../primitives/Box\";import{PopoverContext}from\"./PopoverContext\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var PopoverBody=function PopoverBody(props,ref){var resolvedProps=usePropsResolution('PopoverBody',props);var _useContext=useContext(PopoverContext),setBodyMounted=_useContext.setBodyMounted,bodyId=_useContext.bodyId;useEffect(function(){setBodyMounted(true);return function(){setBodyMounted(false);};},[setBodyMounted]);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({nativeID:bodyId},resolvedProps,{ref:ref}));};export default memo(forwardRef(PopoverBody));","map":{"version":3,"sources":["PopoverBody.tsx"],"names":["default","PopoverBody","resolvedProps","usePropsResolution","bodyId","useContext","useEffect","setBodyMounted","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":"uRAAA,OAAA,kBAAA,sBACA,MAAA,CAAA,KAAA,EAAA,UAAA,CAAA,IAAA,CAAA,UAAA,CAAA,SAAA,KAAA,OAAA,CACA,OAASA,OAAO,GAAhB,CAAA,GAAA,4BACA,OAAA,cAAA,wBACA,OAAA,qBAAA,4CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,KAAA,CAAA,GAAA,CAAiC,CACnD,GAAMC,CAAAA,aAAa,CAAGC,kBAAkB,CAAA,aAAA,CAAxC,KAAwC,CAAxC,CACA,gBAAmCE,UAAU,CAA7C,cAA6C,CAA7C,CAAM,cAAN,aAAM,cAAN,CAAwBD,MAAxB,aAAwBA,MAAxB,CAEAE,SAAS,CAAC,UAAM,CACdC,cAAc,CAAdA,IAAc,CAAdA,CACA,MAAO,WAAM,CACXA,cAAc,CAAdA,KAAc,CAAdA,CADF,CAAA,CAFO,CAAA,CAKN,CATgD,cAShD,CALM,CAATD,CAQA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAK,QAAQ,CAAEJ,MAAf,CAAA,CAAA,aAAA,CAAA,CAA0C,GAAG,CAAEK,GAA/C,CAAA,CAAA,CAAP,CAfF,CAAA,CAkBA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,WAA8B,CAAX,CAAnB","sourcesContent":["import { usePropsResolution } from '../../../hooks';\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const { setBodyMounted, bodyId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={bodyId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverBody));\n"]},"metadata":{},"sourceType":"module"}