{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import StackMain from\"./Stack\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var VStack=function VStack(props,ref){var resolvedProps=usePropsResolution('VStack',props);if(useHasResponsiveProps(props)){return null;}return React.createElement(StackMain,_extends({ref:ref},resolvedProps));};export default memo(forwardRef(VStack));","map":{"version":3,"sources":["VStack.tsx"],"names":["VStack","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":"uRAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,MAAA,CAAA,SAAA,eACA,OAAA,kBAAA,oCAEA,OAAA,qBAAA,4CAaA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAA,KAAA,CAAA,GAAA,CAAoC,CACjD,GAAMC,CAAAA,aAAa,CAAGC,kBAAkB,CAAA,QAAA,CADS,KACT,CAAxC,CAEA,GAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAW,GAAG,CAAEC,GAAhB,CAAA,CAAP,aAAO,CAAA,CAAP,CANF,CAAA,CASA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,MAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport StackMain, { InterfaceStackProps } from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { CustomProps, ResponsiveValue } from '../../types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface InterfaceVStackProps extends InterfaceStackProps {\n  /**\n   * The direction of the Stack Items.\n   * @default column\n   */\n  direction?: ResponsiveValue<\n    'column' | 'row' | 'column-reverse' | 'row-reverse'\n  >;\n}\n\nexport type IVStackProps = InterfaceVStackProps & CustomProps<'VStack'>;\n\nconst VStack = (props: IVStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('VStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StackMain ref={ref} {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(VStack));\n"]},"metadata":{},"sourceType":"module"}