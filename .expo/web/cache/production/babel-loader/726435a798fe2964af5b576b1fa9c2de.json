{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"type\",\"defaultValue\",\"value\",\"onChange\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import MenuGroup from\"./MenuGroup\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var MenuOptionContext=React.createContext({values:[],onChange:function onChange(_val){},type:'checkbox'});var MenuOptionGroup=function MenuOptionGroup(_ref,ref){var type=_ref.type,defaultValue=_ref.defaultValue,value=_ref.value,onChange=_ref.onChange,props=_objectWithoutProperties(_ref,_excluded);var internalDefaultValue=defaultValue?Array.isArray(defaultValue)?defaultValue:[defaultValue]:[];var _React$useState=React.useState(internalDefaultValue),_React$useState2=_slicedToArray(_React$useState,2),internalValues=_React$useState2[0],setValues=_React$useState2[1];var _onChange=function _onChange(newValue){if(type==='checkbox'){var newValues=_toConsumableArray(internalValues);if(internalValues.includes(newValue)){newValues.splice(newValues.indexOf(newValue),1);setValues(newValues);}else{newValues.push(newValue);setValues(newValues);}onChange&&onChange(newValues);}else if(type==='radio'){setValues([newValue]);onChange&&onChange(newValue);}};if(useHasResponsiveProps(props)){return null;}return React.createElement(MenuOptionContext.Provider,{value:{values:!value?internalValues:Array.isArray(value)?value:[value],onChange:_onChange,type:type}},React.createElement(MenuGroup,_extends({},props,{ref:ref})));};export default memo(forwardRef(MenuOptionGroup));","map":{"version":3,"sources":["MenuOptionGroup.tsx"],"names":["MenuOptionContext","values","onChange","_val","type","MenuOptionGroup","props","internalDefaultValue","defaultValue","Array","React","_onChange","newValue","newValues","internalValues","setValues","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":"+iBAAA,MAAA,CAAA,KAAA,EAAA,UAAA,CAAA,IAAA,KAAA,OAAA,CACA,MAAA,CAAA,SAAA,mBAEA,OAAA,qBAAA,4CAEA,MAAO,IAAMA,CAAAA,iBAAiB,CAAG,KAAK,CAAL,aAAA,CAA6C,CAC5EC,MAAM,CADsE,EAAA,CAE5EC,QAAQ,CAAGC,kBAAAA,IAAD,CAAU,CAFwD,CAAA,CAG5EC,IAAI,CAAE,UAHsE,CAA7C,CAA1B,CAMP,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAA,GAAA,CAGnB,IAFH,CAAA,IAEG,MAFH,IAEG,CAFH,YAEG,MAFH,YAEG,CAFH,KAEG,MAFH,KAEG,CAFH,QAEG,MAFH,QAEG,CAFuCC,KAEvC,0CACH,GAAMC,CAAAA,oBAAoB,CAAGC,YAAY,CACrCC,KAAK,CAALA,OAAAA,CAAAA,YAAAA,EAAAA,YAAAA,CAEE,CAHmC,YAGnC,CAHmC,CAAzC,EAAA,CAMA,oBAAoCC,KAAK,CAALA,QAAAA,CAApC,oBAAoCA,CAApC,oDAAM,cAAN,qBAAM,SAAN,qBAGA,GAAMC,CAAAA,SAAS,CAAIC,QAAbD,CAAAA,SAAaC,CAAAA,QAAD,CAA+B,CAC/C,GAAIR,IAAI,GAAR,UAAA,CAAyB,CACvB,GAAMS,CAAAA,SAAS,oBAAf,cAAe,CAAf,CACA,GAAIC,cAAc,CAAdA,QAAAA,CAAJ,QAAIA,CAAJ,CAAuC,CACrCD,SAAS,CAATA,MAAAA,CAAiBA,SAAS,CAATA,OAAAA,CAAjBA,QAAiBA,CAAjBA,CAAAA,CAAAA,EACAE,SAAS,CAATA,SAAS,CAATA,CAFF,CAAA,IAGO,CACLF,SAAS,CAATA,IAAAA,CAAAA,QAAAA,EACAE,SAAS,CAATA,SAAS,CAATA,CACD,CACDb,QAAQ,EAAIA,QAAQ,CAApBA,SAAoB,CAApBA,CATF,CAAA,IAUO,IAAIE,IAAI,GAAR,OAAA,CAAsB,CAC3BW,SAAS,CAAC,CAAVA,QAAU,CAAD,CAATA,CACAb,QAAQ,EAAIA,QAAQ,CAApBA,QAAoB,CAApBA,CACD,CAxBA,CAUH,CAiBA,GAAIc,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,iBAAD,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACLf,MAAM,CAAE,CAAA,KAAA,CAAA,cAAA,CAEJQ,KAAK,CAALA,OAAAA,CAAAA,KAAAA,EAAAA,KAAAA,CAEA,CALC,KAKD,CALC,CAMLP,QAAQ,CANH,SAAA,CAOLE,IAAAA,CAAAA,IAPK,CADT,CAAA,CAWE,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAsB,GAAG,CAAEa,GAA3B,CAAA,CAAA,CAXF,CADF,CAjCF,CAAA,CAkDA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,eAA8B,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport MenuGroup from './MenuGroup';\nimport type { IMenuOptionGroupProps, IMenuOptionContextProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const MenuOptionContext = React.createContext<IMenuOptionContextProps>({\n  values: [],\n  onChange: (_val) => {},\n  type: 'checkbox',\n});\n\nconst MenuOptionGroup = (\n  { type, defaultValue, value, onChange, ...props }: IMenuOptionGroupProps,\n  ref?: any\n) => {\n  const internalDefaultValue = defaultValue\n    ? Array.isArray(defaultValue)\n      ? defaultValue\n      : [defaultValue]\n    : [];\n\n  const [internalValues, setValues] = React.useState<Array<string | number>>(\n    internalDefaultValue\n  );\n  const _onChange = (newValue: string | number) => {\n    if (type === 'checkbox') {\n      const newValues = [...internalValues];\n      if (internalValues.includes(newValue)) {\n        newValues.splice(newValues.indexOf(newValue), 1);\n        setValues(newValues);\n      } else {\n        newValues.push(newValue);\n        setValues(newValues);\n      }\n      onChange && onChange(newValues);\n    } else if (type === 'radio') {\n      setValues([newValue]);\n      onChange && onChange(newValue);\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <MenuOptionContext.Provider\n      value={{\n        values: !value\n          ? internalValues\n          : Array.isArray(value)\n          ? value\n          : [value],\n        onChange: _onChange,\n        type,\n      }}\n    >\n      <MenuGroup {...props} ref={ref} />\n    </MenuOptionContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(MenuOptionGroup));\n"]},"metadata":{},"sourceType":"module"}