{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _INITIAL_PROP_SPECIFI;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import merge from'lodash.merge';var SPECIFICITY_1000=1000;var SPECIFICITY_110=110;var SPECIFICITY_100=100;var SPECIFICITY_70=70;var SPECIFICITY_60=60;var SPECIFICITY_55=55;var SPECIFICITY_50=50;var SPECIFICITY_40=40;var SPECIFICITY_30=30;var SPECIFICITY_20=20;var SPECIFICITY_10=10;var specificityPrecedence=[SPECIFICITY_1000,SPECIFICITY_110,SPECIFICITY_100,SPECIFICITY_70,SPECIFICITY_60,SPECIFICITY_55,SPECIFICITY_50,SPECIFICITY_40,SPECIFICITY_30,SPECIFICITY_20,SPECIFICITY_10];var INITIAL_PROP_SPECIFICITY=(_INITIAL_PROP_SPECIFI={},_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_1000,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_110,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_100,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_70,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_60,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_50,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_55,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_40,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_30,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_20,0),_defineProperty(_INITIAL_PROP_SPECIFI,SPECIFICITY_10,0),_INITIAL_PROP_SPECIFI);var pseudoPropsMap={_web:{dependentOn:'platform',priority:SPECIFICITY_10},_ios:{dependentOn:'platform',priority:SPECIFICITY_10},_android:{dependentOn:'platform',priority:SPECIFICITY_10},_light:{dependentOn:'colormode',priority:SPECIFICITY_10},_dark:{dependentOn:'colormode',priority:SPECIFICITY_10},_indeterminate:{dependentOn:'state',respondTo:'isIndeterminate',priority:SPECIFICITY_30},_checked:{dependentOn:'state',respondTo:'isChecked',priority:SPECIFICITY_30},_readOnly:{dependentOn:'state',respondTo:'isReadOnly',priority:SPECIFICITY_30},_invalid:{dependentOn:'state',respondTo:'isInvalid',priority:SPECIFICITY_40},_focus:{dependentOn:'state',respondTo:'isFocused',priority:SPECIFICITY_50},_focusVisible:{dependentOn:'state',respondTo:'isFocusVisible',priority:SPECIFICITY_55},_hover:{dependentOn:'state',respondTo:'isHovered',priority:SPECIFICITY_60},_pressed:{dependentOn:'state',respondTo:'isPressed',priority:SPECIFICITY_70},_disabled:{dependentOn:'state',respondTo:'isDisabled',priority:SPECIFICITY_100},_loading:{dependentOn:'state',respondTo:'isLoading',priority:SPECIFICITY_110},_important:{dependentOn:null,priority:SPECIFICITY_1000}};export var compareSpecificity=function compareSpecificity(exisiting,upcoming,ignorebaseTheme){if(!exisiting)return true;if(!upcoming)return false;var condition=ignorebaseTheme?specificityPrecedence.length-1:specificityPrecedence.length;for(var index=0;index<condition;index++){if(exisiting[specificityPrecedence[index]]>upcoming[specificityPrecedence[index]]){return false;}else if(exisiting[specificityPrecedence[index]]<upcoming[specificityPrecedence[index]]){return true;}}return true;};var shouldResolvePseudoProp=function shouldResolvePseudoProp(_ref){var property=_ref.property,state=_ref.state,platform=_ref.platform,colormode=_ref.colormode;if(pseudoPropsMap[property].dependentOn==='platform'){return property===\"_\".concat(platform);}else if(pseudoPropsMap[property].dependentOn==='colormode'){return property===\"_\".concat(colormode);}else if(pseudoPropsMap[property].dependentOn==='state'){return state[pseudoPropsMap[property].respondTo];}else if(pseudoPropsMap[property].dependentOn===null){return true;}else{return false;}};var simplifyProps=function simplifyProps(_ref2){var props=_ref2.props,colormode=_ref2.colormode,platform=_ref2.platform,state=_ref2.state,currentSpecificity=_ref2.currentSpecificity,previouslyFlattenProps=_ref2.previouslyFlattenProps,cascadePseudoProps=_ref2.cascadePseudoProps;var flattenProps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var specificityMap=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var priority=arguments.length>3?arguments[3]:undefined;var mergePsuedoProps=function mergePsuedoProps(property,propertySpecity){if(compareSpecificity(specificityMap[property],propertySpecity,false)){if(process.env.NODE_ENV==='development'&&props.debug){console.log(\"%c \".concat(property),'color: #818cf8;','updated as internal prop with higher specificity');}specificityMap[property]=propertySpecity;flattenProps[property]=merge({},flattenProps[property],props[property]);}else{if(process.env.NODE_ENV==='development'&&props.debug){console.log(\"%c \".concat(property),'color: #818cf8;','updated as internal prop with lower specificity');}flattenProps[property]=merge({},props[property],flattenProps[property]);}};for(var property in props){var _pseudoPropsMap$prope;var propertySpecity=currentSpecificity?_objectSpread({},currentSpecificity):_objectSpread(_objectSpread({},INITIAL_PROP_SPECIFICITY),{},_defineProperty({},SPECIFICITY_20,priority));if(state[(_pseudoPropsMap$prope=pseudoPropsMap[property])===null||_pseudoPropsMap$prope===void 0?void 0:_pseudoPropsMap$prope.respondTo]||['_dark','_light','_web','_ios','_android','_important'].includes(property)){if(shouldResolvePseudoProp({property:property,state:state,platform:platform,colormode:colormode})){if(process.env.NODE_ENV==='development'&&props.debug){console.log(\"%c \".concat(property),'color: #818cf8;','recursively resolving');}propertySpecity[pseudoPropsMap[property].priority]++;simplifyProps({props:props[property],colormode:colormode,platform:platform,state:state,currentSpecificity:propertySpecity,previouslyFlattenProps:previouslyFlattenProps,cascadePseudoProps:cascadePseudoProps},flattenProps,specificityMap,priority);}}else if(pseudoPropsMap[property]===undefined){if(property.startsWith('_')){mergePsuedoProps(property,propertySpecity);}else{if(compareSpecificity(specificityMap[property],propertySpecity,false)){if(process.env.NODE_ENV==='development'&&props.debug){console.log(\"%c \".concat(property),'color: #818cf8;','updated as simple prop');}specificityMap[property]=propertySpecity;flattenProps[property]=props[property];}else{if(process.env.NODE_ENV==='development'&&props.debug){console.log(\"%c \".concat(property),'color: #818cf8;','ignored');}}}}else{if(!cascadePseudoProps){delete flattenProps[property];if(process.env.NODE_ENV==='development'&&props.debug){console.log(\"%c \".concat(property),'color: #818cf8;','deleted');}}else{if(process.env.NODE_ENV==='development'&&props.debug){console.log(\"%c \".concat(property),'color: #818cf8;','cascaded');}mergePsuedoProps(property,propertySpecity);}}}};export var propsFlattener=function propsFlattener(_ref3,priority){var props=_ref3.props,colormode=_ref3.colormode,platform=_ref3.platform,state=_ref3.state,currentSpecificityMap=_ref3.currentSpecificityMap,previouslyFlattenProps=_ref3.previouslyFlattenProps,cascadePseudoProps=_ref3.cascadePseudoProps;var flattenProps={};for(var property in props){var _pseudoPropsMap$prope2;if(state[(_pseudoPropsMap$prope2=pseudoPropsMap[property])===null||_pseudoPropsMap$prope2===void 0?void 0:_pseudoPropsMap$prope2.respondTo]===undefined&&property.startsWith('_')){flattenProps[property]=previouslyFlattenProps[property];}}var specificityMap=currentSpecificityMap||{};simplifyProps({props:props,colormode:colormode,platform:platform,state:state,currentSpecificityMap:currentSpecificityMap,previouslyFlattenProps:previouslyFlattenProps,cascadePseudoProps:cascadePseudoProps},flattenProps,specificityMap,priority);return[flattenProps,specificityMap];};","map":{"version":3,"sources":["propsFlattener.tsx"],"names":["SPECIFICITY_1000","SPECIFICITY_110","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_20","SPECIFICITY_10","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","_loading","_important","compareSpecificity","condition","ignorebaseTheme","index","exisiting","upcoming","shouldResolvePseudoProp","colormode","property","state","simplifyProps","cascadePseudoProps","flattenProps","specificityMap","mergePsuedoProps","process","props","console","merge","propertySpecity","currentSpecificity","platform","previouslyFlattenProps","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_1000 = 1000;\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\n// SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\nconst SPECIFICITY_20 = 20;\nconst SPECIFICITY_10 = 10;\nconst specificityPrecedence = [\n  SPECIFICITY_1000,\n  SPECIFICITY_110,\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_20,\n  SPECIFICITY_10,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_1000]: 0,\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_20]: 0,\n  [SPECIFICITY_10]: 0,\n};\n\nconst pseudoPropsMap = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110,\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000,\n  },\n} as const;\n\ntype IPseudoPropsMap = typeof pseudoPropsMap;\ntype ExtractState<T extends IPseudoPropsMap> = {\n  // @ts-ignore\n  [P in keyof T as T[P]['respondTo']]?: boolean;\n};\nexport type IStateProps = ExtractState<IPseudoPropsMap>;\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: {\n  property: keyof IPseudoPropsMap;\n  state: IStateProps;\n  platform: any;\n  colormode: any;\n}) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  const mergePsuedoProps = (property: string, propertySpecity: object) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with higher specificity'\n        );\n      }\n      specificityMap[property] = propertySpecity;\n      // merging internal props (like, _text, _stack ...)\n      flattenProps[property] = merge(\n        {},\n        flattenProps[property],\n        props[property]\n      );\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with lower specificity'\n        );\n      }\n      flattenProps[property] = merge(\n        {},\n        props[property],\n        flattenProps[property]\n      );\n    }\n  };\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_20]: priority,\n        };\n\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(\n        property\n      )\n    ) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\n            `%c ${property}`,\n            'color: #818cf8;',\n            'recursively resolving'\n          );\n        }\n        // @ts-ignore\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n            cascadePseudoProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n      // @ts-ignore\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\n              `%c ${property}`,\n              'color: #818cf8;',\n              'updated as simple prop'\n            );\n          }\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(`%c ${property}`, 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'cascaded');\n        }\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n      cascadePseudoProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]},"metadata":{},"sourceType":"module"}