{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"size\",\"_checkbox\",\"colorScheme\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{createContext,memo,forwardRef}from'react';import{useCheckboxGroupState}from'@react-stately/checkbox';import{useCheckboxGroup}from'@react-native-aria/checkbox';import{useFormControlContext}from\"../../composites/FormControl\";import Box from\"../Box\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";export var CheckboxGroupContext=createContext(null);function CheckboxGroup(_ref,ref){var size=_ref.size,_checkbox=_ref._checkbox,colorScheme=_ref.colorScheme,props=_objectWithoutProperties(_ref,_excluded);var resolvedProps=usePropsResolution('CheckboxGroup',props);var children=props.children;var state=useCheckboxGroupState(props);var _useCheckboxGroup=useCheckboxGroup(_objectSpread({'aria-label':props.accessibilityLabel},props),state),groupProps=_useCheckboxGroup.groupProps;var formControlContext=useFormControlContext();if(useHasResponsiveProps(_objectSpread(_objectSpread({},props),{},{size:size,colorScheme:colorScheme}))){return null;}return React.createElement(CheckboxGroupContext.Provider,{value:_objectSpread(_objectSpread(_objectSpread({size:size,colorScheme:colorScheme},_checkbox),formControlContext),{},{state:state})},React.createElement(Box,_extends({},resolvedProps,groupProps,props,{ref:ref}),children));}export default memo(forwardRef(CheckboxGroup));","map":{"version":3,"sources":["CheckboxGroup.tsx"],"names":["CheckboxGroupContext","createContext","props","resolvedProps","usePropsResolution","children","state","useCheckboxGroupState","groupProps","useCheckboxGroup","formControlContext","useFormControlContext","useHasResponsiveProps","size","colorScheme","ref","memo","forwardRef"],"mappings":"quCAAA,MAAA,CAAA,KAAA,EAAA,aAAA,CAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,qBAAA,KAAA,yBAAA,CACA,OAAA,gBAAA,KAAA,6BAAA,CACA,OAAA,qBAAA,oCAEA,MAAA,CAAA,GAAA,cACA,OAAA,qBAAA,4CACA,OAAA,kBAAA,oCAEA,MAAO,IAAMA,CAAAA,oBAAoB,CAAGC,aAAa,CAA1C,IAA0C,CAA1C,CAIP,QAAA,CAAA,aAAA,MAAA,GAAA,CAGE,IAFA,CAAA,IAEA,MAFA,IAEA,CAFA,SAEA,MAFA,SAEA,CAFA,WAEA,MAFA,WAEA,CAFmCC,KAEnC,0CACA,GAAMC,CAAAA,aAAa,CAAGC,kBAAkB,CAAA,eAAA,CAAxC,KAAwC,CAAxC,CACA,GAAQC,CAAAA,QAAR,CAAA,KAAA,CAAQA,QAAR,CACA,GAAMC,CAAAA,KAAK,CAAGC,qBAAqB,CAAnC,KAAmC,CAAnC,CACA,sBAAuBE,gBAAgB,gBACnC,aAAcP,KAAK,CAArB,kBADqC,EACQA,KADR,EAAvC,KAAuC,CAAvC,CAAQM,UAAR,mBAAQA,UAAR,CAKA,GAAME,CAAAA,kBAAkB,CAAGC,qBAT3B,EASA,CAEA,GAAIC,qBAAqB,gCAAC,KAAD,MAAaC,IAAZ,CAAYA,IAAb,CAAmBC,WAAAA,CAAAA,WAAnB,GAAzB,CAA4D,CAC1D,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAA,QAAA,CAAA,CACE,KAAK,4CAEHD,IAFK,CAELA,IAFG,CAGHC,WAHK,CAGLA,WAHG,EAAE,SAAF,EAAE,kBAAF,MAMHR,KAAAA,CAAAA,KANG,EADP,CAAA,CAUE,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAmD,GAAG,CAAES,GAAxD,CAAA,CAAA,CAXJ,QAWI,CAVF,CADF,CAgBD,CAED,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,aAA8B,CAAX,CAAnB","sourcesContent":["import React, { createContext, memo, forwardRef } from 'react';\nimport { useCheckboxGroupState } from '@react-stately/checkbox';\nimport { useCheckboxGroup } from '@react-native-aria/checkbox';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport type { ICheckboxGroupProps, ICheckboxContext } from './types';\nimport Box from '../Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nexport const CheckboxGroupContext = createContext<ICheckboxContext | null>(\n  null\n);\n\nfunction CheckboxGroup(\n  { size, _checkbox, colorScheme, ...props }: ICheckboxGroupProps,\n  ref?: any\n) {\n  const resolvedProps = usePropsResolution('CheckboxGroup', props);\n  const { children } = props;\n  const state = useCheckboxGroupState(props);\n  const { groupProps } = useCheckboxGroup(\n    { 'aria-label': props.accessibilityLabel, ...props },\n    state\n  );\n\n  const formControlContext = useFormControlContext();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps({ ...props, size, colorScheme })) {\n    return null;\n  }\n  return (\n    <CheckboxGroupContext.Provider\n      value={{\n        //@ts-ignore\n        size,\n        colorScheme,\n        ..._checkbox,\n        ...formControlContext,\n        state,\n      }}\n    >\n      <Box {...resolvedProps} {...groupProps} {...props} ref={ref}>\n        {children}\n      </Box>\n    </CheckboxGroupContext.Provider>\n  );\n}\n\nexport default memo(forwardRef(CheckboxGroup));\n"]},"metadata":{},"sourceType":"module"}