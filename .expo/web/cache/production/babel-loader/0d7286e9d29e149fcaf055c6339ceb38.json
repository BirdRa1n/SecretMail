{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React from'react';import Clipboard from\"react-native-web/dist/exports/Clipboard\";export function useClipboard(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),hasCopied=_React$useState2[0],setHasCopied=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),value=_React$useState4[0],setValue=_React$useState4[1];var onCopy=function onCopy(copiedValue){return _regeneratorRuntime.async(function onCopy$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!Clipboard){_context.next=3;break;}_context.next=3;return _regeneratorRuntime.awrap(Clipboard.setString(copiedValue));case 3:setValue(copiedValue);setHasCopied(true);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};return{value:value,onCopy:onCopy,hasCopied:hasCopied};}","map":{"version":3,"sources":["useClipboard.ts"],"names":["React","onCopy","Clipboard","setValue","setHasCopied","value","hasCopied"],"mappings":"6HAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,+DAGA,MAAO,SAAA,CAAA,YAAA,EAAwB,CAC7B,oBAAkCA,KAAK,CAALA,QAAAA,CAAlC,KAAkCA,CAAlC,oDAAM,SAAN,qBAAM,YAAN,qBACA,qBAA0BA,KAAK,CAALA,QAAAA,CAA1B,EAA0BA,CAA1B,qDAAM,KAAN,qBAAM,QAAN,qBACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAA,WAAA,sHACb,SADa,0EAELC,SAAS,CAATA,SAAAA,CAAN,WAAMA,CAFK,SAIbC,QAAQ,CAARA,WAAQ,CAARA,CACAC,YAAY,CAAZA,IAAY,CAAZA,CALa,qEAAf,CAOA,MAAO,CACLC,KADK,CACLA,KADK,CAELJ,MAFK,CAELA,MAFK,CAGLK,SAAAA,CAAAA,SAHK,CAAP,CAKD","sourcesContent":["import React from 'react';\nimport { Clipboard } from 'react-native';\n\nexport function useClipboard() {\n  const [hasCopied, setHasCopied] = React.useState(false);\n  const [value, setValue] = React.useState<string>('');\n  const onCopy = async (copiedValue: string) => {\n    if (Clipboard) {\n      await Clipboard.setString(copiedValue);\n    }\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n  return {\n    value,\n    onCopy,\n    hasCopied,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}