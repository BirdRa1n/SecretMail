{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{useKeyboardDismissable,usePropsResolution,useToken}from\"../../../hooks\";import React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{Popper}from\"../Popper\";import{PopoverContext}from\"./PopoverContext\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var PopoverContent=React.forwardRef(function(props,ref){var _ref,_ref2,_props$bgColor;var _React$useContext=React.useContext(PopoverContext),onClose=_React$useContext.onClose,initialFocusRef=_React$useContext.initialFocusRef,finalFocusRef=_React$useContext.finalFocusRef,popoverContentId=_React$useContext.popoverContentId,headerMounted=_React$useContext.headerMounted,bodyMounted=_React$useContext.bodyMounted,bodyId=_React$useContext.bodyId,headerId=_React$useContext.headerId,isOpen=_React$useContext.isOpen;var resolvedProps=usePropsResolution('PopoverContent',props);var arrowDefaultColor=(_ref=(_ref2=(_props$bgColor=props.bgColor)!==null&&_props$bgColor!==void 0?_props$bgColor:props.bg)!==null&&_ref2!==void 0?_ref2:props.backgroundColor)!==null&&_ref!==void 0?_ref:resolvedProps.backgroundColor;var color=useToken('colors',arrowDefaultColor);React.useEffect(function(){var finalFocusRefCurrentVal=finalFocusRef===null||finalFocusRef===void 0?void 0:finalFocusRef.current;if(initialFocusRef&&initialFocusRef.current){initialFocusRef.current.focus();}return function(){if(finalFocusRefCurrentVal){finalFocusRefCurrentVal.focus();}};},[finalFocusRef,initialFocusRef]);useKeyboardDismissable({enabled:true,callback:onClose});var arrowElement=null;var restChildren=[];React.Children.forEach(props.children,function(child){if(child.type.displayName==='PopperArrow'){var _child$props$color;arrowElement=React.cloneElement(child,{backgroundColor:(_child$props$color=child.props.color)!==null&&_child$props$color!==void 0?_child$props$color:color});}else{restChildren.push(child);}});var accessibilityProps=Platform.OS==='web'?{'accessibilityRole':'dialog','aria-labelledby':headerMounted?headerId:undefined,'aria-describedby':bodyMounted?bodyId:undefined}:{};if(useHasResponsiveProps(props)){return null;}return React.createElement(Popper.Content,_extends({nativeID:popoverContentId},accessibilityProps,resolvedProps,{ref:ref,isOpen:isOpen}),arrowElement,restChildren);});PopoverContent.displayName='PopoverContent';","map":{"version":3,"sources":["PopoverContent.tsx"],"names":["PopoverContent","isOpen","React","resolvedProps","usePropsResolution","arrowDefaultColor","props","color","useToken","finalFocusRefCurrentVal","finalFocusRef","initialFocusRef","useKeyboardDismissable","enabled","callback","onClose","arrowElement","restChildren","child","backgroundColor","accessibilityProps","headerMounted","bodyMounted","undefined","useHasResponsiveProps","popoverContentId"],"mappings":"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","sourcesContent":["import {\n  useKeyboardDismissable,\n  usePropsResolution,\n  useToken,\n} from '../../../hooks';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport type { IPopoverContentProps } from './types';\nimport { Popper } from '../Popper';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const PopoverContent = React.forwardRef(\n  (props: IPopoverContentProps, ref: any) => {\n    const {\n      onClose,\n      initialFocusRef,\n      finalFocusRef,\n      popoverContentId,\n      headerMounted,\n      bodyMounted,\n      bodyId,\n      headerId,\n      isOpen,\n    } = React.useContext(PopoverContext);\n    const resolvedProps = usePropsResolution('PopoverContent', props);\n\n    const arrowDefaultColor =\n      props.bgColor ??\n      props.bg ??\n      props.backgroundColor ??\n      resolvedProps.backgroundColor;\n    const color = useToken('colors', arrowDefaultColor);\n\n    React.useEffect(() => {\n      const finalFocusRefCurrentVal = finalFocusRef?.current;\n      if (initialFocusRef && initialFocusRef.current) {\n        initialFocusRef.current.focus();\n      }\n\n      return () => {\n        if (finalFocusRefCurrentVal) {\n          finalFocusRefCurrentVal.focus();\n        }\n      };\n    }, [finalFocusRef, initialFocusRef]);\n\n    useKeyboardDismissable({\n      enabled: true,\n      callback: onClose,\n    });\n\n    let arrowElement = null;\n    const restChildren: any = [];\n    React.Children.forEach(props.children, (child) => {\n      if (child.type.displayName === 'PopperArrow') {\n        arrowElement = React.cloneElement(child, {\n          backgroundColor: child.props.color ?? color,\n        });\n      } else {\n        restChildren.push(child);\n      }\n    });\n\n    const accessibilityProps =\n      Platform.OS === 'web'\n        ? ({\n            'accessibilityRole': 'dialog',\n            'aria-labelledby': headerMounted ? headerId : undefined,\n            'aria-describedby': bodyMounted ? bodyId : undefined,\n          } as any)\n        : {};\n\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n\n    return (\n      <Popper.Content\n        nativeID={popoverContentId}\n        {...accessibilityProps}\n        {...resolvedProps}\n        ref={ref}\n        isOpen={isOpen}\n      >\n        {arrowElement}\n        {restChildren}\n      </Popper.Content>\n    );\n  }\n);\n\nPopoverContent.displayName = 'PopoverContent';\n"]},"metadata":{},"sourceType":"module"}