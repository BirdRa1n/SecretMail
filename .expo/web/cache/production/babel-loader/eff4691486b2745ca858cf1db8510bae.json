{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"divider\",\"variant\"],_excluded2=[\"space\",\"direction\",\"size\",\"colorScheme\",\"isDisabled\",\"isAttached\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{Stack}from\"../Stack\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export default memo(forwardRef(function(_ref,ref){var children=_ref.children,divider=_ref.divider,variant=_ref.variant,props=_objectWithoutProperties(_ref,_excluded);var _usePropsResolution=usePropsResolution('ButtonGroup',props),space=_usePropsResolution.space,direction=_usePropsResolution.direction,size=_usePropsResolution.size,colorScheme=_usePropsResolution.colorScheme,isDisabled=_usePropsResolution.isDisabled,isAttached=_usePropsResolution.isAttached,newProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _usePropsResolution2=usePropsResolution('Button',props),borderRadius=_usePropsResolution2.borderRadius;var computedChildren;if(Array.isArray(children)){computedChildren=React.Children.map(children,function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({key:\"button-group-child-\".concat(index),variant:variant,size:size,colorScheme:colorScheme,isDisabled:isDisabled},isAttached?{borderRadius:0}:{}),isAttached&&index===0?direction==='column'?{borderTopRadius:borderRadius}:{borderLeftRadius:borderRadius}:{}),isAttached&&index===(children===null||children===void 0?void 0:children.length)-1?direction==='column'?{borderBottomRadius:borderRadius}:{borderRightRadius:borderRadius}:{}),isAttached&&index!==0?direction==='column'?{borderTopWidth:0}:{borderLeftWidth:0}:{}),child.props));});}else{computedChildren=React.Children.map(children,function(child,index){return React.cloneElement(child,_objectSpread({key:\"button-group-child-\".concat(index),variant:variant,size:size,colorScheme:colorScheme,isDisabled:isDisabled},child.props));});}if(useHasResponsiveProps(props)){return null;}return React.createElement(Stack,_extends({divider:divider,space:isAttached?0:space,direction:direction},newProps,{ref:ref}),computedChildren);}));","map":{"version":3,"sources":["ButtonGroup.tsx"],"names":["memo","forwardRef","props","newProps","usePropsResolution","borderRadius","Array","computedChildren","key","variant","size","colorScheme","isDisabled","isAttached","index","borderTopRadius","borderLeftRadius","borderBottomRadius","borderRightRadius","borderTopWidth","borderLeftWidth","child","useHasResponsiveProps","direction","ref"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IButtonGroupProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Stack } from '../Stack';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport default memo(\n  forwardRef(\n    (\n      { children, divider, variant, ...props }: IButtonGroupProps,\n      ref?: any\n    ) => {\n      const {\n        space,\n        direction,\n\n        size,\n        colorScheme,\n        isDisabled,\n        isAttached,\n        ...newProps\n      } = usePropsResolution('ButtonGroup', props);\n\n      const { borderRadius } = usePropsResolution('Button', props);\n      let computedChildren: JSX.Element | JSX.Element[];\n\n      if (Array.isArray(children)) {\n        computedChildren = React.Children.map(\n          children,\n          (child: JSX.Element, index: number) => {\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n\n              // when buttons are attached, remove rounded corners of all buttons except extreme buttons\n              ...(isAttached ? { borderRadius: 0 } : {}),\n              ...(isAttached && index === 0\n                ? direction === 'column'\n                  ? { borderTopRadius: borderRadius }\n                  : { borderLeftRadius: borderRadius }\n                : {}),\n              ...(isAttached && index === children?.length - 1\n                ? direction === 'column'\n                  ? { borderBottomRadius: borderRadius }\n                  : { borderRightRadius: borderRadius }\n                : {}),\n\n              //when buttons are attached, remove double border from them, just keep borderRight in case for direction row and borderBottom in case of direction column for every component\n              ...(isAttached && index !== 0\n                ? direction === 'column'\n                  ? { borderTopWidth: 0 }\n                  : { borderLeftWidth: 0 }\n                : {}),\n              ...child.props,\n            });\n          }\n        );\n      } else {\n        computedChildren = React.Children.map(\n          children,\n          (child: JSX.Element, index: number) => {\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n              ...child.props,\n            });\n          }\n        );\n      }\n      //TODO: refactor for responsive prop\n      if (useHasResponsiveProps(props)) {\n        return null;\n      }\n      return (\n        <Stack\n          divider={divider}\n          space={isAttached ? 0 : space}\n          direction={direction}\n          {...newProps}\n          ref={ref}\n        >\n          {computedChildren}\n        </Stack>\n      );\n    }\n  )\n);\n"]},"metadata":{},"sourceType":"module"}