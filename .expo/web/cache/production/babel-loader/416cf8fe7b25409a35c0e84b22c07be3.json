{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"nativeID\",\"isRequired\",\"isInvalid\",\"isDisabled\",\"isReadOnly\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import{useId}from'@react-native-aria/utils';import omit from'lodash.omit';import{ariaAttr}from\"../../../utils\";export var FormControlContext=React.createContext({});export function useFormControlProvider(props){var idProp=props.nativeID,isRequired=props.isRequired,isInvalid=props.isInvalid,isDisabled=props.isDisabled,isReadOnly=props.isReadOnly,htmlProps=_objectWithoutProperties(props,_excluded);var id=useId();var nativeID=idProp||\"field-\".concat(id);var labelId=\"\".concat(nativeID,\"-label\");var feedbackId=\"\".concat(nativeID,\"-feedback\");var helpTextId=\"\".concat(nativeID,\"-helptext\");var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),hasFeedbackText=_React$useState2[0],setHasFeedbackText=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),hasHelpText=_React$useState4[0],setHasHelpText=_React$useState4[1];var context={isRequired:!!isRequired,isInvalid:!!isInvalid,isReadOnly:!!isReadOnly,isDisabled:!!isDisabled,hasFeedbackText:hasFeedbackText,setHasFeedbackText:setHasFeedbackText,hasHelpText:hasHelpText,setHasHelpText:setHasHelpText,nativeID:nativeID,labelId:labelId,feedbackId:feedbackId,helpTextId:helpTextId,htmlProps:htmlProps};return context;}export function useFormControl(props){var _props$nativeID;var field=useFormControlContext();var describedBy=[];if(field!==null&&field!==void 0&&field.hasFeedbackText)describedBy.push(field===null||field===void 0?void 0:field.feedbackId);if(field!==null&&field!==void 0&&field.hasHelpText)describedBy.push(field===null||field===void 0?void 0:field.helpTextId);var ariaDescribedBy=describedBy.join(' ');var cleanProps=omit(props,['isInvalid','isDisabled','isReadOnly','isRequired']);return _objectSpread(_objectSpread({},cleanProps),{},{nativeID:(_props$nativeID=props.nativeID)!==null&&_props$nativeID!==void 0?_props$nativeID:field===null||field===void 0?void 0:field.nativeID,disabled:props.isDisabled||(field===null||field===void 0?void 0:field.isDisabled),readOnly:props.isReadOnly||(field===null||field===void 0?void 0:field.isReadOnly),required:props.isRequired||(field===null||field===void 0?void 0:field.isRequired),accessibilityInvalid:ariaAttr(props.isInvalid||(field===null||field===void 0?void 0:field.isInvalid)),accessibilityRequired:ariaAttr(props.isRequired||(field===null||field===void 0?void 0:field.isRequired)),accessibilityReadOnly:ariaAttr(props.isReadOnly||(field===null||field===void 0?void 0:field.isReadOnly)),accessibilityDescribedBy:ariaDescribedBy||undefined});}export var useFormControlContext=function useFormControlContext(){return React.useContext(FormControlContext);};","map":{"version":3,"sources":["useFormControl.tsx"],"names":["FormControlContext","React","nativeID","htmlProps","id","useId","idProp","labelId","feedbackId","helpTextId","context","isRequired","isInvalid","isReadOnly","isDisabled","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","field","useFormControlContext","describedBy","ariaDescribedBy","cleanProps","omit","props","disabled","readOnly","required","accessibilityInvalid","ariaAttr","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport type { IFormControlProps } from './types';\nimport { ariaAttr } from '../../../utils';\n\nexport type IFormControlContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  'htmlProps'\n>;\n\nexport const FormControlContext = React.createContext({});\n\nexport function useFormControlProvider(props: IFormControlProps) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n\n  const id = useId();\n  // Generate all the required ids\n  const nativeID = idProp || `field-${id}`;\n\n  const labelId = `${nativeID}-label`;\n  const feedbackId = `${nativeID}-feedback`;\n  const helpTextId = `${nativeID}-helptext`;\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n  };\n\n  return context;\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props: IFormControlProps) {\n  const field = useFormControlContext();\n  const describedBy: any[] = [];\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field?.feedbackId);\n  if (field?.hasHelpText) describedBy.push(field?.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n\n  const cleanProps = omit(props, [\n    'isInvalid',\n    'isDisabled',\n    'isReadOnly',\n    'isRequired',\n  ]);\n\n  return {\n    ...cleanProps,\n    nativeID: props.nativeID ?? field?.nativeID,\n    disabled: props.isDisabled || field?.isDisabled,\n    readOnly: props.isReadOnly || field?.isReadOnly,\n    required: props.isRequired || field?.isRequired,\n    accessibilityInvalid: ariaAttr(props.isInvalid || field?.isInvalid),\n    accessibilityRequired: ariaAttr(props.isRequired || field?.isRequired),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || field?.isReadOnly),\n    accessibilityDescribedBy: ariaDescribedBy || undefined,\n  };\n}\n\nexport const useFormControlContext = () => {\n  return (React.useContext(\n    FormControlContext\n  ) as unknown) as IFormControlContext;\n};\n"]},"metadata":{},"sourceType":"module"}