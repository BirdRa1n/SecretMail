{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"debug\"];import{getStyleAndFilteredProps,propConfig}from\"../theme/styled-system\";import{useTheme}from\"./useTheme\";import React from'react';import{useNativeBaseConfig}from\"../core/NativeBaseContext\";import{useResponsiveQuery}from\"../utils/useResponsiveQuery\";import stableHash from'stable-hash';var getStyledSystemPropsAndRestProps=function getStyledSystemPropsAndRestProps(props){var styledSystemProps={};var restProps={};for(var key in props){if(key in propConfig){styledSystemProps[key]=props[key];}else{restProps[key]=props[key];}}return{styledSystemProps:styledSystemProps,restProps:restProps};};export var useStyledSystemPropsResolver=function useStyledSystemPropsResolver(_ref){var propStyle=_ref.style,debug=_ref.debug,props=_objectWithoutProperties(_ref,_excluded);var theme=useTheme();var _useNativeBaseConfig=useNativeBaseConfig('makeStyledComponent'),currentBreakpoint=_useNativeBaseConfig.currentBreakpoint,config=_useNativeBaseConfig.config;var strictMode=config.strictMode;var _useResponsiveQuery=useResponsiveQuery(),getResponsiveStyles=_useResponsiveQuery.getResponsiveStyles;var _getStyledSystemProps=getStyledSystemPropsAndRestProps(props),styledSystemProps=_getStyledSystemProps.styledSystemProps,restProps=_getStyledSystemProps.restProps;var _React$useMemo=React.useMemo(function(){var _getStyleAndFilteredP=getStyleAndFilteredProps({styledSystemProps:styledSystemProps,theme:theme,debug:debug,currentBreakpoint:currentBreakpoint,strictMode:strictMode,getResponsiveStyles:getResponsiveStyles}),styleSheet=_getStyleAndFilteredP.styleSheet,dataSet=_getStyleAndFilteredP.dataSet;if(propStyle){return{style:[styleSheet.box,propStyle],dataSet:dataSet};}else{return{style:styleSheet.box,dataSet:dataSet};}},[stableHash(styledSystemProps),theme,debug,currentBreakpoint,strictMode,propStyle,getResponsiveStyles,props]),style=_React$useMemo.style,dataSet=_React$useMemo.dataSet;if(process.env.NODE_ENV==='development'&&debug){console.log('style,resprops',currentBreakpoint);}restProps.dataSet=dataSet;return[style,restProps];};","map":{"version":3,"sources":["useStyledSystemPropsResolver.ts"],"names":["getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","style","theme","useTheme","config","useNativeBaseConfig","strictMode","getResponsiveStyles","useResponsiveQuery","dataSet","getStyleAndFilteredProps","debug","currentBreakpoint","styleSheet","stableHash","process","console"],"mappings":"qHAAA,OAAA,wBAAA,CAAA,UAAA,8BACA,OAAA,QAAA,kBACA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,mBAAA,iCACA,OAAA,kBAAA,mCAEA,MAAA,CAAA,UAAA,KAAA,aAAA,CAEA,GAAMA,CAAAA,gCAAgC,CAAIC,QAApCD,CAAAA,gCAAoCC,CAAAA,KAAD,CAAgB,CACvD,GAAMC,CAAAA,iBAAsB,CAA5B,EAAA,CACA,GAAMC,CAAAA,SAAc,CAApB,EAAA,CAEA,IAAK,GAAL,CAAA,GAAA,GAAA,CAAA,KAAA,CAAuB,CACrB,GAAIC,GAAG,GAAP,CAAA,UAAA,CAAuB,CACrBF,iBAAiB,CAAjBA,GAAiB,CAAjBA,CAAyBD,KAAK,CAA9BC,GAA8B,CAA9BA,CADF,CAAA,IAEO,CACLC,SAAS,CAATA,GAAS,CAATA,CAAiBF,KAAK,CAAtBE,GAAsB,CAAtBA,CACD,CACF,CAED,MAAO,CAAED,iBAAF,CAAEA,iBAAF,CAAqBC,SAAAA,CAAAA,SAArB,CAAP,CAZF,CAAA,CAeA,MAAO,IAAME,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,MAIjC,IAJkC,CAAA,SAIlC,MAHTC,KAGS,CAJkC,KAIlC,MAJkC,KAIlC,CADNL,KACM,0CACT,GAAMM,CAAAA,KAAK,CAAGC,QAAd,EAAA,CACA,yBAAsCE,mBAAmB,CAAzD,qBAAyD,CAAzD,CAAM,iBAAN,sBAAM,iBAAN,CAA2BD,MAA3B,sBAA2BA,MAA3B,CAGA,GAAME,CAAAA,UAAU,CAAGF,MAAM,CAAzB,UAAA,CAEA,wBAAgCI,kBAAhC,EAAA,CAAQD,mBAAR,qBAAQA,mBAAR,CAEA,0BAAyCZ,gCAAgC,CAAzE,KAAyE,CAAzE,CAAM,iBAAN,uBAAM,iBAAN,CAA2BG,SAA3B,uBAA2BA,SAA3B,CAIA,mBAA2B,KAAK,CAAL,OAAA,CAAc,UAAM,CAC7C,0BAAgCY,wBAAwB,CAAC,CACvDb,iBADuD,CACvDA,iBADuD,CAEvDK,KAFuD,CAEvDA,KAFuD,CAGvDS,KAHuD,CAGvDA,KAHuD,CAIvDC,iBAJuD,CAIvDA,iBAJuD,CAKvDN,UALuD,CAKvDA,UALuD,CAMvDC,mBAAAA,CAAAA,mBANuD,CAAD,CAAxD,CAAM,UAAN,uBAAM,UAAN,CAAoBE,OAApB,uBAAoBA,OAApB,CAQA,GAAA,SAAA,CAAe,CACb,MAAO,CAAER,KAAK,CAAE,CAACY,UAAU,CAAX,GAAA,CAAT,SAAS,CAAT,CAAsCJ,OAAAA,CAAAA,OAAtC,CAAP,CADF,CAAA,IAEO,CACL,MAAO,CAAER,KAAK,CAAEY,UAAU,CAAnB,GAAA,CAAyBJ,OAAAA,CAAAA,OAAzB,CAAP,CAZ2C,CAApB,CAAA,CAexB,CAEDK,UAAU,CAFT,iBAES,CAFT,CAAA,KAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,SAAA,CAAA,mBAAA,CAfH,KAeG,CAfwB,CAA3B,CAAM,KAAN,gBAAM,KAAN,CAAeL,OAAf,gBAAeA,OAAf,CA0BA,GAAIM,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,GAAAA,aAAAA,EAAJ,KAAA,CAAqD,CAEnDC,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA,CAAAA,iBAAAA,EACD,CAEDlB,SAAS,CAATA,OAAAA,CAAAA,OAAAA,CAEA,MAAO,CAAA,KAAA,CAAP,SAAO,CAAP,CAlDK,CAAA","sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet } = React.useMemo(() => {\n    const { styleSheet, dataSet } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet };\n    } else {\n      return { style: styleSheet.box, dataSet };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n\n  return [style, restProps];\n};\n"]},"metadata":{},"sourceType":"module"}