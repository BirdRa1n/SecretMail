{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onOpen\",\"trigger\",\"onClose\",\"isOpen\",\"children\",\"defaultIsOpen\",\"initialFocusRef\",\"finalFocusRef\",\"trapFocus\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import{Popper}from\"../Popper\";import{mergeRefs}from\"../../../utils\";import{useControllableState}from\"../../../hooks\";import{PopoverContext}from\"./PopoverContext\";import Box from\"../../primitives/Box\";import Backdrop from\"../Backdrop\";import{FocusScope}from'@react-native-aria/focus';import{PresenceTransition}from\"../Transitions\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useId}from'@react-aria/utils';import{Overlay}from\"../../primitives/Overlay\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Popover=function Popover(_ref,ref){var onOpen=_ref.onOpen,trigger=_ref.trigger,onClose=_ref.onClose,isOpenProp=_ref.isOpen,children=_ref.children,defaultIsOpen=_ref.defaultIsOpen,initialFocusRef=_ref.initialFocusRef,finalFocusRef=_ref.finalFocusRef,_ref$trapFocus=_ref.trapFocus,trapFocus=_ref$trapFocus===void 0?true:_ref$trapFocus,props=_objectWithoutProperties(_ref,_excluded);var triggerRef=React.useRef(null);var mergedRef=mergeRefs([triggerRef]);var _useControllableState=useControllableState({value:isOpenProp,defaultValue:defaultIsOpen,onChange:function onChange(value){value?onOpen&&onOpen():onClose&&onClose();}}),_useControllableState2=_slicedToArray(_useControllableState,2),isOpen=_useControllableState2[0],setIsOpen=_useControllableState2[1];var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),bodyMounted=_React$useState2[0],setBodyMounted=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),headerMounted=_React$useState4[0],setHeaderMounted=_React$useState4[1];var popoverContentId=\"\".concat(useId(),\"-content\");var headerId=\"\".concat(popoverContentId,\"-header\");var bodyId=\"\".concat(popoverContentId,\"-body\");var handleOpen=React.useCallback(function(){setIsOpen(true);},[setIsOpen]);var updatedTrigger=function updatedTrigger(){return trigger({'ref':mergedRef,'onPress':handleOpen,'aria-expanded':isOpen?true:false,'aria-controls':isOpen?popoverContentId:undefined,'aria-haspopup':true},{open:isOpen});};var handleClose=function handleClose(){setIsOpen(false);};if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,{ref:ref},updatedTrigger(),React.createElement(Overlay,{isOpen:isOpen,onRequestClose:handleClose,useRNModalOnAndroid:true,unmountOnExit:true},React.createElement(PresenceTransition,{initial:{opacity:0},animate:{opacity:1,transition:{duration:150}},exit:{opacity:0,scale:0.95,transition:{duration:100}},visible:isOpen,style:StyleSheet.absoluteFill},React.createElement(Popper,_extends({onClose:handleClose,triggerRef:triggerRef},props),React.createElement(Backdrop,{onPress:handleClose,bg:\"transparent\"}),React.createElement(PopoverContext.Provider,{value:{onClose:handleClose,initialFocusRef:initialFocusRef,finalFocusRef:finalFocusRef,popoverContentId:popoverContentId,bodyId:bodyId,headerId:headerId,headerMounted:headerMounted,bodyMounted:bodyMounted,setBodyMounted:setBodyMounted,setHeaderMounted:setHeaderMounted,isOpen:isOpen}},React.createElement(FocusScope,{contain:trapFocus,restoreFocus:true,autoFocus:true},children))))));};export default memo(forwardRef(Popover));","map":{"version":3,"sources":["Popover.tsx"],"names":["Popover","isOpen","trapFocus","props","triggerRef","React","mergedRef","mergeRefs","useControllableState","value","defaultValue","onChange","onOpen","onClose","popoverContentId","useId","headerId","bodyId","handleOpen","setIsOpen","updatedTrigger","trigger","open","handleClose","useHasResponsiveProps","ref","opacity","transition","duration","scale","StyleSheet","absoluteFill","initialFocusRef","finalFocusRef","headerMounted","bodyMounted","setBodyMounted","setHeaderMounted","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Popper } from '../Popper';\nimport type { IPopoverProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useControllableState } from '../../../hooks';\nimport { PopoverContext } from './PopoverContext';\nimport Box from '../../primitives/Box';\nimport Backdrop from '../Backdrop';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { PresenceTransition } from '../Transitions';\nimport { StyleSheet } from 'react-native';\nimport { useId } from '@react-aria/utils';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Popover = (\n  {\n    onOpen,\n    trigger,\n    onClose,\n    isOpen: isOpenProp,\n    children,\n    defaultIsOpen,\n    initialFocusRef,\n    finalFocusRef,\n    trapFocus = true,\n    ...props\n  }: IPopoverProps,\n  ref: any\n) => {\n  const triggerRef = React.useRef(null);\n  const mergedRef = mergeRefs([triggerRef]);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const [bodyMounted, setBodyMounted] = React.useState(false);\n  const [headerMounted, setHeaderMounted] = React.useState(false);\n\n  const popoverContentId = `${useId()}-content`;\n  const headerId = `${popoverContentId}-header`;\n  const bodyId = `${popoverContentId}-body`;\n\n  const handleOpen = React.useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const updatedTrigger = () => {\n    return trigger(\n      {\n        'ref': mergedRef,\n        'onPress': handleOpen,\n        'aria-expanded': isOpen ? true : false,\n        'aria-controls': isOpen ? popoverContentId : undefined,\n        'aria-haspopup': true,\n      },\n      { open: isOpen }\n    );\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box ref={ref}>\n      {updatedTrigger()}\n      <Overlay\n        isOpen={isOpen}\n        onRequestClose={handleClose}\n        useRNModalOnAndroid\n        unmountOnExit\n      >\n        <PresenceTransition\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: { duration: 150 } }}\n          exit={{ opacity: 0, scale: 0.95, transition: { duration: 100 } }}\n          visible={isOpen}\n          style={StyleSheet.absoluteFill}\n        >\n          <Popper onClose={handleClose} triggerRef={triggerRef} {...props}>\n            <Backdrop onPress={handleClose} bg=\"transparent\" />\n            <PopoverContext.Provider\n              value={{\n                onClose: handleClose,\n                initialFocusRef,\n                finalFocusRef,\n                popoverContentId,\n                bodyId,\n                headerId,\n                headerMounted,\n                bodyMounted,\n                setBodyMounted,\n                setHeaderMounted,\n                isOpen,\n              }}\n            >\n              <FocusScope contain={trapFocus} restoreFocus autoFocus>\n                {children}\n              </FocusScope>\n            </PopoverContext.Provider>\n          </Popper>\n        </PresenceTransition>\n      </Overlay>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Popover));\n"]},"metadata":{},"sourceType":"module"}