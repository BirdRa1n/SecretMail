{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"onFocus\",\"onBlur\",\"_stack\",\"_interactionBox\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{useSliderThumb}from'@react-native-aria/slider';import{VisuallyHidden}from'@react-aria/visually-hidden';import{useToken}from\"../../../hooks\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import Box from\"../Box\";import{SliderContext}from\"./Context\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{useHover}from'@react-native-aria/interactions';import{mergeRefs}from\"../../../utils\";import{extractInObject,stylingProps}from\"../../../theme/tools/utils\";import{Stack}from\"../Stack\";import{Center}from\"../../composites/Center\";function SliderThumb(props,ref){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isPressed=_React$useState2[0],setIsPressed=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isFocused=_React$useState4[0],setIsFocused=_React$useState4[1];var handleFocus=function handleFocus(focusState,callback){setIsFocused(focusState);callback();};var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var _React$useContext=React.useContext(SliderContext),state=_React$useContext.state,trackLayout=_React$useContext.trackLayout,orientation=_React$useContext.orientation,colorScheme=_React$useContext.colorScheme,thumbSize=_React$useContext.thumbSize,isReadOnly=_React$useContext.isReadOnly,isDisabled=_React$useContext.isDisabled,interactionBoxContext=_React$useContext._interactionBox;var _usePropsResolution=usePropsResolution('SliderThumb',_objectSpread({size:thumbSize,_interactionBox:interactionBoxContext,colorScheme:colorScheme},props),{isDisabled:isDisabled,isReadOnly:isReadOnly,isPressed:isPressed,isFocused:isFocused,isHovered:isHovered}),_onFocus=_usePropsResolution.onFocus,_onBlur=_usePropsResolution.onBlur,_stack=_usePropsResolution._stack,_interactionBox=_usePropsResolution._interactionBox,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded);var inputRef=React.useRef(null);var _useSliderThumb=useSliderThumb({index:0,trackLayout:trackLayout,inputRef:inputRef,orientation:orientation},state),thumbProps=_useSliderThumb.thumbProps,inputProps=_useSliderThumb.inputProps;React.useEffect(function(){setIsPressed(state.isThumbDragging(0));},[state]);var thumbAbsoluteSize=useToken('sizes',resolvedProps.size);var thumbStyles={bottom:orientation==='vertical'?\"\".concat(state.getThumbPercent(0)*100,\"%\"):undefined,left:orientation!=='vertical'?\"\".concat(state.getThumbPercent(0)*100,\"%\"):undefined,transform:orientation==='vertical'?[{translateY:parseInt(thumbAbsoluteSize)/2}]:[{translateX:-parseInt(thumbAbsoluteSize)/2}]};thumbStyles.transform.push({scale:state.isThumbDragging(0)?resolvedProps.scaleOnPressed:1});var _extractInObject=extractInObject(resolvedProps,[].concat(_toConsumableArray(stylingProps.margin),_toConsumableArray(stylingProps.layout),_toConsumableArray(stylingProps.flexbox),_toConsumableArray(stylingProps.position),_toConsumableArray(stylingProps.outline))),_extractInObject2=_slicedToArray(_extractInObject,2),layoutProps=_extractInObject2[0],nonLayoutProps=_extractInObject2[1];var _extractInObject3=extractInObject(nonLayoutProps,['accessibilityRole','accessibilityState']),_extractInObject4=_slicedToArray(_extractInObject3,2),accessibilityProps=_extractInObject4[0],nonAccessibilityProps=_extractInObject4[1];if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({position:\"absolute\"},thumbProps,resolvedProps,accessibilityProps,layoutProps,{style:[thumbStyles,resolvedProps.style],onFocus:function onFocus(e){handleFocus(true,_onFocus?function(){return _onFocus(e);}:function(){});},onBlur:function onBlur(e){handleFocus(false,_onBlur?function(){return _onBlur(e);}:function(){});},ref:mergeRefs([_ref,ref])}),React.createElement(Stack,_stack,React.createElement(Box,_interactionBox),React.createElement(Center,nonAccessibilityProps,props.children,Platform.OS==='web'&&React.createElement(VisuallyHidden,null,React.createElement(\"input\",_extends({ref:inputRef},inputProps))))));}SliderThumb.displayName='SliderThumb';export default forwardRef(SliderThumb);","map":{"version":3,"sources":["SliderThumb.tsx"],"names":["React","handleFocus","setIsFocused","callback","_ref","isHovered","useHover","_interactionBox","interactionBoxContext","resolvedProps","usePropsResolution","size","colorScheme","props","isDisabled","isReadOnly","isPressed","isFocused","inputRef","inputProps","useSliderThumb","index","trackLayout","orientation","setIsPressed","state","thumbAbsoluteSize","useToken","thumbStyles","bottom","left","transform","translateY","parseInt","translateX","scale","extractInObject","stylingProps","useHasResponsiveProps","e","onFocus","onBlur","mergeRefs","Platform","SliderThumb","forwardRef"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISliderThumbProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { Stack } from '../Stack';\nimport { Center } from '../../composites/Center';\n\nfunction SliderThumb(props: ISliderThumbProps, ref: any) {\n  const [isPressed, setIsPressed] = React.useState(false);\n\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    state,\n    trackLayout,\n    orientation,\n    colorScheme,\n    thumbSize,\n    isReadOnly,\n    isDisabled,\n    _interactionBox: interactionBoxContext,\n  } = React.useContext(SliderContext);\n  const {\n    onFocus,\n    onBlur,\n    _stack,\n    _interactionBox,\n    ...resolvedProps\n  } = usePropsResolution(\n    'SliderThumb',\n    {\n      size: thumbSize,\n      _interactionBox: interactionBoxContext,\n      colorScheme,\n      ...props,\n    },\n    {\n      isDisabled,\n      isReadOnly,\n      isPressed,\n      isFocused,\n      isHovered,\n    }\n  );\n\n  const inputRef = React.useRef(null);\n  const { thumbProps, inputProps } = useSliderThumb(\n    {\n      index: 0,\n      trackLayout,\n      inputRef,\n      orientation,\n    },\n    state\n  );\n\n  React.useEffect(() => {\n    setIsPressed(state.isThumbDragging(0));\n  }, [state]);\n\n  const thumbAbsoluteSize = useToken('sizes', resolvedProps.size);\n\n  const thumbStyles: any = {\n    bottom:\n      orientation === 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    left:\n      orientation !== 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    transform:\n      orientation === 'vertical'\n        ? [{ translateY: parseInt(thumbAbsoluteSize) / 2 }]\n        : [{ translateX: -parseInt(thumbAbsoluteSize) / 2 }],\n  };\n\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? resolvedProps.scaleOnPressed : 1,\n  });\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.outline,\n  ]);\n\n  const [\n    accessibilityProps,\n    nonAccessibilityProps,\n  ] = extractInObject(nonLayoutProps, [\n    'accessibilityRole',\n    'accessibilityState',\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...thumbProps}\n      {...resolvedProps}\n      {...accessibilityProps}\n      {...layoutProps}\n      style={[thumbStyles, resolvedProps.style]}\n      onFocus={(e: any) => {\n        handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n      }}\n      onBlur={(e: any) => {\n        handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n      }}\n      // {...(isReadOnly && _readOnly)}\n      // {...(isDisabled && _disabled)}\n      ref={mergeRefs([_ref, ref])}\n    >\n      <Stack {..._stack}>\n        <Box {..._interactionBox} />\n        <Center {...nonAccessibilityProps}>\n          {props.children}\n          {Platform.OS === 'web' && (\n            <VisuallyHidden>\n              <input ref={inputRef} {...inputProps} />\n            </VisuallyHidden>\n          )}\n        </Center>\n      </Stack>\n    </Box>\n  );\n}\n\nSliderThumb.displayName = 'SliderThumb';\n\nexport default forwardRef(SliderThumb);\n"]},"metadata":{},"sourceType":"module"}