{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"space\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import isNil from'lodash.isnil';import React from'react';import Flex from\"../../primitives/Flex\";import{useThemeProps}from\"../../../hooks\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Wrap=function Wrap(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('Wrap',props),space=_useThemeProps.space,newProps=_objectWithoutProperties(_useThemeProps,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(Flex,_extends({wrap:\"wrap\"},newProps,{ref:ref}),isNil(space)?children:React.Children.map(children,function(child){return React.cloneElement(child,_objectSpread(_objectSpread({},props),{},{style:{margin:space}}),child.props.children);}));};export default React.memo(React.forwardRef(Wrap));","map":{"version":3,"sources":["index.tsx"],"names":["Wrap","props","newProps","useThemeProps","useHasResponsiveProps","ref","isNil","child","style","margin","space","React"],"mappings":"ouCAAA,MAAA,CAAA,KAAA,KAAA,cAAA,CACA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,IAAA,6BAEA,OAAA,aAAA,sBACA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAA,GAAA,CAAmD,IAAlD,CAAA,QAAkD,MAAlD,QAAkD,CAAnCC,KAAmC,0CAC9D,mBAA+BE,aAAa,CAAA,MAAA,CADkB,KAClB,CAA5C,CAAM,KAAN,gBAAM,KAAN,CAAkBD,QAAlB,qDAGA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAM,IAAI,CAAC,MAAX,CAAA,CAAA,QAAA,CAAA,CAAgC,GAAG,CAAEC,GAArC,CAAA,CAAA,CACGC,KAAK,CAALA,KAAK,CAALA,CAAAA,QAAAA,CAEG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,CAA8BC,SAAAA,KAAD,CAAgB,CAC3C,MAAO,CAAA,KAAK,CAAL,YAAA,CAAA,KAAA,gCAEL,KAFK,MAEOC,KAAK,CAAE,CAAEC,MAAM,CAAEC,KAAV,CAFd,GAGLH,KAAK,CAALA,KAAAA,CAHF,QAAO,CAAP,CALV,CAIQ,CAHN,CADF,CARF,CAAA,CAuBA,cAAeI,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,IAA0BA,CAAXA,CAAf","sourcesContent":["import isNil from 'lodash.isnil';\nimport React from 'react';\nimport Flex from '../../primitives/Flex';\nimport type { IWrapProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Wrap = ({ children, ...props }: IWrapProps, ref?: any) => {\n  const { space, ...newProps } = useThemeProps('Wrap', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Flex wrap=\"wrap\" {...newProps} ref={ref}>\n      {isNil(space)\n        ? children\n        : React.Children.map(children, (child: any) => {\n            return React.cloneElement(\n              child,\n              { ...props, style: { margin: space } },\n              child.props.children\n            );\n          })}\n    </Flex>\n  );\n};\n\nexport default React.memo(React.forwardRef(Wrap));\nexport type { IWrapProps };\n"]},"metadata":{},"sourceType":"module"}