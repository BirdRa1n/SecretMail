{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"value\"],_excluded2=[\"children\",\"onPress\",\"_icon\",\"_stack\",\"_text\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo,useContext}from'react';import{CheckIcon}from\"../../primitives/Icon/Icons\";import Box from\"../../primitives/Box\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import MenuItem from\"./MenuItem\";import{MenuOptionContext}from\"./MenuOptionGroup\";import{useMenuOptionItem}from\"./useMenu\";import{HStack}from\"../../primitives/Stack\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var MenuItemOption=function MenuItemOption(_ref,ref){var value=_ref.value,props=_objectWithoutProperties(_ref,_excluded);var _useContext=useContext(MenuOptionContext),values=_useContext.values,onChange=_useContext.onChange,type=_useContext.type;var isChecked=values.includes(value);var menuOptionProps=useMenuOptionItem({isChecked:isChecked,type:type});var _usePropsResolution=usePropsResolution('MenuItem',props,{isChecked:isChecked}),children=_usePropsResolution.children,onPress=_usePropsResolution.onPress,_icon=_usePropsResolution._icon,_stack=_usePropsResolution._stack,_text=_usePropsResolution._text,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var modifiedOnPress=function modifiedOnPress(e){onChange(value);onPress&&onPress(e);};if(useHasResponsiveProps(props)){return null;}return React.createElement(MenuItem,_extends({},resolvedProps,menuOptionProps,{accessibilityRole:\"button\",onPress:modifiedOnPress,ref:ref}),React.createElement(HStack,_stack,React.createElement(CheckIcon,_icon),React.createElement(Box,{_text:_text},children)));};export default memo(forwardRef(MenuItemOption));","map":{"version":3,"sources":["MenuItemOption.tsx"],"names":["MenuItemOption","props","type","useContext","isChecked","values","menuOptionProps","useMenuOptionItem","resolvedProps","usePropsResolution","modifiedOnPress","e","onChange","onPress","useHasResponsiveProps","ref","_text","memo","forwardRef"],"mappings":"+bAAA,MAAA,CAAA,KAAA,EAAA,UAAA,CAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,SAAA,mCACA,MAAA,CAAA,GAAA,4BACA,OAAA,kBAAA,oCACA,MAAA,CAAA,QAAA,kBAEA,OAAA,iBAAA,yBACA,OAAA,iBAAA,iBACA,OAAA,MAAA,8BACA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAA,GAAA,CAGlB,IAFH,CAAA,KAEG,MAFH,KAEG,CAFSC,KAET,0CACH,gBAA4DE,UAAU,CAAtE,iBAAsE,CAAtE,CAAM,MAAN,aAAM,MAAN,CAAM,QAAN,aAAM,QAAN,CAA0BD,IAA1B,aAA0BA,IAA1B,CAGA,GAAME,CAAAA,SAAS,CAAGC,MAAM,CAANA,QAAAA,CAAlB,KAAkBA,CAAlB,CACA,GAAMC,CAAAA,eAAe,CAAGC,iBAAiB,CAAC,CAAEH,SAAF,CAAEA,SAAF,CAAaF,IAAAA,CAAAA,IAAb,CAAD,CAAzC,CACA,wBAOIO,kBAAkB,CAAA,UAAA,CAAA,KAAA,CAAoB,CAAEL,SAAAA,CAAAA,SAAF,CAApB,CAPtB,CAAM,QAAN,qBAAM,QAAN,CAAM,OAAN,qBAAM,OAAN,CAAM,KAAN,qBAAM,KAAN,CAAM,MAAN,qBAAM,MAAN,CAAM,KAAN,qBAAM,KAAN,CAMKI,aANL,0DASA,GAAME,CAAAA,eAAe,CAAIC,QAAnBD,CAAAA,eAAmBC,CAAAA,CAAD,CAAY,CAClCC,QAAQ,CAARA,KAAQ,CAARA,CACAC,OAAO,EAAIA,OAAO,CAAlBA,CAAkB,CAAlBA,CAjBC,CAeH,CAMA,GAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,CAAA,eAAA,CAAA,CAGE,iBAAiB,CAHnB,QAAA,CAIE,OAAO,CAJT,eAAA,CAKE,GAAG,CAAEC,GALP,CAAA,CAAA,CAOE,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,MAAA,CACE,KAAA,CAAA,aAAA,CAAA,SAAA,CADF,KACE,CADF,CAEE,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAK,KAAK,CAAEC,KAAZ,CAAA,CAVN,QAUM,CAFF,CAPF,CADF,CA3BF,CAAA,CA2CA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,cAA8B,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo, useContext } from 'react';\nimport { CheckIcon } from '../../primitives/Icon/Icons';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport MenuItem from './MenuItem';\nimport type { IMenuItemOptionProps, IMenuOptionContextProps } from './types';\nimport { MenuOptionContext } from './MenuOptionGroup';\nimport { useMenuOptionItem } from './useMenu';\nimport { HStack } from '../../primitives/Stack';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItemOption = (\n  { value, ...props }: IMenuItemOptionProps,\n  ref: any\n) => {\n  const { values, onChange, type }: IMenuOptionContextProps = useContext(\n    MenuOptionContext\n  );\n  const isChecked = values.includes(value);\n  const menuOptionProps = useMenuOptionItem({ isChecked, type });\n  const {\n    children,\n    onPress,\n    _icon,\n    _stack,\n    _text,\n    ...resolvedProps\n  } = usePropsResolution('MenuItem', props, { isChecked });\n\n  const modifiedOnPress = (e: any) => {\n    onChange(value);\n    onPress && onPress(e);\n  };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <MenuItem\n      {...resolvedProps}\n      {...menuOptionProps}\n      accessibilityRole=\"button\"\n      onPress={modifiedOnPress}\n      ref={ref}\n    >\n      <HStack {..._stack}>\n        <CheckIcon {..._icon} />\n        <Box _text={_text}>{children}</Box>\n      </HStack>\n    </MenuItem>\n  );\n};\n\nexport default memo(forwardRef(MenuItemOption));\n"]},"metadata":{},"sourceType":"module"}