{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React from'react';export function useControllableProp(prop,state){var _React$useRef=React.useRef(prop!==undefined),isControlled=_React$useRef.current;var value=isControlled&&typeof prop!=='undefined'?prop:state;return[isControlled,value];}export function useControllableState(props){var valueProp=props.value,defaultValue=props.defaultValue,onChange=props.onChange;var _React$useState=React.useState(defaultValue),_React$useState2=_slicedToArray(_React$useState,2),valueState=_React$useState2[0],setValue=_React$useState2[1];var isControlled=valueProp!==undefined;var value=isControlled?valueProp:valueState;var updateValue=React.useCallback(function(next){var nextValue=typeof next==='function'?next(value):next;if(!isControlled){setValue(nextValue);}onChange&&onChange(nextValue);},[isControlled,onChange,value]);return[value,updateValue];}","map":{"version":3,"sources":["useControllableProp.ts"],"names":["current","isControlled","React","prop","value","onChange","valueProp","updateValue","next","nextValue","setValue"],"mappings":"iEAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CAEA,MAAO,SAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,KAAA,CAA+D,CACpE,kBAAkCE,KAAK,CAALA,MAAAA,CAAaC,IAAI,GAAnD,SAAkCD,CAAlC,CAAiBD,YAAjB,eAAQD,OAAR,CACA,GAAMI,CAAAA,KAAK,CAAGH,YAAY,EAAI,MAAA,CAAA,IAAA,GAAhBA,WAAAA,CAAAA,IAAAA,CAAd,KAAA,CACA,MAAO,CAAA,YAAA,CAAP,KAAO,CAAP,CACD,CAyBD,MAAO,SAAA,CAAA,oBAAA,CAAA,KAAA,CAAsE,CAC3E,GAAM,CAAA,SAAN,CAAA,KAAA,CAAQG,KAAR,CAAM,YAAN,CAAA,KAAA,CAAM,YAAN,CAAwCC,QAAxC,CAAA,KAAA,CAAwCA,QAAxC,CAEA,oBAA+BH,KAAK,CAALA,QAAAA,CAA/B,YAA+BA,CAA/B,oDAAM,UAAN,qBAAM,QAAN,qBACA,GAAMD,CAAAA,YAAY,CAAGK,SAAS,GAA9B,SAAA,CAEA,GAAMF,CAAAA,KAAK,CAAGH,YAAY,CAAA,SAAA,CAA1B,UAAA,CAEA,GAAMM,CAAAA,WAAW,CAAG,KAAK,CAAL,WAAA,CACjBC,SAAAA,IAAD,CAAe,CACb,GAAMC,CAAAA,SAAS,CAAG,MAAA,CAAA,IAAA,GAAA,UAAA,CAA6BD,IAAI,CAAjC,KAAiC,CAAjC,CAAlB,IAAA,CACA,GAAI,CAAJ,YAAA,CAAmB,CACjBE,QAAQ,CAARA,SAAQ,CAARA,CACD,CACDL,QAAQ,EAAIA,QAAQ,CAApBA,SAAoB,CAApBA,CANgB,CAAA,CAQlB,CAAA,YAAA,CAAA,QAAA,CARF,KAQE,CARkB,CAApB,CAWA,MAAO,CAAA,KAAA,CAAP,WAAO,CAAP,CACD","sourcesContent":["import React from 'react';\n\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const { current: isControlled } = React.useRef(prop !== undefined);\n  const value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value] as const;\n}\n\nexport interface UseControllableStateProps<T> {\n  /**\n   * The value to used in controlled mode\n   */\n  value?: T;\n  /**\n   * The initial value to be used, in uncontrolled mode\n   */\n  defaultValue?: T | (() => T);\n  /**\n   * The callback fired when the value changes\n   */\n  onChange?: (value: T) => void;\n  /**\n   * The component name (for warnings)\n   */\n  name?: string;\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nexport function useControllableState<T>(props: UseControllableStateProps<T>) {\n  const { value: valueProp, defaultValue, onChange } = props;\n\n  const [valueState, setValue] = React.useState(defaultValue as T);\n  const isControlled = valueProp !== undefined;\n\n  const value = isControlled ? (valueProp as T) : valueState;\n\n  const updateValue = React.useCallback(\n    (next: any) => {\n      const nextValue = typeof next === 'function' ? next(value) : next;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChange && onChange(nextValue);\n    },\n    [isControlled, onChange, value]\n  );\n\n  return [value, updateValue] as [T, React.Dispatch<React.SetStateAction<T>>];\n}\n"]},"metadata":{},"sourceType":"module"}