{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"visible\",\"onTransitionComplete\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{ExitAnimationContext}from\"../../primitives/Overlay/ExitAnimationContext\";import{Transition}from\"./Transition\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var PresenceTransition=function PresenceTransition(_ref,ref){var _ref$visible=_ref.visible,visible=_ref$visible===void 0?false:_ref$visible,_onTransitionComplete=_ref.onTransitionComplete,rest=_objectWithoutProperties(_ref,_excluded);var _React$useContext=React.useContext(ExitAnimationContext),setExited=_React$useContext.setExited;if(useHasResponsiveProps(rest)){return null;}return React.createElement(Transition,_extends({visible:visible,onTransitionComplete:function onTransitionComplete(state){if(state==='exited'){setExited(true);}else{setExited(false);}_onTransitionComplete&&_onTransitionComplete(state);}},rest,{ref:ref}));};export default memo(forwardRef(PresenceTransition));","map":{"version":3,"sources":["PresenceTransition.tsx"],"names":["PresenceTransition","visible","rest","setExited","React","useHasResponsiveProps","state","onTransitionComplete","ref","memo","forwardRef"],"mappings":"6ZAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,oBAAA,qDACA,OAAA,UAAA,oBAEA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAAA,GAAA,CAGtB,uBAFDC,OAEC,CAFDA,OAEC,uBAFH,KAEG,cAFH,qBAEG,MAFH,oBAEG,CAFyCC,IAEzC,0CAGH,sBAAsBE,KAAK,CAALA,UAAAA,CAHnB,oBAGmBA,CAAtB,CAAQD,SAAR,mBAAQA,SAAR,CAEA,GAAIE,qBAAqB,CAAzB,IAAyB,CAAzB,CAAiC,CAC/B,MAAA,KAAA,CACD,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,QAAA,CAAA,CACE,OAAO,CADT,OAAA,CAEE,oBAAoB,CAAGC,8BAAAA,KAAD,CAAW,CAC/B,GAAIA,KAAK,GAAT,QAAA,CAAwB,CACtBH,SAAS,CAATA,IAAS,CAATA,CADF,CAAA,IAEO,CACLA,SAAS,CAATA,KAAS,CAATA,CACD,CACDI,qBAAoB,EAAIA,qBAAoB,CAA5CA,KAA4C,CAA5CA,CACD,CATH,CAAA,CAAA,IAAA,CAAA,CAWE,GAAG,CAAEC,GAXP,CAAA,CAAA,CADF,CAZF,CAAA,CA6BA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,kBAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ExitAnimationContext } from '../../primitives/Overlay/ExitAnimationContext';\nimport { Transition } from './Transition';\nimport type { IPresenceTransitionProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PresenceTransition = (\n  { visible = false, onTransitionComplete, ...rest }: IPresenceTransitionProps,\n  ref: any\n) => {\n  // const [animationExited, setAnimationExited] = React.useState(!visible);\n\n  const { setExited } = React.useContext(ExitAnimationContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return (\n    <Transition\n      visible={visible}\n      onTransitionComplete={(state) => {\n        if (state === 'exited') {\n          setExited(true);\n        } else {\n          setExited(false);\n        }\n        onTransitionComplete && onTransitionComplete(state);\n      }}\n      {...rest}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PresenceTransition));\n"]},"metadata":{},"sourceType":"module"}