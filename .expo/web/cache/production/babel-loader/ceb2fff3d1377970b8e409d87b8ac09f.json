{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"placement\",\"title\",\"render\",\"id\",\"description\",\"duration\",\"_title\",\"_description\",\"accessibilityAnnouncement\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{Overlay}from\"../../primitives/Overlay\";import{PresenceTransition}from\"../Transitions\";import VStack from\"../../primitives/Stack/VStack\";import React,{createContext,useState,useMemo}from'react';import AccessibilityInfo from\"react-native-web/dist/exports/AccessibilityInfo\";import Platform from\"react-native-web/dist/exports/Platform\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import Box from\"../../primitives/Box\";import{usePropsResolution}from\"../../../hooks\";var INSET=50;var POSITIONS={'top':{top:INSET,left:0,right:0},'top-right':{top:INSET,right:0},'top-left':{top:INSET,left:0},'bottom':{bottom:INSET,left:0,right:0},'bottom-left':{bottom:INSET,left:0},'bottom-right':{bottom:INSET,right:0}};var initialAnimationOffset=24;var transitionConfig={'bottom':initialAnimationOffset,'top':-initialAnimationOffset,'top-right':-initialAnimationOffset,'top-left':-initialAnimationOffset,'bottom-left':initialAnimationOffset,'bottom-right':initialAnimationOffset};var ToastContext=createContext({toastInfo:{},setToastInfo:function setToastInfo(){},setToast:function setToast(){},removeToast:function removeToast(){},hideAll:function hideAll(){},isActive:function isActive(){return false;},visibleToasts:{},setVisibleToasts:function setVisibleToasts(){},hideToast:function hideToast(){}});var CustomToast=function CustomToast(_ref){var _overlay=_ref._overlay,_stack=_ref._stack,_presenceTransition=_ref._presenceTransition;var _React$useContext=React.useContext(ToastContext),toastInfo=_React$useContext.toastInfo,visibleToasts=_React$useContext.visibleToasts,removeToast=_React$useContext.removeToast;var getPositions=function getPositions(){return Object.keys(toastInfo);};var hasToastOnOverlay=false;getPositions().map(function(position){var _toastInfo$position;if(((_toastInfo$position=toastInfo[position])===null||_toastInfo$position===void 0?void 0:_toastInfo$position.length)>0)hasToastOnOverlay=true;});return getPositions().length>0?React.createElement(Overlay,_extends({},_overlay,{isOpen:hasToastOnOverlay}),getPositions().map(function(position){if(Object.keys(POSITIONS).includes(position))return React.createElement(VStack,_extends({},_stack,{key:position},POSITIONS[position]),toastInfo[position].map(function(toast){return React.createElement(PresenceTransition,_extends({},_presenceTransition,{key:toast.id,visible:visibleToasts[toast.id],onTransitionComplete:function onTransitionComplete(status){if(status==='exited'){var _toast$config,_toast$config2;removeToast(toast.id);((_toast$config=toast.config)===null||_toast$config===void 0?void 0:_toast$config.onCloseComplete)&&((_toast$config2=toast.config)===null||_toast$config2===void 0?void 0:_toast$config2.onCloseComplete());}},initial:{opacity:0,translateY:transitionConfig[position]}}),React.createElement(SafeAreaView,null,toast.component));}));else return null;})):null;};export var ToastProvider=function ToastProvider(_ref2){var children=_ref2.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),toastInfo=_useState2[0],setToastInfo=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),visibleToasts=_useState4[0],setVisibleToasts=_useState4[1];var _useState5=useState(usePropsResolution('Toast',{})),_useState6=_slicedToArray(_useState5,1),themeProps=_useState6[0];var toastIndex=React.useRef(1);var hideAll=React.useCallback(function(){setVisibleToasts({});},[setVisibleToasts]);var hideToast=React.useCallback(function(id){setVisibleToasts(function(prevVisibleToasts){return _objectSpread(_objectSpread({},prevVisibleToasts),{},_defineProperty({},id,false));});},[setVisibleToasts]);var isActive=React.useCallback(function(id){for(var _i=0,_Object$keys=Object.keys(toastInfo);_i<_Object$keys.length;_i++){var toastPosition=_Object$keys[_i];var positionArray=toastInfo[toastPosition];return positionArray.findIndex(function(toastData){return toastData.id===id;})>-1;}return false;},[toastInfo]);var removeToast=React.useCallback(function(id){setToastInfo(function(prev){for(var _i2=0,_Object$keys2=Object.keys(prev);_i2<_Object$keys2.length;_i2++){var toastPosition=_Object$keys2[_i2];var positionArray=prev[toastPosition];var isToastPresent=positionArray.findIndex(function(toastData){return toastData.id===id;})>-1;if(isToastPresent){var newPositionArray=positionArray.filter(function(item){return item.id!==id;});var temp={};temp[toastPosition]=newPositionArray;var newToastInfo=_objectSpread(_objectSpread({},prev),temp);return newToastInfo;}}return prev;});},[setToastInfo]);var setToast=React.useCallback(function(props){var _props$placement=props.placement,placement=_props$placement===void 0?'bottom':_props$placement,title=props.title,render=props.render,_props$id=props.id,id=_props$id===void 0?toastIndex.current++:_props$id,description=props.description,_props$duration=props.duration,duration=_props$duration===void 0?5000:_props$duration,_title=props._title,_description=props._description,accessibilityAnnouncement=props.accessibilityAnnouncement,rest=_objectWithoutProperties(props,_excluded);var positionToastArray=toastInfo[placement];if(!positionToastArray)positionToastArray=[];var component=null;if(render){component=render({id:id});}else{component=React.createElement(VStack,_extends({},themeProps,rest),React.createElement(Box,{_text:_objectSpread(_objectSpread({},themeProps._title),_title)},title),description&&React.createElement(Box,{_text:_objectSpread(_objectSpread({},themeProps._description),_description)},description));}toastInfo[placement]=[].concat(_toConsumableArray(positionToastArray),[{component:component,id:id,config:props}]);setToastInfo(_objectSpread({},toastInfo));setVisibleToasts(_objectSpread(_objectSpread({},visibleToasts),{},_defineProperty({},id,true)));if(duration!==null){setTimeout(function(){hideToast(id);},duration);}if(accessibilityAnnouncement&&Platform.OS==='ios'){AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);}return id;},[themeProps,toastInfo,visibleToasts,hideToast]);var contextValue=React.useMemo(function(){return{toastInfo:toastInfo,setToastInfo:setToastInfo,setToast:setToast,removeToast:removeToast,hideAll:hideAll,isActive:isActive,visibleToasts:visibleToasts,setVisibleToasts:setVisibleToasts,hideToast:hideToast};},[toastInfo,setToastInfo,setToast,removeToast,hideAll,isActive,visibleToasts,setVisibleToasts,hideToast]);return React.createElement(ToastContext.Provider,{value:contextValue},children,React.createElement(CustomToast,{_overlay:themeProps._overlay,_stack:themeProps._stack,_presenceTransition:themeProps._presenceTransition}));};export var useToast=function useToast(){var _React$useContext2=React.useContext(ToastContext),setToast=_React$useContext2.setToast,hideAll=_React$useContext2.hideAll,isActive=_React$useContext2.isActive,hideToast=_React$useContext2.hideToast;var toast=useMemo(function(){return{show:setToast,close:hideToast,closeAll:hideAll,isActive:isActive};},[setToast,hideAll,isActive,hideToast]);return toast;};export var ToastRef=React.createRef();export var Toast={show:function show(props){var _ToastRef$current;return(_ToastRef$current=ToastRef.current)===null||_ToastRef$current===void 0?void 0:_ToastRef$current.show(props);},close:function close(id){var _ToastRef$current2;return(_ToastRef$current2=ToastRef.current)===null||_ToastRef$current2===void 0?void 0:_ToastRef$current2.close(id);},closeAll:function closeAll(){var _ToastRef$current3;return(_ToastRef$current3=ToastRef.current)===null||_ToastRef$current3===void 0?void 0:_ToastRef$current3.closeAll();},isActive:function isActive(id){var _ToastRef$current4;return(_ToastRef$current4=ToastRef.current)===null||_ToastRef$current4===void 0?void 0:_ToastRef$current4.isActive(id);}};","map":{"version":3,"sources":["Toast.tsx"],"names":["INSET","POSITIONS","top","left","right","bottom","initialAnimationOffset","transitionConfig","ToastContext","createContext","toastInfo","setToastInfo","setToast","removeToast","hideAll","isActive","visibleToasts","setVisibleToasts","hideToast","CustomToast","_presenceTransition","React","getPositions","Object","hasToastOnOverlay","position","toast","status","opacity","translateY","ToastProvider","children","useState","usePropsResolution","toastIndex","id","prevVisibleToasts","toastPosition","positionArray","toastData","prev","isToastPresent","newPositionArray","item","temp","newToastInfo","props","placement","duration","rest","positionToastArray","component","render","themeProps","_title","description","_description","config","setTimeout","accessibilityAnnouncement","Platform","AccessibilityInfo","contextValue","useToast","useMemo","show","close","closeAll","ToastRef","Toast"],"mappings":"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","sourcesContent":["import { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, {\n  createContext,\n  MutableRefObject,\n  useState,\n  useMemo,\n} from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IToastContext, IToastInfo, IToast, IToastProps } from './types';\n\nconst INSET = 50;\n\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0,\n  },\n  'top-right': {\n    top: INSET,\n    right: 0,\n  },\n  'top-left': {\n    top: INSET,\n    left: 0,\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0,\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0,\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0,\n  },\n};\n\nconst initialAnimationOffset = 24;\n\nconst transitionConfig: any = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset,\n};\n\nconst ToastContext = createContext<IToastContext>({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {},\n});\n\nconst CustomToast = ({ _overlay, _stack, _presenceTransition }: any) => {\n  const { toastInfo, visibleToasts, removeToast } = React.useContext(\n    ToastContext\n  );\n\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n\n  let hasToastOnOverlay = false;\n  getPositions().map((position) => {\n    if (toastInfo[position]?.length > 0) hasToastOnOverlay = true;\n  });\n\n  return getPositions().length > 0 ? (\n    <Overlay {..._overlay} isOpen={hasToastOnOverlay}>\n      {getPositions().map((position: string) => {\n        if (Object.keys(POSITIONS).includes(position))\n          return (\n            <VStack\n              {..._stack}\n              key={position}\n              // @ts-ignore\n              {...POSITIONS[position]}\n            >\n              {\n                // @ts-ignore\n                toastInfo[position].map((toast: IToast) => (\n                  <PresenceTransition\n                    {..._presenceTransition}\n                    key={toast.id}\n                    visible={visibleToasts[toast.id]}\n                    onTransitionComplete={(status: any) => {\n                      if (status === 'exited') {\n                        removeToast(toast.id);\n                        toast.config?.onCloseComplete &&\n                          toast.config?.onCloseComplete();\n                      }\n                    }}\n                    initial={{\n                      opacity: 0,\n                      translateY: transitionConfig[position],\n                    }}\n                  >\n                    <SafeAreaView>{toast.component}</SafeAreaView>\n                  </PresenceTransition>\n                ))\n              }\n            </VStack>\n          );\n        else return null;\n      })}\n    </Overlay>\n  ) : null;\n};\n\nexport const ToastProvider = ({ children }: { children: any }) => {\n  const [toastInfo, setToastInfo] = useState<IToastInfo>({});\n  const [visibleToasts, setVisibleToasts] = useState<\n    {\n      [key in string]: boolean;\n    }\n  >({});\n\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n\n  const hideToast = React.useCallback(\n    (id: any) => {\n      setVisibleToasts((prevVisibleToasts) => ({\n        ...prevVisibleToasts,\n        [id]: false,\n      }));\n    },\n    [setVisibleToasts]\n  );\n\n  const isActive = React.useCallback(\n    (id: any) => {\n      for (const toastPosition of Object.keys(toastInfo)) {\n        const positionArray: Array<IToast> = toastInfo[toastPosition];\n        return positionArray.findIndex((toastData) => toastData.id === id) > -1;\n      }\n\n      return false;\n    },\n    [toastInfo]\n  );\n\n  const removeToast = React.useCallback(\n    (id: any) => {\n      setToastInfo((prev) => {\n        for (const toastPosition of Object.keys(prev)) {\n          const positionArray: Array<IToast> = prev[toastPosition];\n          const isToastPresent =\n            positionArray.findIndex((toastData) => toastData.id === id) > -1;\n\n          if (isToastPresent) {\n            const newPositionArray = positionArray.filter(\n              (item) => item.id !== id\n            );\n            const temp: any = {};\n            temp[toastPosition] = newPositionArray;\n\n            const newToastInfo = { ...prev, ...temp };\n            return newToastInfo;\n          }\n        }\n\n        return prev;\n      });\n    },\n    [setToastInfo]\n  );\n\n  const setToast = React.useCallback(\n    (props: IToastProps): number => {\n      const {\n        placement = 'bottom',\n        title,\n        render,\n        id = toastIndex.current++,\n        description,\n        duration = 5000,\n        _title,\n        _description,\n        accessibilityAnnouncement,\n        ...rest\n      } = props;\n\n      let positionToastArray = toastInfo[placement];\n      if (!positionToastArray) positionToastArray = [];\n\n      let component = null;\n\n      if (render) {\n        component = render({ id });\n      } else {\n        component = (\n          // Below VStack is the default component where all the direct props spread.\n          <VStack {...themeProps} {...rest}>\n            <Box _text={{ ...themeProps._title, ..._title }}>{title}</Box>\n            {description && (\n              <Box _text={{ ...themeProps._description, ..._description }}>\n                {description}\n              </Box>\n            )}\n          </VStack>\n        );\n      }\n\n      toastInfo[placement] = [\n        ...positionToastArray,\n        { component, id, config: props },\n      ];\n\n      setToastInfo({ ...toastInfo });\n\n      setVisibleToasts({ ...visibleToasts, [id]: true });\n      if (duration !== null) {\n        setTimeout(function () {\n          hideToast(id);\n        }, duration);\n      }\n\n      // iOS doesn't support accessibilityLiveRegion\n      if (accessibilityAnnouncement && Platform.OS === 'ios') {\n        AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n      }\n\n      return id;\n    },\n    [themeProps, toastInfo, visibleToasts, hideToast]\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast,\n    };\n  }, [\n    toastInfo,\n    setToastInfo,\n    setToast,\n    removeToast,\n    hideAll,\n    isActive,\n    visibleToasts,\n    setVisibleToasts,\n    hideToast,\n  ]);\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <CustomToast\n        _overlay={themeProps._overlay}\n        _stack={themeProps._stack}\n        _presenceTransition={themeProps._presenceTransition}\n      />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const { setToast, hideAll, isActive, hideToast } = React.useContext(\n    ToastContext\n  );\n\n  const toast = useMemo(\n    () => ({\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive,\n    }),\n    [setToast, hideAll, isActive, hideToast]\n  );\n\n  return toast;\n};\n\nexport type IToastService = ReturnType<typeof useToast>;\n\nexport const ToastRef = React.createRef<IToastService>() as MutableRefObject<IToastService>;\n\nexport const Toast: IToastService = {\n  show: (props: IToastProps) => ToastRef.current?.show(props),\n  close: (id: any) => ToastRef.current?.close(id),\n  closeAll: () => ToastRef.current?.closeAll(),\n  isActive: (id: any) => ToastRef.current?.isActive(id),\n};\n"]},"metadata":{},"sourceType":"module"}