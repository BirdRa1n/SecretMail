{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"variant\"],_excluded2=[\"label\",\"icon\",\"renderInPortal\",\"placement\",\"placementProps\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Button}from\"../../primitives/Button\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{OverlayContainer}from'@react-native-aria/overlays';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Fab=function Fab(_ref,ref){var variant=_ref.variant,props=_objectWithoutProperties(_ref,_excluded);var themeProps=usePropsResolution('FAB',props);var label=themeProps.label,icon=themeProps.icon,renderInPortal=themeProps.renderInPortal,placement=themeProps.placement,placementProps=themeProps.placementProps,newProps=_objectWithoutProperties(themeProps,_excluded2);var fabComponent=React.createElement(Button,_extends({variant:variant},placementProps[placement],{ref:ref,startIcon:icon},newProps),label);if(useHasResponsiveProps(props)){return null;}return renderInPortal?React.createElement(OverlayContainer,null,fabComponent):fabComponent;};export default memo(forwardRef(Fab));","map":{"version":3,"sources":["Fab.tsx"],"names":["Fab","props","themeProps","usePropsResolution","newProps","fabComponent","variant","placementProps","icon","useHasResponsiveProps","renderInPortal","memo","forwardRef"],"mappings":"gdAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,MAAA,+BAEA,OAAA,kBAAA,oCACA,OAAA,gBAAA,KAAA,6BAAA,CACA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAA,GAAA,CAAgD,IAA/C,CAAA,OAA+C,MAA/C,OAA+C,CAAjCC,KAAiC,0CAC1D,GAAMC,CAAAA,UAAU,CAAGC,kBAAkB,CAAA,KAAA,CAArC,KAAqC,CAArC,CACA,GAAM,CAAA,KAAN,CAAA,UAAA,CAAM,KAAN,CAAM,IAAN,CAAA,UAAA,CAAM,IAAN,CAAM,cAAN,CAAA,UAAA,CAAM,cAAN,CAAM,SAAN,CAAA,UAAA,CAAM,SAAN,CAAM,cAAN,CAAA,UAAA,CAAM,cAAN,CAMKC,QANL,0BAAA,UAAA,aASA,GAAMC,CAAAA,YAAY,CAChB,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CACE,OAAO,CAAEC,OADX,CAAA,CAEMC,cAAc,CAFpB,SAEoB,CAFpB,CAAA,CAGE,GAAG,CAHL,GAAA,CAIE,SAAS,CAAEC,IAJb,CAAA,CAAA,QAAA,CAAA,CAZwD,KAYxD,CADF,CAYA,GAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CAED,MAAOC,CAAAA,cAAc,CACnB,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,IAAA,CADmB,YACnB,CADmB,CAArB,YAAA,CA3BF,CAAA,CAkCA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,GAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IFabProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Fab = ({ variant, ...props }: IFabProps, ref: any) => {\n  const themeProps = usePropsResolution('FAB', props);\n  const {\n    label,\n    icon,\n    renderInPortal,\n    placement,\n    placementProps,\n    ...newProps\n  } = themeProps;\n\n  const fabComponent = (\n    <Button\n      variant={variant}\n      {...placementProps[placement]}\n      ref={ref}\n      startIcon={icon}\n      {...newProps}\n    >\n      {label}\n    </Button>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return renderInPortal ? (\n    <OverlayContainer>{fabComponent}</OverlayContainer>\n  ) : (\n    fabComponent\n  );\n};\n\nexport default memo(forwardRef(Fab));\n"]},"metadata":{},"sourceType":"module"}