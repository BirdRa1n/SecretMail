{"ast":null,"code":"import _extends2 from\"@babel/runtime/helpers/extends\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{ChevronDownIcon,ChevronUpIcon}from\"../../primitives/Icon/Icons\";import{AccordionItemContext}from\"./Context\";import{useThemeProps}from\"../../../hooks\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var AccordionIcon=function AccordionIcon(_ref,ref){var props=_extends2({},_ref);var _React$useContext=React.useContext(AccordionItemContext),isOpen=_React$useContext.isOpen;var _useThemeProps=useThemeProps('AccordionIcon',props),newProps=_extends2({},_useThemeProps);if(useHasResponsiveProps(props)){return null;}return isOpen?React.createElement(ChevronUpIcon,_extends({color:\"white\"},newProps,{ref:ref})):React.createElement(ChevronDownIcon,_extends({},newProps,{ref:ref}));};export default React.memo(React.forwardRef(AccordionIcon));","map":{"version":3,"sources":["AccordionIcon.tsx"],"names":["AccordionIcon","props","isOpen","React","newProps","useThemeProps","useHasResponsiveProps","ref"],"mappings":"6UAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,eAAA,CAAA,aAAA,mCAEA,OAAA,oBAAA,iBACA,OAAA,aAAA,sBACA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAA,GAAA,CAAkD,IAA5CC,CAAAA,KAA4C,oBACtE,sBAA+CE,KAAK,CAALA,UAAAA,CAA/C,oBAA+CA,CAA/C,CAAQD,MAAR,mBAAQA,MAAR,CAGA,mBAAwBG,aAAa,CAAA,eAAA,CAJiC,KAIjC,CAArC,CAAWD,QAAX,8BAEA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MAAOJ,CAAAA,MAAM,CACX,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CAAe,KAAK,CAAC,OAArB,CAAA,CAAA,QAAA,CAAA,CAA2C,GAAG,CAAEK,GAAhD,CAAA,CAAA,CADW,CAGX,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CAA+B,GAAG,CAAEA,GAApC,CAAA,CAAA,CAHF,CATF,CAAA,CAgBA,cAAeJ,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,aAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '../../primitives/Icon/Icons';\nimport type { IAccordionIconProps, IAccordionItemContextProps } from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionIcon = ({ ...props }: IAccordionIconProps, ref?: any) => {\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { ...newProps } = useThemeProps('AccordionIcon', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return isOpen ? (\n    <ChevronUpIcon color=\"white\" {...newProps} ref={ref} />\n  ) : (\n    <ChevronDownIcon {...newProps} ref={ref} />\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionIcon));\n"]},"metadata":{},"sourceType":"module"}