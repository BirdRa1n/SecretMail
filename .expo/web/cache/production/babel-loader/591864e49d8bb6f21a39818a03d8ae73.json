{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"in\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import PresenceTransition from\"./PresenceTransition\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{usePropsResolution}from\"../../../hooks/\";var ScaleFade=function ScaleFade(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _usePropsResolution=usePropsResolution('ScaleFade',props),animationState=_usePropsResolution.in,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(PresenceTransition,_extends({visible:animationState},resolvedProps,{ref:ref}),children);};export default React.memo(React.forwardRef(ScaleFade));","map":{"version":3,"sources":["ScaleFade.tsx"],"names":["ScaleFade","props","in","resolvedProps","usePropsResolution","useHasResponsiveProps","animationState","ref","React"],"mappings":"yZAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,kBAAA,4BACA,OAAA,qBAAA,4CACA,OAAA,kBAAA,uBAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAA,GAAA,CAAwD,IAAvD,CAAA,QAAuD,MAAvD,QAAuD,CAAxCC,KAAwC,0CACxE,wBAAiDG,kBAAkB,CAAA,WAAA,CADK,KACL,CAAnE,CAAM,cAAN,qBAAQF,EAAR,CAA+BC,aAA/B,0DAKA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CAAoB,OAAO,CAAEC,cAA7B,CAAA,CAAA,aAAA,CAAA,CAAgE,GAAG,CAAEC,GAArE,CAAA,CAAA,CADF,QACE,CADF,CAVF,CAAA,CAiBA,cAAeC,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,SAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport type { IScaleFadeProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst ScaleFade = ({ children, ...props }: IScaleFadeProps, ref?: any) => {\n  const { in: animationState, ...resolvedProps } = usePropsResolution(\n    'ScaleFade',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} {...resolvedProps} ref={ref}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(ScaleFade));\n"]},"metadata":{},"sourceType":"module"}