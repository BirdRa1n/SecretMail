{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"orientation\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import Box from\"./../../primitives/Box\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Divider=function Divider(props,ref){var _usePropsResolution=usePropsResolution('Divider',props,{},{resolveResponsively:['thickness']}),orientation=_usePropsResolution.orientation,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({},resolvedProps,{ref:ref,\"aria-orientation\":orientation,accessibilityRole:Platform.OS==='web'?'separator':undefined}));};export default memo(forwardRef(Divider));","map":{"version":3,"sources":["index.tsx"],"names":["Divider","resolvedProps","usePropsResolution","resolveResponsively","useHasResponsiveProps","Platform","undefined","memo","forwardRef"],"mappings":"0YAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,C,6DAEA,OAAA,kBAAA,oCACA,MAAA,CAAA,GAAA,8BAEA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAA,KAAA,CAAA,GAAA,CAAqC,CACnD,wBAA0CE,kBAAkB,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAI1D,CAAEC,mBAAmB,CAAE,CAAA,WAAA,CAAvB,CAJ0D,CAA5D,CAAM,WAAN,qBAAM,WAAN,CAAwBF,aAAxB,yDAOA,GAAIG,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAEE,GAAG,CAFL,GAAA,CAGE,mBAHF,WAAA,CAKE,iBAAiB,CAAEC,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,CAAAA,WAAAA,CAAsCC,SAL3D,CAAA,CAAA,CADF,CAXF,CAAA,CAsBA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,OAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from './../../primitives/Box';\nimport type { IDividerProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Divider = (props: IDividerProps, ref?: any) => {\n  const { orientation, ...resolvedProps } = usePropsResolution(\n    'Divider',\n    props,\n    {},\n    { resolveResponsively: ['thickness'] }\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      {...resolvedProps}\n      ref={ref}\n      aria-orientation={orientation}\n      //@ts-ignore web only role\n      accessibilityRole={Platform.OS === 'web' ? 'separator' : undefined}\n    />\n  );\n};\n\nexport default memo(forwardRef(Divider));\n"]},"metadata":{},"sourceType":"module"}