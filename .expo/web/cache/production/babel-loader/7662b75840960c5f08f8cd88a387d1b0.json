{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"index\",\"defaultIndex\",\"allowMultiple\",\"allowToggle\",\"onChange\"],_excluded2=[\"endingHeight\",\"startingHeight\",\"duration\",\"isOpen\",\"onAnimationEnd\",\"onAnimationStart\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Box from\"../../primitives/Box\";import{useThemeProps}from\"../../../hooks\";import getIndexedChildren from\"../../../utils/getIndexedChildren\";import{AccordionContext}from\"./Context\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Accordion=function Accordion(_ref,ref){var children=_ref.children,pIndex=_ref.index,defaultIndex=_ref.defaultIndex,allowMultiple=_ref.allowMultiple,allowToggle=_ref.allowToggle,onChange=_ref.onChange,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('Accordion',props),endingHeight=_useThemeProps.endingHeight,startingHeight=_useThemeProps.startingHeight,duration=_useThemeProps.duration,isOpen=_useThemeProps.isOpen,onAnimationEnd=_useThemeProps.onAnimationEnd,onAnimationStart=_useThemeProps.onAnimationStart,newProps=_objectWithoutProperties(_useThemeProps,_excluded2);var _React$useState=React.useState(pIndex||defaultIndex||[]),_React$useState2=_slicedToArray(_React$useState,2),index=_React$useState2[0],setIndex=_React$useState2[1];if(useHasResponsiveProps(props)){return null;}var changeHandler=function changeHandler(isOpening,activeIndex){var indexCopy=index.map(function(i){return i;});if(allowToggle){if(isOpening){indexCopy.push(activeIndex);allowMultiple?setIndex(indexCopy):setIndex([activeIndex]);}else{setIndex(index.splice(index.indexOf(activeIndex),1));}}else{if(isOpening){indexCopy.push(activeIndex);allowMultiple?setIndex(indexCopy):setIndex([activeIndex]);}else{indexCopy=indexCopy.filter(function(n){return n!==activeIndex;});setIndex(indexCopy);}}onChange&&onChange(indexCopy);};return React.createElement(AccordionContext.Provider,{value:{index:index,changeHandler:changeHandler,AnimationProps:{endingHeight:endingHeight,startingHeight:startingHeight,duration:duration,isOpen:isOpen,onAnimationEnd:onAnimationEnd,onAnimationStart:onAnimationStart}}},React.createElement(Box,_extends({overflow:\"hidden\"},newProps,{ref:ref}),getIndexedChildren(children)));};export default React.memo(React.forwardRef(Accordion));","map":{"version":3,"sources":["Accordion.tsx"],"names":["Accordion","index","props","newProps","useThemeProps","React","pIndex","useHasResponsiveProps","changeHandler","indexCopy","i","allowMultiple","setIndex","n","onChange","AnimationProps","endingHeight","startingHeight","duration","isOpen","onAnimationEnd","onAnimationStart","ref","getIndexedChildren"],"mappings":"6mBAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,GAAA,4BAEA,OAAA,aAAA,sBACA,MAAA,CAAA,kBAAA,yCACA,OAAA,gBAAA,iBACA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAA,GAAA,CAWb,IAVH,CAAA,QAUG,MAVH,QAUG,CAVH,MAUG,MARDC,KAQC,CAVH,YAUG,MAVH,YAUG,CAVH,aAUG,MAVH,aAUG,CAVH,WAUG,MAVH,WAUG,CAVH,QAUG,MAVH,QAUG,CAHEC,KAGF,0CACH,mBAQIE,aAAa,CAAA,WAAA,CARjB,KAQiB,CARjB,CAAM,YAAN,gBAAM,YAAN,CAAM,cAAN,gBAAM,cAAN,CAAM,QAAN,gBAAM,QAAN,CAAM,MAAN,gBAAM,MAAN,CAAM,cAAN,gBAAM,cAAN,CAAM,gBAAN,gBAAM,gBAAN,CAOKD,QAPL,qDAUA,oBAA0BE,KAAK,CAALA,QAAAA,CAAeC,MAAM,EAANA,YAAAA,EAXtC,EAWuBD,CAA1B,oDAAM,KAAN,qBAAM,QAAN,qBAEA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAA,SAAA,CAAA,WAAA,CAA6C,CACjE,GAAIC,CAAAA,SAAS,CAAGR,KAAK,CAALA,GAAAA,CAAWS,SAAAA,CAAD,QAA1B,CAAA,CAA0B,EAAVT,CAAhB,CACA,GAAA,WAAA,CAAiB,CACf,GAAA,SAAA,CAAe,CACbQ,SAAS,CAATA,IAAAA,CAAAA,WAAAA,EACAE,aAAa,CAAGC,QAAQ,CAAX,SAAW,CAAX,CAAyBA,QAAQ,CAAC,CAA/CD,WAA+C,CAAD,CAA9CA,CAFF,CAAA,IAGO,CACLC,QAAQ,CAACX,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAALA,OAAAA,CAAbA,WAAaA,CAAbA,CAATW,CAASX,CAAD,CAARW,CACD,CANH,CAAA,IAOO,CACL,GAAA,SAAA,CAAe,CACbH,SAAS,CAATA,IAAAA,CAAAA,WAAAA,EACAE,aAAa,CAAGC,QAAQ,CAAX,SAAW,CAAX,CAAyBA,QAAQ,CAAC,CAA/CD,WAA+C,CAAD,CAA9CA,CAFF,CAAA,IAGO,CACLF,SAAS,CAAGA,SAAS,CAATA,MAAAA,CAAkBI,SAAAA,CAAD,QAAYA,CAAAA,CAAC,GAA1CJ,WAA6B,EAAjBA,CAAZA,CACAG,QAAQ,CAARA,SAAQ,CAARA,CACD,CACF,CACDE,QAAQ,EAAIA,QAAQ,CAApBA,SAAoB,CAApBA,CAlBF,CAAA,CAoBA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,gBAAD,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACLb,KAAK,CADA,KAAA,CAELO,aAFK,CAELA,aAFK,CAGLO,cAAc,CAAE,CACdC,YADc,CACdA,YADc,CAEdC,cAFc,CAEdA,cAFc,CAGdC,QAHc,CAGdA,QAHc,CAIdC,MAJc,CAIdA,MAJc,CAKdC,cALc,CAKdA,cALc,CAMdC,gBAAAA,CAAAA,gBANc,CAHX,CADT,CAAA,CAcE,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAK,QAAQ,CAAC,QAAd,CAAA,CAAA,QAAA,CAAA,CAAqC,GAAG,CAAEC,GAA1C,CAAA,CAAA,CACGC,kBAAkB,CAhBzB,QAgByB,CADrB,CAdF,CADF,CA/CF,CAAA,CAqEA,cAAelB,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,SAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { IAccordionProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\nimport { AccordionContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Accordion = (\n  {\n    children,\n    index: pIndex,\n    defaultIndex,\n    allowMultiple,\n    allowToggle,\n    onChange,\n    ...props\n  }: IAccordionProps,\n  ref: any\n) => {\n  const {\n    endingHeight,\n    startingHeight,\n    duration,\n    isOpen,\n    onAnimationEnd,\n    onAnimationStart,\n    ...newProps\n  } = useThemeProps('Accordion', props);\n\n  const [index, setIndex] = React.useState(pIndex || defaultIndex || []);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  const changeHandler = (isOpening: boolean, activeIndex: number) => {\n    let indexCopy = index.map((i: number) => i);\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        indexCopy = indexCopy.filter((n: any) => n !== activeIndex);\n        setIndex(indexCopy);\n      }\n    }\n    onChange && onChange(indexCopy);\n  };\n  return (\n    <AccordionContext.Provider\n      value={{\n        index: index,\n        changeHandler,\n        AnimationProps: {\n          endingHeight,\n          startingHeight,\n          duration,\n          isOpen,\n          onAnimationEnd,\n          onAnimationStart,\n        },\n      }}\n    >\n      <Box overflow=\"hidden\" {...newProps} ref={ref}>\n        {getIndexedChildren(children)}\n      </Box>\n    </AccordionContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Accordion));\n"]},"metadata":{},"sourceType":"module"}