{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"label\",\"children\",\"onClose\",\"onOpen\",\"defaultIsOpen\",\"placement\",\"openDelay\",\"closeDelay\",\"closeOnClick\",\"offset\",\"isDisabled\",\"hasArrow\",\"arrowSize\",\"isOpen\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{OverlayContainer}from'@react-native-aria/overlays';import React from'react';import{useControllableState,useKeyboardDismissable}from\"../../../hooks\";import{Popper}from\"../Popper\";import{composeEventHandlers,mergeRefs}from\"../../../utils\";import{PresenceTransition}from\"../Transitions\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{usePropsResolution}from\"../../../hooks\";import Box from\"../../primitives/Box\";import{useId}from'@react-aria/utils';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var Tooltip=function Tooltip(_ref3){var label=_ref3.label,children=_ref3.children,onClose=_ref3.onClose,onOpen=_ref3.onOpen,defaultIsOpen=_ref3.defaultIsOpen,placement=_ref3.placement,_ref3$openDelay=_ref3.openDelay,openDelay=_ref3$openDelay===void 0?0:_ref3$openDelay,_ref3$closeDelay=_ref3.closeDelay,closeDelay=_ref3$closeDelay===void 0?0:_ref3$closeDelay,_ref3$closeOnClick=_ref3.closeOnClick,closeOnClick=_ref3$closeOnClick===void 0?true:_ref3$closeOnClick,offset=_ref3.offset,isDisabled=_ref3.isDisabled,hasArrow=_ref3.hasArrow,_ref3$arrowSize=_ref3.arrowSize,arrowSize=_ref3$arrowSize===void 0?12:_ref3$arrowSize,isOpenProp=_ref3.isOpen,props=_objectWithoutProperties(_ref3,_excluded);var _ref,_ref2,_props$backgroundColo;if(hasArrow&&offset===undefined){offset=0;}else{offset=6;}var resolvedProps=usePropsResolution('Tooltip',props);var _useControllableState=useControllableState({value:isOpenProp,defaultValue:defaultIsOpen,onChange:function onChange(value){value?onOpen&&onOpen():onClose&&onClose();}}),_useControllableState2=_slicedToArray(_useControllableState,2),isOpen=_useControllableState2[0],setIsOpen=_useControllableState2[1];var arrowBg=(_ref=(_ref2=(_props$backgroundColo=props.backgroundColor)!==null&&_props$backgroundColo!==void 0?_props$backgroundColo:props.bgColor)!==null&&_ref2!==void 0?_ref2:props.bg)!==null&&_ref!==void 0?_ref:resolvedProps.bg;var targetRef=React.useRef(null);var enterTimeout=React.useRef();var exitTimeout=React.useRef();var tooltipID=useId();var openWithDelay=React.useCallback(function(){if(!isDisabled){enterTimeout.current=setTimeout(function(){return setIsOpen(true);},openDelay);}},[isDisabled,setIsOpen,openDelay]);var closeWithDelay=React.useCallback(function(){if(enterTimeout.current){clearTimeout(enterTimeout.current);}exitTimeout.current=setTimeout(function(){return setIsOpen(false);},closeDelay);},[closeDelay,setIsOpen]);React.useEffect(function(){return function(){clearTimeout(enterTimeout.current);clearTimeout(exitTimeout.current);};},[]);var newChildren=children;if(typeof children==='string'){newChildren=React.createElement(Box,null,children);}newChildren=React.cloneElement(newChildren,{'onPress':composeEventHandlers(newChildren.props.onPress,function(){if(closeOnClick){closeWithDelay();}}),'onFocus':composeEventHandlers(newChildren.props.onFocus,openWithDelay),'onBlur':composeEventHandlers(newChildren.props.onBlur,closeWithDelay),'onMouseEnter':composeEventHandlers(newChildren.props.onMouseEnter,openWithDelay),'onMouseLeave':composeEventHandlers(newChildren.props.onMouseLeave,closeWithDelay),'ref':mergeRefs([newChildren.ref,targetRef]),'aria-describedby':isOpen?tooltipID:undefined});useKeyboardDismissable({enabled:isOpen,callback:function callback(){return setIsOpen(false);}});if(useHasResponsiveProps(props)){return null;}return React.createElement(React.Fragment,null,newChildren,isOpen&&React.createElement(OverlayContainer,null,React.createElement(PresenceTransition,{initial:{opacity:0},animate:{opacity:1,transition:{duration:150}},exit:{opacity:0,transition:{duration:100}},visible:isOpen,style:StyleSheet.absoluteFill},React.createElement(Popper,{triggerRef:targetRef,onClose:function onClose(){return setIsOpen(false);},placement:placement,offset:offset},React.createElement(Popper.Content,{isOpen:isOpen},hasArrow&&React.createElement(Popper.Arrow,{borderColor:\"transparent\",backgroundColor:arrowBg,height:arrowSize,width:arrowSize}),React.createElement(Box,_extends({},resolvedProps,{accessibilityRole:Platform.OS==='web'?'tooltip':undefined,nativeID:tooltipID}),label))))));};","map":{"version":3,"sources":["Tooltip.tsx"],"names":["Tooltip","openDelay","closeDelay","closeOnClick","arrowSize","isOpen","props","hasArrow","offset","resolvedProps","usePropsResolution","useControllableState","value","defaultValue","onChange","onOpen","onClose","arrowBg","targetRef","React","enterTimeout","exitTimeout","tooltipID","useId","openWithDelay","setTimeout","setIsOpen","closeWithDelay","clearTimeout","newChildren","composeEventHandlers","mergeRefs","undefined","useKeyboardDismissable","enabled","callback","useHasResponsiveProps","opacity","transition","duration","StyleSheet","absoluteFill","Platform"],"mappings":"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","sourcesContent":["import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport { useControllableState, useKeyboardDismissable } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport { composeEventHandlers, mergeRefs } from '../../../utils';\nimport { PresenceTransition } from '../Transitions';\nimport { Platform, StyleSheet } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ITooltipProps } from './types';\nimport { useId } from '@react-aria/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const Tooltip = ({\n  label,\n  children,\n  onClose,\n  onOpen,\n  defaultIsOpen,\n  placement,\n  openDelay = 0,\n  closeDelay = 0,\n  closeOnClick = true,\n  offset,\n  isDisabled,\n  hasArrow,\n  arrowSize = 12,\n  isOpen: isOpenProp,\n  ...props\n}: ITooltipProps) => {\n  if (hasArrow && offset === undefined) {\n    offset = 0;\n  } else {\n    offset = 6;\n  }\n\n  const resolvedProps = usePropsResolution('Tooltip', props);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const arrowBg =\n    props.backgroundColor ?? props.bgColor ?? props.bg ?? resolvedProps.bg;\n\n  const targetRef = React.useRef(null);\n\n  const enterTimeout = React.useRef<any>();\n  const exitTimeout = React.useRef<any>();\n  const tooltipID = useId();\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = setTimeout(() => setIsOpen(true), openDelay);\n    }\n  }, [isDisabled, setIsOpen, openDelay]);\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n    exitTimeout.current = setTimeout(() => setIsOpen(false), closeDelay);\n  }, [closeDelay, setIsOpen]);\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    },\n    []\n  );\n\n  let newChildren = children;\n\n  if (typeof children === 'string') {\n    newChildren = <Box>{children}</Box>;\n  }\n\n  newChildren = React.cloneElement(newChildren, {\n    'onPress': composeEventHandlers<any>(newChildren.props.onPress, () => {\n      if (closeOnClick) {\n        closeWithDelay();\n      }\n    }),\n    'onFocus': composeEventHandlers<any>(\n      newChildren.props.onFocus,\n      openWithDelay\n    ),\n    'onBlur': composeEventHandlers<any>(\n      newChildren.props.onBlur,\n      closeWithDelay\n    ),\n    'onMouseEnter': composeEventHandlers<any>(\n      newChildren.props.onMouseEnter,\n      openWithDelay\n    ),\n    'onMouseLeave': composeEventHandlers<any>(\n      newChildren.props.onMouseLeave,\n      closeWithDelay\n    ),\n    'ref': mergeRefs([newChildren.ref, targetRef]),\n\n    'aria-describedby': isOpen ? tooltipID : undefined,\n  });\n\n  useKeyboardDismissable({\n    enabled: isOpen,\n    callback: () => setIsOpen(false),\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {newChildren}\n      {isOpen && (\n        <OverlayContainer>\n          <PresenceTransition\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { duration: 150 } }}\n            exit={{ opacity: 0, transition: { duration: 100 } }}\n            visible={isOpen}\n            style={StyleSheet.absoluteFill}\n          >\n            <Popper\n              triggerRef={targetRef}\n              onClose={() => setIsOpen(false)}\n              placement={placement}\n              offset={offset}\n            >\n              <Popper.Content isOpen={isOpen}>\n                {hasArrow && (\n                  <Popper.Arrow\n                    borderColor=\"transparent\"\n                    backgroundColor={arrowBg}\n                    height={arrowSize}\n                    width={arrowSize}\n                  />\n                )}\n                <Box\n                  {...resolvedProps}\n                  //@ts-ignore\n                  accessibilityRole={\n                    Platform.OS === 'web' ? 'tooltip' : undefined\n                  }\n                  nativeID={tooltipID}\n                >\n                  {label}\n                </Box>\n              </Popper.Content>\n            </Popper>\n          </PresenceTransition>\n        </OverlayContainer>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}