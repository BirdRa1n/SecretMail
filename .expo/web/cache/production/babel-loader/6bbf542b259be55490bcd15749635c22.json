{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"isHovered\",\"isFocused\",\"onKeyPress\"],_excluded2=[\"ariaLabel\",\"accessibilityLabel\",\"type\",\"isFullWidth\",\"isDisabled\",\"isReadOnly\",\"fontFamily\",\"fontWeight\",\"fontStyle\",\"placeholderTextColor\",\"selectionColor\",\"underlineColorAndroid\",\"InputLeftElement\",\"InputRightElement\",\"leftElement\",\"rightElement\",\"onFocus\",\"onBlur\",\"wrapperRef\",\"_stack\",\"_input\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import{useToken}from\"../../../hooks\";import{useFormControl}from\"../../composites/FormControl\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{useHover}from'@react-native-aria/interactions';import{extractInObject,stylingProps}from\"../../../theme/tools/utils\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{mergeRefs}from\"../../../utils\";import{Stack}from\"../Stack\";import{makeStyledComponent}from\"../../../utils/styled\";import{useResolvedFontFamily}from\"../../../hooks/useResolvedFontFamily\";var StyledInput=makeStyledComponent(TextInput);var Input=function Input(_ref2,ref){var isHoveredProp=_ref2.isHovered,isFocusedProp=_ref2.isFocused,_onKeyPress=_ref2.onKeyPress,props=_objectWithoutProperties(_ref2,_excluded);var inputProps=useFormControl({isDisabled:props.isDisabled,isInvalid:props.isInvalid,isReadOnly:props.isReadOnly,isRequired:props.isRequired,nativeID:props.nativeID});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isFocused=_React$useState2[0],setIsFocused=_React$useState2[1];var handleFocus=function handleFocus(focusState,callback){setIsFocused(focusState);callback();};props.focusOutlineColor=useToken('colors',props.focusOutlineColor);props.inValidOutlineColor=useToken('colors',props.inValidOutlineColor);var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var inputThemeProps={isDisabled:inputProps.disabled,isInvalid:inputProps.accessibilityInvalid,isReadOnly:inputProps.accessibilityReadOnly,isRequired:inputProps.required};var _usePropsResolution=usePropsResolution('Input',_objectSpread(_objectSpread({},inputThemeProps),props),{isDisabled:inputThemeProps.isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isInvalid:inputThemeProps.isInvalid,isReadOnly:inputThemeProps.isReadOnly}),ariaLabel=_usePropsResolution.ariaLabel,accessibilityLabel=_usePropsResolution.accessibilityLabel,type=_usePropsResolution.type,isFullWidth=_usePropsResolution.isFullWidth,isDisabled=_usePropsResolution.isDisabled,isReadOnly=_usePropsResolution.isReadOnly,fontFamily=_usePropsResolution.fontFamily,fontWeight=_usePropsResolution.fontWeight,fontStyle=_usePropsResolution.fontStyle,placeholderTextColor=_usePropsResolution.placeholderTextColor,selectionColor=_usePropsResolution.selectionColor,underlineColorAndroid=_usePropsResolution.underlineColorAndroid,InputLeftElement=_usePropsResolution.InputLeftElement,InputRightElement=_usePropsResolution.InputRightElement,leftElement=_usePropsResolution.leftElement,rightElement=_usePropsResolution.rightElement,_onFocus=_usePropsResolution.onFocus,_onBlur=_usePropsResolution.onBlur,wrapperRef=_usePropsResolution.wrapperRef,_stack=_usePropsResolution._stack,_input=_usePropsResolution._input,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _extractInObject=extractInObject(resolvedProps,[].concat(_toConsumableArray(stylingProps.margin),_toConsumableArray(stylingProps.border),_toConsumableArray(stylingProps.layout),_toConsumableArray(stylingProps.flexbox),_toConsumableArray(stylingProps.position),_toConsumableArray(stylingProps.background),['shadow','opacity'])),_extractInObject2=_slicedToArray(_extractInObject,2),layoutProps=_extractInObject2[0],nonLayoutProps=_extractInObject2[1];var resolvedFontFamily=useResolvedFontFamily({fontFamily:fontFamily,fontWeight:fontWeight!==null&&fontWeight!==void 0?fontWeight:400,fontStyle:fontStyle!==null&&fontStyle!==void 0?fontStyle:'normal'});var resolvedPlaceholderTextColor=useToken('colors',placeholderTextColor);var resolvedSelectionColor=useToken('colors',selectionColor);var resolvedUnderlineColorAndroid=useToken('colors',underlineColorAndroid);if(useHasResponsiveProps(props)){return null;}return React.createElement(Stack,_extends({},_stack,layoutProps,{ref:mergeRefs([_ref,wrapperRef]),isFocused:isFocused}),InputLeftElement||leftElement?InputLeftElement||leftElement:null,React.createElement(StyledInput,_extends({},inputProps,{secureTextEntry:type==='password',accessible:true,accessibilityLabel:ariaLabel||accessibilityLabel,editable:isDisabled||isReadOnly?false:true,w:isFullWidth?'100%':undefined},nonLayoutProps,resolvedFontFamily,{placeholderTextColor:resolvedPlaceholderTextColor,selectionColor:resolvedSelectionColor,underlineColorAndroid:resolvedUnderlineColorAndroid,onKeyPress:function onKeyPress(e){e.persist();_onKeyPress&&_onKeyPress(e);},onFocus:function onFocus(e){handleFocus(true,_onFocus?function(){return _onFocus(e);}:function(){});},onBlur:function onBlur(e){handleFocus(false,_onBlur?function(){return _onBlur(e);}:function(){});}},_input,{ref:mergeRefs([ref,_ref,wrapperRef])})),InputRightElement||rightElement?InputRightElement||rightElement:null);};export default memo(forwardRef(Input));","map":{"version":3,"sources":["Input.tsx"],"names":["StyledInput","makeStyledComponent","Input","isHovered","isFocused","props","inputProps","useFormControl","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","React","handleFocus","setIsFocused","callback","useToken","_ref","useHover","inputThemeProps","required","resolvedProps","usePropsResolution","isHoveredProp","isFocusedProp","extractInObject","stylingProps","resolvedFontFamily","useResolvedFontFamily","fontFamily","fontWeight","fontStyle","resolvedPlaceholderTextColor","resolvedSelectionColor","resolvedUnderlineColorAndroid","useHasResponsiveProps","mergeRefs","InputLeftElement","type","ariaLabel","isFullWidth","undefined","e","onKeyPress","onFocus","onBlur","InputRightElement","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputProps } from './types';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    onKeyPress,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n  props.focusOutlineColor = useToken('colors', props.focusOutlineColor);\n  //@ts-ignore\n  props.inValidOutlineColor = useToken('colors', props.inValidOutlineColor);\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Stack\n      {..._stack}\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n      isFocused={isFocused}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <StyledInput\n        {...inputProps}\n        secureTextEntry={type === 'password'}\n        accessible\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        editable={isDisabled || isReadOnly ? false : true}\n        w={isFullWidth ? '100%' : undefined}\n        {...nonLayoutProps}\n        {...resolvedFontFamily}\n        placeholderTextColor={resolvedPlaceholderTextColor}\n        selectionColor={resolvedSelectionColor}\n        underlineColorAndroid={resolvedUnderlineColorAndroid}\n        onKeyPress={(e: any) => {\n          e.persist();\n          onKeyPress && onKeyPress(e);\n        }}\n        onFocus={(e: any) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e: any) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n        {..._input}\n        ref={mergeRefs([ref, _ref, wrapperRef])}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(Input));\n"]},"metadata":{},"sourceType":"module"}