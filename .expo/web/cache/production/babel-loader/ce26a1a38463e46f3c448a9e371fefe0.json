{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";var linkToHREF=function linkToHREF(URL){Linking.openURL(URL).catch(function(err){return console.error('An error occurred',err);});};var addOnPressFunctionality=function addOnPressFunctionality(href,callback){href?linkToHREF(href):'';callback?callback():function(){};};export function useLink(props){var href=props.href,isExternal=props.isExternal,_onPress=props.onPress,_ref=props._ref;var platformLinkProps={};if(Platform.OS==='web'){platformLinkProps={href:href,onClick:_onPress};if(isExternal&&_ref.current){_ref.current.target='_blank';}}else{platformLinkProps={onPress:function onPress(){addOnPressFunctionality(href,_onPress);}};}return{linkProps:_objectSpread(_objectSpread({},platformLinkProps),{},{accessibilityRole:'link',accessible:true})};}","map":{"version":3,"sources":["useLink.ts"],"names":["linkToHREF","URL","Linking","err","console","addOnPressFunctionality","href","callback","_ref","platformLinkProps","Platform","onClick","onPress","isExternal","linkProps","accessibilityRole","accessible"],"mappings":"g8BAIA,GAAMA,CAAAA,UAAU,CAAIC,QAAdD,CAAAA,UAAcC,CAAAA,GAAD,CAAiB,CAClCC,OAAO,CAAPA,OAAAA,CAAAA,GAAAA,EAAAA,KAAAA,CAA4BC,SAAAA,GAAD,QAASC,CAAAA,OAAO,CAAPA,KAAAA,CAAAA,mBAAAA,CAApCF,GAAoCE,CAAT,EAA3BF,EADF,CAAA,CAIA,GAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAA,IAAA,CAAA,QAAA,CAAuC,CACrEC,IAAI,CAAGN,UAAU,CAAb,IAAa,CAAb,CAAJM,EAAAA,CACAC,QAAQ,CAAGA,QAAH,EAAA,CAAgB,UAAM,CAA9BA,CAAAA,CAFF,CAAA,CAKA,MAAO,SAAA,CAAA,OAAA,CAAA,KAAA,CAAsC,CAC3C,GAAM,CAAA,IAAN,CAAA,KAAA,CAAM,IAAN,CAAM,UAAN,CAAA,KAAA,CAAM,UAAN,CAAM,QAAN,CAAA,KAAA,CAAM,OAAN,CAAmCC,IAAnC,CAAA,KAAA,CAAmCA,IAAnC,CAEA,GAAIC,CAAAA,iBAAiB,CAArB,EAAA,CAEA,GAAIC,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CACzBD,iBAAiB,CAAG,CAClBH,IADkB,CAClBA,IADkB,CAElBK,OAAO,CAAEC,QAFS,CAApBH,CAKA,GAAII,UAAU,EAAIL,IAAI,CAAtB,OAAA,CAAgC,CAC9BA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,CAAAA,QAAAA,CACD,CARH,CAAA,IASO,CACLC,iBAAiB,CAAG,CAClBG,OAAO,CAAE,kBAAM,CACbP,uBAAuB,CAAA,IAAA,CAAvBA,QAAuB,CAAvBA,CACD,CAHiB,CAApBI,CAKD,CAED,MAAO,CACLK,SAAS,gCAAE,iBAAF,MAEPC,iBAAiB,CAFR,MAAF,CAGPC,UAAU,CAAE,IAHL,EADJ,CAAP,CAOD","sourcesContent":["import { Linking, Platform } from 'react-native';\nimport type { IUseLinkProp } from './types';\nimport type { AccessibilityRole } from 'react-native';\n\nconst linkToHREF = (URL: string) => {\n  Linking.openURL(URL).catch((err) => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (href: string | any, callback: any) => {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nexport function useLink(props: IUseLinkProp) {\n  const { href, isExternal, onPress, _ref } = props;\n\n  let platformLinkProps = {};\n\n  if (Platform.OS === 'web') {\n    platformLinkProps = {\n      href,\n      onClick: onPress,\n    };\n    // Adding target to a tag created by RN-Web\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: () => {\n        addOnPressFunctionality(href, onPress);\n      },\n    };\n  }\n\n  return {\n    linkProps: {\n      ...platformLinkProps,\n      accessibilityRole: 'link' as AccessibilityRole,\n      accessible: true,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}