{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"_scrollview\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Box from\"../../primitives/Box\";import{usePropsResolution}from\"../../../hooks\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{ScrollView}from\"../../basic/ScrollView\";var ModalBody=function ModalBody(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _usePropsResolution=usePropsResolution('ModalBody',props),_scrollview=_usePropsResolution._scrollview,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(ScrollView,_scrollview,React.createElement(Box,_extends({},resolvedProps,{ref:ref}),children));};export default memo(forwardRef(ModalBody));","map":{"version":3,"sources":["ModalBody.tsx"],"names":["ModalBody","props","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":"kaAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,MAAA,CAAA,GAAA,4BACA,OAAA,kBAAA,sBACA,OAAA,qBAAA,4CACA,OAAA,UAAA,8BAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAA,GAAA,CAGb,IAFH,CAAA,QAEG,MAFH,QAEG,CAFYC,KAEZ,0CACH,wBAA0CE,kBAAkB,CAAA,WAAA,CADzD,KACyD,CAA5D,CAAM,WAAN,qBAAM,WAAN,CAAwBD,aAAxB,0DAKA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,CACE,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAAwB,GAAG,CAAEC,GAA7B,CAAA,CAAA,CAFJ,QAEI,CADF,CADF,CAZF,CAAA,CAqBA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,SAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  { children, ...props }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const { _scrollview, ...resolvedProps } = usePropsResolution(\n    'ModalBody',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]},"metadata":{},"sourceType":"module"}