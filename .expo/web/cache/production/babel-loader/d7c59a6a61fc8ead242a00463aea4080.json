{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"disabled\",\"isDisabled\",\"isInvalid\",\"isChecked\",\"defaultIsChecked\",\"accessibilityLabel\",\"accessibilityHint\",\"onToggle\",\"value\",\"onValueChange\",\"isHovered\"],_excluded2=[\"onTrackColor\",\"offTrackColor\",\"onThumbColor\",\"offThumbColor\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{useToggleState}from'@react-stately/toggle';import RNSwitch from\"react-native-web/dist/exports/Switch\";import isNil from'lodash.isnil';import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useToken}from\"../../../hooks\";import{makeStyledComponent}from\"../../../utils/styled\";import{mergeRefs}from\"../../../utils\";import{useHover}from'@react-native-aria/interactions';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{useFormControlContext}from\"../../composites/FormControl\";import{combineContextAndProps}from\"../../../utils\";var StyledNBSwitch=makeStyledComponent(RNSwitch);var Switch=function Switch(_ref2,ref){var disabled=_ref2.disabled,isDisabled=_ref2.isDisabled,isInvalid=_ref2.isInvalid,isChecked=_ref2.isChecked,defaultIsChecked=_ref2.defaultIsChecked,accessibilityLabel=_ref2.accessibilityLabel,accessibilityHint=_ref2.accessibilityHint,onToggle=_ref2.onToggle,value=_ref2.value,_onValueChange=_ref2.onValueChange,isHoveredProp=_ref2.isHovered,props=_objectWithoutProperties(_ref2,_excluded);var formControlContext=useFormControlContext();var combinedProps=combineContextAndProps(formControlContext,props);var state=useToggleState({defaultSelected:!isNil(defaultIsChecked)?defaultIsChecked:false});var checked=!isNil(isChecked)?isChecked:state.isSelected;var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var _usePropsResolution=usePropsResolution('Switch',props,{isHovered:isHoveredProp||isHovered,isDisabled:disabled||isDisabled||combinedProps.isDisabled,isInvalid:isInvalid||combinedProps.isInvalid,isChecked:checked}),_onTrackColor=_usePropsResolution.onTrackColor,_offTrackColor=_usePropsResolution.offTrackColor,_onThumbColor=_usePropsResolution.onThumbColor,_offThumbColor=_usePropsResolution.offThumbColor,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var onTrackColor=useToken('colors',_onTrackColor);var offTrackColor=useToken('colors',_offTrackColor);var onThumbColor=useToken('colors',_onThumbColor);var offThumbColor=useToken('colors',_offThumbColor);if(useHasResponsiveProps(_objectSpread(_objectSpread({},props),{},{isDisabled:isDisabled,isInvalid:isInvalid,isChecked:isChecked,defaultIsChecked:defaultIsChecked,accessibilityLabel:accessibilityLabel,accessibilityHint:accessibilityHint}))){return null;}return React.createElement(StyledNBSwitch,_extends({accessibilityLabel:accessibilityLabel,accessibilityHint:accessibilityHint,trackColor:{false:offTrackColor,true:onTrackColor},thumbColor:checked?onThumbColor:offThumbColor,activeThumbColor:onThumbColor,ios_backgroundColor:offTrackColor},resolvedProps,{disabled:disabled||isDisabled||combinedProps.isDisabled,onValueChange:function onValueChange(val){_onValueChange&&_onValueChange(val);onToggle?onToggle():state.toggle();},value:value||checked,ref:mergeRefs([ref,_ref])}));};export default memo(forwardRef(Switch));","map":{"version":3,"sources":["index.tsx"],"names":["StyledNBSwitch","makeStyledComponent","Switch","isHovered","props","formControlContext","useFormControlContext","combinedProps","combineContextAndProps","state","useToggleState","defaultSelected","isNil","checked","_ref","React","useHover","onTrackColor","offTrackColor","onThumbColor","offThumbColor","resolvedProps","usePropsResolution","isHoveredProp","isDisabled","disabled","isInvalid","isChecked","useToken","useHasResponsiveProps","defaultIsChecked","accessibilityLabel","accessibilityHint","false","true","val","onValueChange","onToggle","value","mergeRefs","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport { Switch as RNSwitch } from 'react-native';\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISwitchProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport { combineContextAndProps } from '../../../utils';\n\nconst StyledNBSwitch = makeStyledComponent(RNSwitch);\n\n// TODO: Needs proper refactor\nconst Switch = (\n  {\n    disabled,\n    isDisabled,\n    isInvalid,\n    isChecked,\n    defaultIsChecked,\n    accessibilityLabel,\n    accessibilityHint,\n    onToggle,\n    value,\n    onValueChange,\n    isHovered: isHoveredProp,\n    ...props\n  }: ISwitchProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const combinedProps = combineContextAndProps(formControlContext, props);\n\n  const state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false,\n  });\n  const checked = !isNil(isChecked) ? isChecked : state.isSelected;\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    onTrackColor: _onTrackColor,\n    offTrackColor: _offTrackColor,\n    onThumbColor: _onThumbColor,\n    offThumbColor: _offThumbColor,\n    ...resolvedProps\n  } = usePropsResolution('Switch', props, {\n    isHovered: isHoveredProp || isHovered,\n    isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n    isInvalid: isInvalid || combinedProps.isInvalid,\n    isChecked: checked,\n  });\n\n  const onTrackColor = useToken('colors', _onTrackColor);\n  const offTrackColor = useToken('colors', _offTrackColor);\n  const onThumbColor = useToken('colors', _onThumbColor);\n  const offThumbColor = useToken('colors', _offThumbColor);\n\n  //TODO: refactor for responsive prop\n  if (\n    useHasResponsiveProps({\n      ...props,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      defaultIsChecked,\n      accessibilityLabel,\n      accessibilityHint,\n    })\n  ) {\n    return null;\n  }\n  return (\n    <StyledNBSwitch\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      trackColor={{ false: offTrackColor, true: onTrackColor }}\n      thumbColor={checked ? onThumbColor : offThumbColor}\n      activeThumbColor={onThumbColor} // react-native-web prop for active thumbColor\n      ios_backgroundColor={offTrackColor}\n      {...resolvedProps}\n      disabled={disabled || isDisabled || combinedProps.isDisabled}\n      onValueChange={(val: boolean) => {\n        onValueChange && onValueChange(val);\n        onToggle ? onToggle() : state.toggle();\n      }}\n      value={value || checked}\n      ref={mergeRefs([ref, _ref])}\n    />\n  );\n};\n\nexport default memo(forwardRef(Switch));\nexport type { ISwitchProps };\n"]},"metadata":{},"sourceType":"module"}