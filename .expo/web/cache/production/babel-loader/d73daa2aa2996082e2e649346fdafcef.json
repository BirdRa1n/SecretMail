{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onSelectedItemChange\",\"options\",\"renderItem\",\"getOptionLabel\",\"getOptionKey\",\"onChange\",\"numberOfItems\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import{useButton}from'@react-native-aria/button';import{useComboBoxState}from'@react-stately/combobox';import{useComboBox}from'@react-native-aria/combobox';import{useListBox,useOption}from'@react-native-aria/listbox';import ScrollView from\"react-native-web/dist/exports/ScrollView\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import Platform from\"react-native-web/dist/exports/Platform\";import{Item}from'@react-stately/collections';import Box from\"../../primitives/Box\";import{Pressable}from\"../../primitives/Pressable\";import Text from\"../../primitives/Text\";import{extractInObject}from\"../../../theme/tools\";import{layoutPropsList}from\"./types\";import{Input}from\"../../primitives/Input\";import{useThemeProps}from\"../../../hooks\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var Typeahead=React.forwardRef(function(_ref,ref){var onSelectedItemChange=_ref.onSelectedItemChange,options=_ref.options,renderItem=_ref.renderItem,getOptionLabel=_ref.getOptionLabel,getOptionKey=_ref.getOptionKey,onChange=_ref.onChange,numberOfItems=_ref.numberOfItems,rest=_objectWithoutProperties(_ref,_excluded);if(useHasResponsiveProps(rest)){return null;}return React.createElement(ComboBoxImplementation,_extends({},rest,{onSelectionChange:onSelectedItemChange,items:numberOfItems!==undefined?options.slice(0,numberOfItems):options,onInputChange:onChange,ref:ref}),function(item){if(typeof item!=='string'&&getOptionLabel===undefined){throw new Error('Please use getOptionLabel prop');}if(item.id===undefined&&getOptionKey===undefined){throw new Error('Please use getOptionKey prop');}var optionLabel=getOptionLabel?getOptionLabel(item):item;var optionKey=getOptionKey?getOptionKey(item):item.id!==undefined?item.id:optionLabel;return React.createElement(Item,{textValue:optionLabel,key:optionKey},renderItem?renderItem(item):React.createElement(Box,{p:2,justifyContent:\"center\"},React.createElement(Text,null,optionLabel)));});});var ComboBoxImplementation=React.forwardRef(function(props,ref){var _extractInObject=extractInObject(props,layoutPropsList),_extractInObject2=_slicedToArray(_extractInObject,1),layoutProps=_extractInObject2[0];var state=useComboBoxState(props);var triggerRef=React.useRef(null);var inputRef=React.useRef(null);var listBoxRef=React.useRef(null);var popoverRef=React.useRef(null);var _useComboBox=useComboBox(_objectSpread(_objectSpread({},props),{},{inputRef:inputRef,buttonRef:triggerRef,listBoxRef:listBoxRef,popoverRef:popoverRef,menuTrigger:'input'}),state),triggerProps=_useComboBox.buttonProps,inputProps=_useComboBox.inputProps,listBoxProps=_useComboBox.listBoxProps,labelProps=_useComboBox.labelProps;var toggleIconSetter=function toggleIconSetter(){if(typeof props.toggleIcon==='function')return props.toggleIcon({isOpen:state.isOpen});return props.toggleIcon;};var _useButton=useButton(triggerProps),buttonProps=_useButton.buttonProps;return React.createElement(Box,_extends({flexDirection:\"row\"},layoutProps,{ref:ref}),React.createElement(Box,{flex:1},props.label&&React.createElement(Text,_extends({},labelProps,{pb:1}),props.label),React.createElement(Input,_extends({},inputProps,{ref:inputRef,InputRightElement:React.createElement(Pressable,_extends({},buttonProps,{ref:triggerRef}),toggleIconSetter())})),state.isOpen&&React.createElement(ListBoxPopup,_extends({},listBoxProps,{listBoxRef:listBoxRef,popoverRef:popoverRef,state:state,label:props.label}))));});function ListBoxPopup(props){var popoverRef=props.popoverRef,listBoxRef=props.listBoxRef,state=props.state,dropdownHeight=props.dropdownHeight,label=props.label;var _useListBox=useListBox({label:label,autoFocus:state.focusStrategy,disallowEmptySelection:true},state,listBoxRef),listBoxProps=_useListBox.listBoxProps;return React.createElement(Box,{ref:popoverRef},React.createElement(Box,{position:\"absolute\",width:\"100%\",maxHeight:dropdownHeight!==null&&dropdownHeight!==void 0?dropdownHeight:200},React.createElement(ScrollView,_extends({},listBoxProps,{keyboardShouldPersistTaps:\"handled\",ref:function ref(node){if(Platform.OS==='web'){listBoxRef.current=findNodeHandle(node);}else{listBoxRef.current=node;}}}),_toConsumableArray(state.collection).map(function(item){return React.createElement(Option,{key:item.key,item:item,state:state});}))));}function Option(_ref2){var item=_ref2.item,state=_ref2.state;var searchItemStyle=useThemeProps('TypeAheadSearchItem',{});var ref=React.useRef(null);var isDisabled=state.disabledKeys.has(item.key);var isSelected=state.selectionManager.isSelected(item.key);var isFocused=state.selectionManager.focusedKey===item.key;var _useOption=useOption({key:item.key,isDisabled:isDisabled,isSelected:isSelected,shouldFocusOnHover:true,shouldUseVirtualFocus:true},state,ref),optionProps=_useOption.optionProps;var backgroundColor=searchItemStyle.backgroundColor;var opacity=1;if(isSelected){backgroundColor=searchItemStyle._focus.backgroundColor;}else if(isFocused){backgroundColor=searchItemStyle._focus.backgroundColor;}else if(isDisabled){opacity=0.6;backgroundColor=searchItemStyle._disabled.backgroundColor;}return React.createElement(Pressable,_extends({},optionProps,{opacity:opacity,cursor:isDisabled?Platform.OS==='web'?'not-allowed':null:null,backgroundColor:backgroundColor,ref:ref}),item.rendered);}","map":{"version":3,"sources":["Typeahead.tsx"],"names":["Typeahead","rest","useHasResponsiveProps","numberOfItems","options","ref","item","getOptionLabel","getOptionKey","optionLabel","optionKey","renderItem","ComboBoxImplementation","extractInObject","state","useComboBoxState","triggerRef","React","inputRef","listBoxRef","popoverRef","buttonProps","labelProps","useComboBox","buttonRef","menuTrigger","toggleIconSetter","props","isOpen","useButton","label","listBoxProps","useListBox","autoFocus","disallowEmptySelection","dropdownHeight","node","Platform","findNodeHandle","searchItemStyle","useThemeProps","isDisabled","isSelected","isFocused","optionProps","useOption","key","shouldFocusOnHover","shouldUseVirtualFocus","backgroundColor","opacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useButton } from '@react-native-aria/button';\nimport { ComboBoxState, useComboBoxState } from '@react-stately/combobox';\nimport { useComboBox } from '@react-native-aria/combobox';\nimport { useListBox, useOption } from '@react-native-aria/listbox';\nimport { ScrollView, findNodeHandle, Platform } from 'react-native';\nimport { Item } from '@react-stately/collections';\nimport Box from '../../primitives/Box';\nimport { Pressable } from '../../primitives/Pressable';\nimport Text from '../../primitives/Text';\nimport { extractInObject } from '../../../theme/tools';\nimport { ITypeaheadProps, IComboBoxProps, layoutPropsList } from './types';\nimport { Input } from '../../primitives/Input';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const Typeahead = React.forwardRef(\n  (\n    {\n      onSelectedItemChange,\n      options,\n      renderItem,\n      getOptionLabel,\n      getOptionKey,\n      onChange,\n      numberOfItems,\n      ...rest\n    }: ITypeaheadProps,\n    ref?: any\n  ) => {\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(rest)) {\n      return null;\n    }\n    return (\n      <ComboBoxImplementation\n        {...rest}\n        onSelectionChange={onSelectedItemChange}\n        items={\n          numberOfItems !== undefined\n            ? options.slice(0, numberOfItems)\n            : options\n        }\n        onInputChange={onChange}\n        ref={ref}\n      >\n        {(item: any) => {\n          if (typeof item !== 'string' && getOptionLabel === undefined) {\n            throw new Error('Please use getOptionLabel prop');\n          }\n\n          if (item.id === undefined && getOptionKey === undefined) {\n            throw new Error('Please use getOptionKey prop');\n          }\n\n          const optionLabel = getOptionLabel ? getOptionLabel(item) : item;\n          const optionKey = getOptionKey\n            ? getOptionKey(item)\n            : item.id !== undefined\n            ? item.id\n            : optionLabel;\n\n          return (\n            <Item textValue={optionLabel} key={optionKey}>\n              {renderItem ? (\n                renderItem(item)\n              ) : (\n                <Box p={2} justifyContent=\"center\">\n                  <Text>{optionLabel}</Text>\n                </Box>\n              )}\n            </Item>\n          );\n        }}\n      </ComboBoxImplementation>\n    );\n  }\n);\n\nconst ComboBoxImplementation = React.forwardRef(\n  (props: IComboBoxProps, ref?: any) => {\n    const [layoutProps] = extractInObject(props, layoutPropsList);\n    let state = useComboBoxState(props);\n\n    let triggerRef = React.useRef(null);\n    let inputRef = React.useRef(null);\n    let listBoxRef = React.useRef(null);\n    let popoverRef = React.useRef(null);\n\n    let {\n      buttonProps: triggerProps,\n      inputProps,\n      listBoxProps,\n      labelProps,\n    } = useComboBox(\n      {\n        ...props,\n        inputRef,\n        buttonRef: triggerRef,\n        listBoxRef,\n        popoverRef,\n        menuTrigger: 'input',\n      },\n      state\n    );\n\n    const toggleIconSetter = () => {\n      if (typeof props.toggleIcon === 'function')\n        return props.toggleIcon({\n          isOpen: state.isOpen,\n        });\n      return props.toggleIcon;\n    };\n\n    let { buttonProps } = useButton(triggerProps);\n\n    return (\n      <Box flexDirection=\"row\" {...layoutProps} ref={ref}>\n        <Box flex={1}>\n          {props.label && (\n            <Text {...labelProps} pb={1}>\n              {props.label}\n            </Text>\n          )}\n          <Input\n            {...inputProps}\n            ref={inputRef}\n            InputRightElement={\n              // @ts-ignore - RN has hitSlop type inconsistent for View and Pressable!\n              <Pressable {...buttonProps} ref={triggerRef}>\n                {toggleIconSetter()}\n              </Pressable>\n            }\n          />\n\n          {state.isOpen && (\n            <ListBoxPopup\n              {...listBoxProps}\n              listBoxRef={listBoxRef}\n              popoverRef={popoverRef}\n              state={state}\n              label={props.label}\n            />\n          )}\n        </Box>\n      </Box>\n    );\n  }\n);\n\ntype IListBoxProps = {\n  popoverRef: any;\n  listBoxRef: any;\n  state: ComboBoxState<any>;\n  dropdownHeight: number;\n  label: string;\n};\n\nfunction ListBoxPopup(props: IListBoxProps) {\n  let { popoverRef, listBoxRef, state, dropdownHeight, label } = props;\n\n  let { listBoxProps } = useListBox(\n    {\n      label,\n      autoFocus: state.focusStrategy,\n      disallowEmptySelection: true,\n    },\n    state,\n    listBoxRef\n  );\n\n  return (\n    <Box ref={popoverRef}>\n      <Box position=\"absolute\" width=\"100%\" maxHeight={dropdownHeight ?? 200}>\n        <ScrollView\n          {...listBoxProps}\n          keyboardShouldPersistTaps=\"handled\"\n          ref={(node) => {\n            if (Platform.OS === 'web') {\n              listBoxRef.current = findNodeHandle(node);\n            } else {\n              listBoxRef.current = node;\n            }\n          }}\n        >\n          {[...state.collection].map((item) => (\n            <Option key={item.key} item={item} state={state} />\n          ))}\n        </ScrollView>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Option({ item, state }: { item: any; state: ComboBoxState<any> }) {\n  const searchItemStyle = useThemeProps('TypeAheadSearchItem', {});\n\n  let ref = React.useRef(null);\n  let isDisabled = state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n  let isFocused = state.selectionManager.focusedKey === item.key;\n\n  let { optionProps } = useOption(\n    {\n      key: item.key,\n      isDisabled,\n      isSelected,\n      shouldFocusOnHover: true,\n      shouldUseVirtualFocus: true,\n    },\n    state,\n    ref\n  );\n\n  let backgroundColor = searchItemStyle.backgroundColor;\n  let opacity = 1;\n\n  if (isSelected) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isFocused) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isDisabled) {\n    opacity = 0.6;\n    backgroundColor = searchItemStyle._disabled.backgroundColor;\n  }\n\n  return (\n    <Pressable\n      {...optionProps}\n      opacity={opacity}\n      cursor={\n        isDisabled ? (Platform.OS === 'web' ? 'not-allowed' : null) : null\n      }\n      backgroundColor={backgroundColor}\n      ref={ref}\n    >\n      {item.rendered}\n    </Pressable>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}