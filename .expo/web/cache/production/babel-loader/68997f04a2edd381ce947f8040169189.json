{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"children\",\"onTransitionComplete\",\"visible\",\"initial\",\"animate\",\"exit\",\"style\",\"as\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef}from'react';import Animated from\"react-native-web/dist/exports/Animated\";var transformStylesMap={translateY:true,translateX:true,scale:true,scaleX:true,scaleY:true,rotate:true};var defaultStyles={opacity:1,translateY:0,translateX:0,scale:1,scaleX:1,scaleY:1,rotate:'0deg'};var getAnimatedStyles=function getAnimatedStyles(animateValue){return function(initial,to){var styles={transform:[]};for(var key in initial){if(key==='transition'){continue;}if(key in transformStylesMap){var _styles$transform;(_styles$transform=styles.transform)===null||_styles$transform===void 0?void 0:_styles$transform.push(_defineProperty({},key,animateValue.interpolate({inputRange:[0,1],outputRange:[initial[key],to[key]]})));}else{styles[key]=animateValue.interpolate({inputRange:[0,1],outputRange:[initial[key],to[key]]});}}return styles;};};var defaultTransitionConfig={type:'timing',useNativeDriver:true,duration:250,delay:0};export var Transition=forwardRef(function(_ref,ref){var children=_ref.children,onTransitionComplete=_ref.onTransitionComplete,_ref$visible=_ref.visible,visible=_ref$visible===void 0?false:_ref$visible,initial=_ref.initial,animate=_ref.animate,exit=_ref.exit,style=_ref.style,as=_ref.as,rest=_objectWithoutProperties(_ref,_excluded);var animateValue=React.useRef(new Animated.Value(0)).current;var Component=React.useMemo(function(){if(as){return Animated.createAnimatedComponent(as);}return Animated.View;},[as]);var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),animationState=_React$useState2[0],setAnimationState=_React$useState2[1];var prevVisible=React.useRef(visible);React.useEffect(function(){if(animationState==='entering'||animationState==='exiting'){var _transition$type;var entryTransition=_objectSpread(_objectSpread({},defaultTransitionConfig),animate===null||animate===void 0?void 0:animate.transition);var exitTransition=_objectSpread(_objectSpread({},defaultTransitionConfig),exit===null||exit===void 0?void 0:exit.transition);var startAnimation=animationState==='entering'?1:0;var transition=startAnimation?entryTransition:exitTransition;Animated.sequence([Animated.delay(transition.delay),Animated[(_transition$type=transition.type)!==null&&_transition$type!==void 0?_transition$type:'timing'](animateValue,_objectSpread({toValue:startAnimation,useNativeDriver:true},transition))]).start(function(){if(animationState==='entering'){setAnimationState('entered');}else if(animationState==='exiting'){setAnimationState('exited');}});}if(animationState==='exited'){onTransitionComplete&&onTransitionComplete('exited');}else if(animationState==='entered'){onTransitionComplete&&onTransitionComplete('entered');}},[animationState,onTransitionComplete]);React.useEffect(function(){if(prevVisible.current!==visible&&!visible){setAnimationState('exiting');}if(visible){setAnimationState('entering');}prevVisible.current=visible;},[visible]);var initialState=animationState==='exited'&&exit?_objectSpread(_objectSpread({},defaultStyles),exit):_objectSpread(_objectSpread({},defaultStyles),initial);var animateState=_objectSpread(_objectSpread({},defaultStyles),animate);var styles=React.useMemo(function(){return[getAnimatedStyles(animateValue)(initialState,animateState),style];},[animateValue,initial,animate,style]);return React.createElement(Component,_extends({pointerEvents:!visible?'none':'box-none',style:[styles],ref:ref},rest),children);});","map":{"version":3,"sources":["Transition.tsx"],"names":["transformStylesMap","translateY","translateX","scale","scaleX","scaleY","rotate","defaultStyles","opacity","getAnimatedStyles","animateValue","styles","transform","key","inputRange","outputRange","initial","to","defaultTransitionConfig","type","useNativeDriver","duration","delay","Transition","forwardRef","visible","rest","React","Animated","Component","prevVisible","animationState","entryTransition","animate","exitTransition","exit","startAnimation","transition","toValue","setAnimationState","onTransitionComplete","initialState","animateState","ref"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { forwardRef } from 'react';\nimport { Animated } from 'react-native';\nimport type {\n  ISupportedTransitions,\n  ITransitionConfig,\n  ITransitionProps,\n} from './types';\n\nconst transformStylesMap = {\n  translateY: true,\n  translateX: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n};\n\nconst defaultStyles = {\n  opacity: 1,\n  translateY: 0,\n  translateX: 0,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  rotate: '0deg',\n};\n\nconst getAnimatedStyles = (animateValue: any) => (\n  initial: ISupportedTransitions,\n  to: ISupportedTransitions\n) => {\n  const styles: any = {\n    transform: [],\n  };\n  for (let key in initial) {\n    if (key === 'transition') {\n      continue;\n    }\n\n    if (key in transformStylesMap) {\n      styles.transform?.push({\n        [key]: animateValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [(initial as any)[key], (to as any)[key]],\n        }),\n      } as any);\n    } else {\n      styles[key] = animateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [(initial as any)[key], (to as any)[key]],\n      });\n    }\n  }\n\n  return styles;\n};\n\nconst defaultTransitionConfig: ITransitionConfig = {\n  type: 'timing',\n  useNativeDriver: true,\n  duration: 250,\n  delay: 0,\n};\n\nexport const Transition = forwardRef(\n  (\n    {\n      children,\n      onTransitionComplete,\n      visible = false,\n      initial,\n      animate,\n      exit,\n      style,\n      as,\n      ...rest\n    }: ITransitionProps,\n    ref: any\n  ) => {\n    const animateValue = React.useRef(new Animated.Value(0)).current;\n\n    const Component = React.useMemo(() => {\n      if (as) {\n        return Animated.createAnimatedComponent(as);\n      }\n      return Animated.View;\n    }, [as]);\n\n    const [animationState, setAnimationState] = React.useState('');\n\n    const prevVisible = React.useRef(visible);\n\n    React.useEffect(() => {\n      if (animationState === 'entering' || animationState === 'exiting') {\n        const entryTransition = {\n          ...defaultTransitionConfig,\n          ...animate?.transition,\n        };\n        const exitTransition = {\n          ...defaultTransitionConfig,\n          ...exit?.transition,\n        };\n\n        const startAnimation = animationState === 'entering' ? 1 : 0;\n\n        const transition = startAnimation ? entryTransition : exitTransition;\n\n        Animated.sequence([\n          // @ts-ignore - delay is present in defaultTransitionConfig\n          Animated.delay(transition.delay),\n          Animated[transition.type ?? 'timing'](animateValue, {\n            toValue: startAnimation,\n            useNativeDriver: true,\n            ...transition,\n          }),\n        ]).start(() => {\n          if (animationState === 'entering') {\n            setAnimationState('entered');\n          } else if (animationState === 'exiting') {\n            setAnimationState('exited');\n          }\n        });\n        // });\n      }\n\n      if (animationState === 'exited') {\n        onTransitionComplete && onTransitionComplete('exited');\n      } else if (animationState === 'entered') {\n        onTransitionComplete && onTransitionComplete('entered');\n      }\n      // if (animationState === 'entering') {\n      //   //\n      // }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationState, onTransitionComplete]);\n\n    React.useEffect(() => {\n      // if (!visible) {\n      if (prevVisible.current !== visible && !visible) {\n        setAnimationState('exiting');\n      }\n\n      if (visible) {\n        setAnimationState('entering');\n      }\n      prevVisible.current = visible;\n      // }\n    }, [visible]);\n\n    // If exit animation is present and state is exiting, we replace 'initial' with 'exit' animation\n\n    //  const initialState = { ...defaultStyles, ...initial };\n    const initialState =\n      animationState === 'exited' && exit\n        ? { ...defaultStyles, ...exit }\n        : { ...defaultStyles, ...initial };\n    // const initialState = { ...defaultStyles, ...initial };\n\n    // initial =\n    //   animationState === 'exited'\n    //     ? { ...defaultStyles, ...exit }\n    //     : { ...defaultStyles, ...initial };\n\n    const animateState = { ...defaultStyles, ...animate };\n\n    // const [initialState, setInitialState] = React.useState({\n    //   ...defaultStyles,\n    //   ...initial,\n    // });\n    // console.log('Initial state ', initial);\n\n    // const [animateState] = React.useState({ ...defaultStyles, ...animate });\n    const styles = React.useMemo(() => {\n      // console.log('display state here', initial);\n      return [\n        getAnimatedStyles(animateValue)(\n          initialState as ISupportedTransitions,\n          animateState as ISupportedTransitions\n        ),\n        style,\n      ];\n    }, [animateValue, initial, animate, style]);\n\n    return (\n      <Component\n        // pointerEvents=\"box-none\"\n        pointerEvents={!visible ? 'none' : 'box-none'}\n        // https://github.com/facebook/react-native/issues/23090#issuecomment-710803743\n        // needsOffscreenAlphaCompositing\n        // style={[styles]}\n        style={[styles]}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}