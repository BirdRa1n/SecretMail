{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"reversed\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{default as Box}from\"../Box\";import{getAbsoluteChildren}from\"../../../utils\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var ZStack=function ZStack(_ref,ref){var children=_ref.children,reversed=_ref.reversed,props=_objectWithoutProperties(_ref,_excluded);var resolvedProps=usePropsResolution('ZStack',props);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({},resolvedProps,{ref:ref}),getAbsoluteChildren(children,reversed));};export default memo(forwardRef(ZStack));","map":{"version":3,"sources":["index.tsx"],"names":["default","ZStack","props","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","getAbsoluteChildren","memo","forwardRef"],"mappings":"kZAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAASA,OAAO,GAAhB,CAAA,GAAA,cACA,OAAA,mBAAA,sBACA,OAAA,kBAAA,oCACA,OAAA,qBAAA,4CAWA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAA,GAAA,CAA+D,IAA9D,CAAA,QAA8D,MAA9D,QAA8D,CAA9D,QAA8D,MAA9D,QAA8D,CAArCC,KAAqC,0CAC5E,GAAMC,CAAAA,aAAa,CAAGC,kBAAkB,CAAA,QAAA,CADoC,KACpC,CAAxC,CAEA,GAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAAwB,GAAG,CAAEC,GAA7B,CAAA,CAAA,CACGC,mBAAmB,CAAA,QAAA,CAFxB,QAEwB,CADtB,CADF,CANF,CAAA,CAaA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,MAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box, InterfaceBoxProps } from '../Box';\nimport { getAbsoluteChildren } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { CustomProps } from '../../../components/types';\n\nexport interface InterfaceZStackProps extends InterfaceBoxProps<IZStackProps> {\n  /**\n   * The direction to stack the elements.\n   */\n  reversed?: boolean;\n}\n\nexport type IZStackProps = InterfaceZStackProps & CustomProps<'ZStack'>;\nconst ZStack = ({ children, reversed, ...props }: IZStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ZStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {getAbsoluteChildren(children, reversed)}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(ZStack));\n"]},"metadata":{},"sourceType":"module"}