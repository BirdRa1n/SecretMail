{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"isCurrent\",\"_text\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{HStack}from\"../../primitives/Stack\";import{BreadcrumbItemContext}from\"./Context\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var BreadcrumbItem=function BreadcrumbItem(props,ref){var children=props.children,isCurrent=props.isCurrent,_text=props._text,remainingProps=_objectWithoutProperties(props,_excluded);if(useHasResponsiveProps(props)){return null;}return React.createElement(BreadcrumbItemContext.Provider,{value:{isCurrent:isCurrent}},React.createElement(HStack,_extends({},remainingProps,{ref:ref}),React.Children.map(children,function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread(_objectSpread({'key':\"breadcrumb-item-\".concat(index),'_text':_objectSpread(_objectSpread({},_text),{},{fontWeight:700})},{isUnderlined:false}),remainingProps),{},{'aria-current':Platform.OS==='web'&&isCurrent?'page':undefined}));})));};export default memo(forwardRef(BreadcrumbItem));","map":{"version":3,"sources":["BreadcrumbItem.tsx"],"names":["BreadcrumbItem","remainingProps","useHasResponsiveProps","isCurrent","ref","fontWeight","isUnderlined","Platform","undefined","memo","forwardRef"],"mappings":"muCAAA,MAAA,CAAA,KAAA,EAAA,UAAA,CAAA,IAAA,KAAA,OAAA,C,6DAEA,OAAA,MAAA,8BACA,OAAA,qBAAA,iBAEA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAA,KAAA,CAAA,GAAA,CAA4C,CACjE,GAAM,CAAA,QAAN,CADiE,KACjE,CAAM,QAAN,CAAM,SAAN,CADiE,KACjE,CAAM,SAAN,CAAM,KAAN,CADiE,KACjE,CAAM,KAAN,CAAuCC,cAAvC,0BADiE,KACjE,YAEA,GAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MAEE,CAAA,KAAA,CAAA,aAAA,CAAC,qBAAD,CAAA,QAAA,CAAA,CAAgC,KAAK,CAAE,CAAEC,SAAAA,CAAAA,SAAF,CAAvC,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,CAAA,cAAA,CAAA,CAA4B,GAAG,CAAEC,GAAjC,CAAA,CAAA,CACG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,CAA6B,SAAA,KAAA,CAAA,KAAA,QAC5B,CAAA,KAAK,CAAL,YAAA,CAAA,KAAA,4CACE,MAAA,mBAAA,MAAA,CADwB,KACxB,CADF,CAEE,uCAAS,KAAT,MAEEC,UAAU,CAAE,GAFd,EAFF,EAMK,CACDC,YAAY,CAAE,KADb,CANL,EAA0B,cAA1B,MAUE,eACEC,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,EAAAA,SAAAA,CAAAA,MAAAA,CAA8CC,SAXlD,GAD4B,EAA7B,CADH,CADF,CAFF,CANF,CAAA,CA8BA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,cAA8B,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { BreadcrumbItemContext } from './Context';\nimport type { IBreadcrumbItemProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrent, _text, ...remainingProps } = props;\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    // Provider wrapped to use isCurrent prop in children of breadcrumb Item\n    <BreadcrumbItemContext.Provider value={{ isCurrent }}>\n      <HStack {...remainingProps} ref={ref}>\n        {React.Children.map(children, (child: any, index: number) =>\n          React.cloneElement(child, {\n            'key': `breadcrumb-item-${index}`,\n            '_text': {\n              ..._text, //taken out empty _text prop from props\n              fontWeight: 700,\n            },\n            ...{\n              isUnderlined: false,\n            },\n            ...remainingProps,\n            'aria-current':\n              Platform.OS === 'web' && isCurrent ? 'page' : undefined,\n          })\n        )}\n      </HStack>\n    </BreadcrumbItemContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbItem));\n"]},"metadata":{},"sourceType":"module"}