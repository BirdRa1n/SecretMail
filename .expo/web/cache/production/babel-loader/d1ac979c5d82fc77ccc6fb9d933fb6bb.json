{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"name\"];import{randomColor,getRandomString,mode}from\"../tools\";var baseStyle=function baseStyle(props){var name=props.name,colorModeProps=_objectWithoutProperties(props,_excluded);var bg=name?randomColor({string:getRandomString(5)+name}):'gray.400';var borderColor=mode('gray.800','white')(colorModeProps);return{bg:bg,borderColor:borderColor,position:'relative',justifyContent:'center',alignItems:'center',borderRadius:'full',_text:{fontWeight:600},_image:{borderRadius:'full',alt:'--',_alt:{fontWeight:600},style:{height:'100%',width:'100%'}}};};function getSize(size,fontSize){return{width:size,height:size,_text:{fontSize:fontSize}};}var sizes={'xs':getSize('6','2xs'),'sm':getSize('8','xs'),'md':getSize('12','md'),'lg':getSize('16','xl'),'xl':getSize('24','3xl'),'2xl':getSize('32','5xl')};var defaultProps={size:'md'};export default{baseStyle:baseStyle,sizes:sizes,defaultProps:defaultProps};","map":{"version":3,"sources":["avatar.ts"],"names":["baseStyle","props","colorModeProps","bg","name","randomColor","string","getRandomString","borderColor","mode","position","justifyContent","alignItems","borderRadius","_text","fontWeight","_image","alt","_alt","style","height","width","fontSize","sizes","getSize","defaultProps","size"],"mappings":"4GAAA,OAAA,WAAA,CAAA,eAAA,CAAA,IAAA,gBAEA,GAAMA,CAAAA,SAAS,CAAIC,QAAbD,CAAAA,SAAaC,CAAAA,KAAD,CAAgC,CAChD,GAAM,CAAA,IAAN,CAAA,KAAA,CAAM,IAAN,CAAiBC,cAAjB,0BAAA,KAAA,YACA,GAAMC,CAAAA,EAAE,CAAGC,IAAI,CACXC,WAAW,CAAC,CAAEC,MAAM,CAAEC,eAAe,CAAfA,CAAe,CAAfA,CAAqBH,IAA/B,CAAD,CADA,CAAf,UAAA,CAGA,GAAMI,CAAAA,WAAW,CAAGC,IAAI,CAAA,UAAA,CAAJA,OAAI,CAAJA,CAApB,cAAoBA,CAApB,CACA,MAAO,CACLN,EADK,CACLA,EADK,CAELK,WAFK,CAELA,WAFK,CAGLE,QAAQ,CAHH,UAAA,CAILC,cAAc,CAJT,QAAA,CAKLC,UAAU,CALL,QAAA,CAMLC,YAAY,CANP,MAAA,CAOLC,KAAK,CAAE,CACLC,UAAU,CAAE,GADP,CAPF,CAULC,MAAM,CAAE,CACNH,YAAY,CADN,MAAA,CAENI,GAAG,CAFG,IAAA,CAGNC,IAAI,CAAE,CACJH,UAAU,CAAE,GADR,CAHA,CAMNI,KAAK,CAAE,CACLC,MAAM,CADD,MAAA,CAELC,KAAK,CAAE,MAFF,CAND,CAVH,CAAP,CANF,CAAA,CA8BA,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAA8C,CAC5C,MAAO,CACLA,KAAK,CADA,IAAA,CAELD,MAAM,CAFD,IAAA,CAGLN,KAAK,CAAE,CACLQ,QAAQ,CAAEA,QADL,CAHF,CAAP,CAOD,CAED,GAAMC,CAAAA,KAAK,CAAG,CACZ,KAAMC,OAAO,CAAA,GAAA,CADD,KACC,CADD,CAEZ,KAAMA,OAAO,CAAA,GAAA,CAFD,IAEC,CAFD,CAGZ,KAAMA,OAAO,CAAA,IAAA,CAHD,IAGC,CAHD,CAIZ,KAAMA,OAAO,CAAA,IAAA,CAJD,IAIC,CAJD,CAKZ,KAAMA,OAAO,CAAA,IAAA,CALD,KAKC,CALD,CAMZ,MAAOA,OAAO,CAAA,IAAA,CAAA,KAAA,CANF,CAAd,CASA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,IADa,CAArB,CAIA,cAAe,CACb1B,SADa,CACbA,SADa,CAEbuB,KAFa,CAEbA,KAFa,CAGbE,YAAAA,CAAAA,YAHa,CAAf","sourcesContent":["import { randomColor, getRandomString, mode } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { name, ...colorModeProps } = props;\n  const bg = name\n    ? randomColor({ string: getRandomString(5) + name })\n    : 'gray.400';\n  const borderColor = mode('gray.800', 'white')(colorModeProps);\n  return {\n    bg,\n    borderColor,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 'full',\n    _text: {\n      fontWeight: 600,\n    },\n    _image: {\n      borderRadius: 'full',\n      alt: '--',\n      _alt: {\n        fontWeight: 600,\n      },\n      style: {\n        height: '100%',\n        width: '100%',\n      },\n    },\n  };\n};\n\nfunction getSize(size: any, fontSize: string) {\n  return {\n    width: size,\n    height: size,\n    _text: {\n      fontSize: fontSize,\n    },\n  };\n}\n\nconst sizes = {\n  'xs': getSize('6', '2xs'),\n  'sm': getSize('8', 'xs'),\n  'md': getSize('12', 'md'),\n  'lg': getSize('16', 'xl'),\n  'xl': getSize('24', '3xl'),\n  '2xl': getSize('32', '5xl'),\n};\n\nconst defaultProps = {\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}