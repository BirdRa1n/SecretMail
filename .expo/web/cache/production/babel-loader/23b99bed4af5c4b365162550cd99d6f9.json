{"ast":null,"code":"import _extends2 from\"@babel/runtime/helpers/extends\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef}from'react';import RNSectionList from\"react-native-web/dist/exports/SectionList\";import{usePropsResolution}from\"../../../hooks\";import{makeStyledComponent}from\"../../../utils/styled\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var StyledSectionList=makeStyledComponent(RNSectionList);var SectionListComponent=function SectionListComponent(props,ref){var _usePropsResolution=usePropsResolution('SectionList',props),resolvedProps=_extends2({},_usePropsResolution);if(useHasResponsiveProps(props)){return null;}return React.createElement(StyledSectionList,_extends({},resolvedProps,{ref:ref}));};export var SectionList=forwardRef(SectionListComponent);","map":{"version":3,"sources":["SectionList.tsx"],"names":["StyledSectionList","makeStyledComponent","SectionListComponent","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","SectionList","forwardRef"],"mappings":"6UAAA,MAAA,CAAA,KAAA,EAAA,UAAA,KAAA,OAAA,C,qEAEA,OAAA,kBAAA,sBACA,OAAA,mBAAA,6BAEA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,iBAAsB,CAAGC,mBAAmB,CAAlD,aAAkD,CAAlD,CAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAA,KAAA,CAAA,GAAA,CAGxB,CACH,wBAA6BE,kBAAkB,CAAA,aAAA,CAD5C,KAC4C,CAA/C,CAAWD,aAAX,mCAEA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CAED,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,CAAA,CAAsC,GAAG,CAAEC,GAA3C,CAAA,CAAA,CAAP,CAVF,CAAA,CAaA,MAAO,IAAMC,CAAAA,WAAW,CAAGC,UAAU,CAA9B,oBAA8B,CAA9B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledSectionList: any = makeStyledComponent(RNSectionList);\n\nconst SectionListComponent = <ItemT extends any, sectionT extends any>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n};\n\nexport const SectionList = forwardRef(SectionListComponent) as <\n  ItemT,\n  sectionT\n>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => any;\n"]},"metadata":{},"sourceType":"module"}