{"ast":null,"code":"import _extends2 from\"@babel/runtime/helpers/extends\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"children\",\"separator\",\"_text\",\"maxItems\",\"_button\",\"isCollapsed\",\"onCollapseChange\"],_excluded2=[\"spacing\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{HStack}from\"../../primitives/Stack\";import{useControllableState}from\"../../../hooks\";import{Pressable}from\"../../primitives/Pressable\";import{usePropsResolution}from\"../../../hooks/useThemeProps/usePropsResolution\";import Text from\"../../primitives/Text\";import{ThreeDotsIcon}from\"../../primitives/Icon/Icons\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Breadcrumb=function Breadcrumb(_ref,ref){var style=_ref.style,children=_ref.children,separator=_ref.separator,_text=_ref._text,maxItems=_ref.maxItems,_button=_ref._button,isCollapsed=_ref.isCollapsed,onCollapseChange=_ref.onCollapseChange,props=_objectWithoutProperties(_ref,_excluded);var textProps=_objectSpread({},_text);var _useControllableState=useControllableState({value:isCollapsed,defaultValue:false,onChange:function onChange(value){onCollapseChange&&onCollapseChange(value);}}),_useControllableState2=_slicedToArray(_useControllableState,2),collapsed=_useControllableState2[0],setCollapsed=_useControllableState2[1];var _usePropsResolution=usePropsResolution('Breadcrumb',props),spacing=_usePropsResolution.spacing,newProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var separatorProps={accessibilityRole:Platform.OS==='web'?'presentation':undefined};var separatorElement=separator?typeof separator==='string'?React.createElement(Text,_extends({},separatorProps,{mx:spacing}),separator):React.cloneElement(separator,_objectSpread({mx:spacing},separatorProps)):React.createElement(Text,_extends({mx:spacing},separatorProps),'/');if(useHasResponsiveProps(props)){return null;}return React.createElement(HStack,_extends({display:\"flex\",flexWrap:\"wrap\"},newProps,{ref:ref,style:style,divider:separatorElement,space:spacing,accessibilityRole:Platform.OS==='web'?'navigation':undefined,accessibilityLabel:\"Breadcrumb\"}),children&&!children.length?children:getBreadcrumbSeparator(children,textProps,maxItems,_button,collapsed,setCollapsed));};var getBreadcrumbSeparator=function getBreadcrumbSeparator(children,props,maxItems,_button,collapsed,setCollapsed){if(Array.isArray(children)){if(children.length===1){return children;}var result=[];if(maxItems){var buttonAdded=false;if(typeof maxItems=='number'){if(children.length>2*maxItems){for(var i=0;i<children.length;i++){if(i<maxItems||i>=children.length-maxItems){result.push(children[i]);}else{if(!buttonAdded){result.push(React.createElement(CollapseButton,_extends({},_button,{setCollapsed:setCollapsed})));buttonAdded=true;}}}buttonAdded=false;}}else if(typeof maxItems=='object'){if(children.length>maxItems[0]+maxItems[1])for(var _i=0;_i<children.length;_i++){if(_i<maxItems[0]||_i>=children.length-maxItems[1]){result.push(children[_i]);}else{if(!buttonAdded){result.push(React.createElement(CollapseButton,_extends({},_button,{setCollapsed:setCollapsed})));buttonAdded=true;}}}buttonAdded=false;}}else{result=children;}if(!collapsed){result=children;}return result.map(function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread({_text:_objectSpread({},props)},props),{},{key:\"breadcrumb-separator-\".concat(index)}));});}else{return children;}};var CollapseButton=function CollapseButton(props){var remainingProps=_extends2({},props);return React.createElement(Pressable,_extends({},remainingProps,{onPress:function onPress(){props.setCollapsed(false);}}),React.createElement(ThreeDotsIcon,{size:4}));};export default memo(forwardRef(Breadcrumb));","map":{"version":3,"sources":["Breadcrumb.tsx"],"names":["Breadcrumb","props","textProps","_text","useControllableState","value","defaultValue","onChange","onCollapseChange","newProps","usePropsResolution","separatorProps","accessibilityRole","Platform","undefined","separatorElement","separator","spacing","mx","useHasResponsiveProps","children","getBreadcrumbSeparator","Array","result","buttonAdded","i","setCollapsed","maxItems","key","CollapseButton","remainingProps","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { AccessibilityRole, Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { useControllableState } from '../../../hooks';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IBreadcrumbProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\nimport Text from '../../primitives/Text';\nimport type { IFlexProps } from '../../primitives';\nimport { ThreeDotsIcon } from '../../primitives/Icon/Icons';\n\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst Breadcrumb = (\n  {\n    style,\n    children,\n    separator,\n    _text,\n    maxItems,\n    _button,\n    isCollapsed,\n    onCollapseChange,\n    ...props\n  }: IBreadcrumbProps & IFlexProps,\n  ref: any\n) => {\n  const textProps = { ..._text };\n\n  // Maintaining state to show all children on press of collapse button\n  const [collapsed, setCollapsed] = useControllableState({\n    value: isCollapsed,\n    defaultValue: false,\n    onChange: (value) => {\n      onCollapseChange && onCollapseChange(value);\n    },\n  });\n  const { spacing, ...newProps } = usePropsResolution('Breadcrumb', props);\n\n  const separatorProps = {\n    accessibilityRole: (Platform.OS === 'web'\n      ? 'presentation'\n      : undefined) as AccessibilityRole,\n  };\n  const separatorElement = separator ? (\n    typeof separator === 'string' ? (\n      <Text {...separatorProps} mx={spacing}>\n        {separator}\n      </Text>\n    ) : (\n      React.cloneElement(separator, {\n        mx: spacing,\n        ...separatorProps,\n      })\n    )\n  ) : (\n    <Text mx={spacing} {...separatorProps}>\n      {'/'}\n    </Text>\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <HStack\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      {...newProps}\n      ref={ref}\n      style={style}\n      // Custom Separator\n      divider={separatorElement}\n      space={spacing}\n      // @ts-ignore - Web only prop\n      accessibilityRole={Platform.OS === 'web' ? 'navigation' : undefined}\n      accessibilityLabel=\"Breadcrumb\"\n    >\n      {children && !children.length\n        ? children\n        : getBreadcrumbSeparator(\n            children,\n            textProps,\n            maxItems,\n            _button,\n            collapsed,\n            setCollapsed\n          )}\n    </HStack>\n  );\n};\n\n// Returns children to be rendered\nconst getBreadcrumbSeparator = (\n  children: JSX.Element[] | JSX.Element | any,\n  props: any,\n  maxItems: number | number[] | undefined,\n  _button: any,\n  collapsed: boolean | undefined,\n  setCollapsed: any\n) => {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    let result: any = [];\n    if (maxItems) {\n      let buttonAdded = false;\n      if (typeof maxItems == 'number') {\n        // When MaxItems is a number\n        if (children.length > 2 * maxItems) {\n          for (let i = 0; i < children.length; i++) {\n            if (i < maxItems || i >= children.length - maxItems) {\n              result.push(children[i]);\n            } else {\n              if (!buttonAdded) {\n                result.push(\n                  <CollapseButton {..._button} setCollapsed={setCollapsed} />\n                );\n                buttonAdded = true;\n              }\n            }\n          }\n          buttonAdded = false;\n        }\n      }\n      // Whem maxItems is an array\n      else if (typeof maxItems == 'object') {\n        if (children.length > maxItems[0] + maxItems[1])\n          for (let i = 0; i < children.length; i++) {\n            if (i < maxItems[0] || i >= children.length - maxItems[1]) {\n              result.push(children[i]);\n            } else {\n              if (!buttonAdded) {\n                // pushing Collapsible button as a child\n                result.push(\n                  <CollapseButton {..._button} setCollapsed={setCollapsed} />\n                );\n                buttonAdded = true;\n              }\n            }\n          }\n        buttonAdded = false;\n      }\n    } else {\n      result = children;\n    }\n    if (!collapsed) {\n      result = children;\n    }\n    return result.map((child: any, index: number) => {\n      return React.cloneElement(child, {\n        _text: { ...props },\n        ...props,\n        key: `breadcrumb-separator-${index}`,\n      });\n    });\n  } else {\n    return children;\n  }\n};\n\n// Collapse button\nconst CollapseButton = (props: any) => {\n  const { ...remainingProps } = props;\n\n  return (\n    <Pressable\n      {...remainingProps}\n      onPress={() => {\n        props.setCollapsed(false);\n      }}\n    >\n      <ThreeDotsIcon size={4} />\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Breadcrumb));\nexport type { IBreadcrumbProps };\n"]},"metadata":{},"sourceType":"module"}