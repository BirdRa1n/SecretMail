{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"children\",\"isDisabled\",\"disabled\",\"isHovered\",\"isPressed\",\"isFocused\",\"isFocusVisible\"],_excluded2=[\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import RNPressable from\"react-native-web/dist/exports/Pressable\";import{composeEventHandlers}from\"../../../utils\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{makeStyledComponent}from\"../../../utils/styled\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useFocusRing}from'@react-native-aria/focus';export var useHover=function useHover(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isHovered=_React$useState2[0],setHovered=_React$useState2[1];return{hoverProps:{onHoverIn:function onHoverIn(){return setHovered(true);},onHoverOut:function onHoverOut(){return setHovered(false);}},isHovered:isHovered};};export var useFocus=function useFocus(){var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isFocused=_React$useState4[0],setFocused=_React$useState4[1];return{focusProps:{onFocus:function onFocus(){return setFocused(true);},onBlur:function onBlur(){return setFocused(false);}},isFocused:isFocused};};export var useIsPressed=function useIsPressed(){var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isPressed=_React$useState6[0],setIsPressed=_React$useState6[1];return{pressableProps:{onPressIn:function onPressIn(){return setIsPressed(true);},onPressOut:function onPressOut(){return setIsPressed(false);}},isPressed:isPressed};};var StyledPressable=makeStyledComponent(RNPressable);var Pressable=function Pressable(_ref,ref){var children=_ref.children,isDisabled=_ref.isDisabled,disabled=_ref.disabled,isHoveredProp=_ref.isHovered,isPressedProp=_ref.isPressed,isFocusedProp=_ref.isFocused,isFocusVisibleProp=_ref.isFocusVisible,props=_objectWithoutProperties(_ref,_excluded);var _useHover=useHover(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=useIsPressed(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=useFocus(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _useFocusRing=useFocusRing(),isFocusVisible=_useFocusRing.isFocusVisible,focusRingProps=_useFocusRing.focusProps;var _usePropsResolution=usePropsResolution('Pressable',props,{isPressed:isPressedProp||isPressed,isFocused:isFocusedProp||isFocused,isHovered:isHoveredProp||isHovered,isFocusVisible:isFocusVisibleProp||isFocusVisible,isDisabled:disabled||isDisabled}),onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(StyledPressable,_extends({ref:ref,onPressIn:composeEventHandlers(onPressIn,pressableProps.onPressIn),onPressOut:composeEventHandlers(onPressOut,pressableProps.onPressOut),onHoverIn:composeEventHandlers(onHoverIn,hoverProps.onHoverIn),onHoverOut:composeEventHandlers(onHoverOut,hoverProps.onHoverOut),onFocus:composeEventHandlers(composeEventHandlers(onFocus,focusProps.onFocus),focusRingProps.onFocus),onBlur:composeEventHandlers(composeEventHandlers(onBlur,focusProps.onBlur),focusRingProps.onBlur),disabled:disabled||isDisabled},resolvedProps),typeof children!=='function'?children:children({isPressed:isPressed,isHovered:isHovered,isFocused:isFocused}));};export default memo(forwardRef(Pressable));","map":{"version":3,"sources":["Pressable.tsx"],"names":["useHover","React","hoverProps","onHoverIn","setHovered","onHoverOut","isHovered","useFocus","focusProps","onFocus","setFocused","onBlur","isFocused","useIsPressed","pressableProps","onPressIn","setIsPressed","onPressOut","isPressed","StyledPressable","makeStyledComponent","Pressable","isFocusVisible","props","focusRingProps","useFocusRing","resolvedProps","usePropsResolution","isPressedProp","isFocusedProp","isHoveredProp","isFocusVisibleProp","isDisabled","disabled","useHasResponsiveProps","composeEventHandlers","children","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IPressableProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nexport const useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    hoverProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false),\n    },\n    isHovered,\n  };\n};\n\nexport const useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false),\n    },\n    isFocused,\n  };\n};\n\nexport const useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false),\n    },\n    isPressed,\n  };\n};\n\nconst StyledPressable = makeStyledComponent(RNPressable);\n\nconst Pressable = (\n  {\n    children,\n    isDisabled,\n    disabled,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: IPressableProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('Pressable', props, {\n    isPressed: isPressedProp || isPressed,\n    isFocused: isFocusedProp || isFocused,\n    isHovered: isHoveredProp || isHovered,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled: disabled || isDisabled,\n  });\n\n  // TODO: Replace Render props with Context Hook\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  // TODO: Replace Render props with Context Hook\n  return (\n    <StyledPressable\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      disabled={disabled || isDisabled}\n      {...resolvedProps}\n    >\n      {typeof children !== 'function'\n        ? children\n        : children({\n            isPressed,\n            isHovered,\n            isFocused,\n          })}\n    </StyledPressable>\n  );\n};\n\nexport default memo(forwardRef(Pressable));\n"]},"metadata":{},"sourceType":"module"}