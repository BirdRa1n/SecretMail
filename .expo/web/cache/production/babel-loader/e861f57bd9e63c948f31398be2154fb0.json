{"ast":null,"code":"import React from'react';import{useNativeBaseConfig}from\"../core/NativeBaseContext\";import{resolveValueWithBreakpoint}from\"./useThemeProps/utils\";import{useTheme}from\"./../hooks/useTheme\";export var useBreakpointResolvedProps=function useBreakpointResolvedProps(props){var currentBreakpoint=useNativeBaseConfig('useBreakpointResolvedProps').currentBreakpoint;var theme=useTheme();var newProps=React.useMemo(function(){var newProps={};for(var key in props){var rawValue=props[key];var value=resolveValueWithBreakpoint(rawValue,theme.breakpoints,currentBreakpoint,key);newProps[key]=value;}return newProps;},[props,currentBreakpoint,theme.breakpoints]);return newProps;};","map":{"version":3,"sources":["useBreakpointResolvedProps.ts"],"names":["useBreakpointResolvedProps","props","currentBreakpoint","useNativeBaseConfig","theme","useTheme","newProps","rawValue","value","resolveValueWithBreakpoint"],"mappings":"AAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CAEA,OAAA,mBAAA,iCACA,OAAA,0BAAA,6BACA,OAAA,QAAA,2BAUA,MAAO,IAAMA,CAAAA,0BAA0B,CAAIC,QAA9BD,CAAAA,0BAA8BC,CAAAA,KAAD,CAAmB,CAC3D,GAAMC,CAAAA,iBAAiB,CAAGC,mBAAmB,CAAnBA,4BAAmB,CAAnBA,CAA1B,iBAAA,CAEA,GAAMC,CAAAA,KAAK,CAAGC,QAAd,EAAA,CACA,GAAMC,CAAAA,QAAmB,CAAG,KAAK,CAAL,OAAA,CAAc,UAAM,CAC9C,GAAIA,CAAAA,QAAmB,CAAvB,EAAA,CACA,IAAK,GAAL,CAAA,GAAA,GAAA,CAAA,KAAA,CAAuB,CACrB,GAAMC,CAAAA,QAAQ,CAAGN,KAAK,CAAtB,GAAsB,CAAtB,CACA,GAAMO,CAAAA,KAAK,CAAGC,0BAA0B,CAAA,QAAA,CAEtCL,KAAK,CAFiC,WAAA,CAAA,iBAAA,CAAxC,GAAwC,CAAxC,CAMAE,QAAQ,CAARA,GAAQ,CAARA,CAAAA,KAAAA,CACD,CACD,MAAA,CAAA,QAAA,CAZ0B,CAAA,CAazB,CAAA,KAAA,CAAA,iBAAA,CAA2BF,KAAK,CAbnC,WAaG,CAbyB,CAA5B,CAeA,MAAA,CAAA,QAAA,CAnBK,CAAA","sourcesContent":["import React from 'react';\nimport type { ResponsiveValue } from '../components/types';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\n\ntype IProps = {\n  [key: string]: ResponsiveValue<number | string>;\n};\n\ntype INewProps = {\n  [key: string]: number | string;\n};\n\nexport const useBreakpointResolvedProps = (props: IProps) => {\n  const currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps')\n    .currentBreakpoint;\n  const theme = useTheme();\n  const newProps: INewProps = React.useMemo(() => {\n    let newProps: INewProps = {};\n    for (let key in props) {\n      const rawValue = props[key];\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n      newProps[key] = value;\n    }\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n\n  return newProps;\n};\n"]},"metadata":{},"sourceType":"module"}