{"version":3,"sources":["App.js"],"names":["App","React","formData","setData","flex","bg","alignItems","justifyContent","w","maxW","h","maxH","rounded","mx","Label","type","placeholder","onChangeText","value","destinatario","ErrorMessage","leftIcon","size","assunto","msg","onPress","axios","get","params","to","subject","message","then","response","undefined","data","message_success","alert","mt","colorScheme"],"mappings":"61BAIe,SAASA,IACtB,MAA4BC,WAAe,IAA3C,WAAOC,EAAP,KAAiBC,EAAjB,KAgBA,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,KAAM,EAAGC,GAAG,UAAUC,WAAW,SAASC,eAAe,SAA9D,SACE,eAAC,IAAD,CAAKF,GAAG,WAAWG,EAAG,MAAOC,KAAM,IAAKC,EAAG,MAAOC,KAAM,IAAKC,QAAQ,KAArE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,yBACA,cAAC,IAAD,qDAKF,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,GAAG,IAAV,UACE,cAAC,IAAYC,MAAb,8BACA,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,GAChCC,aAAc,SAAAC,GAAK,OAAIf,EAAQ,EAAD,KAAMD,GAAN,IAC5BiB,aAAcD,QAGhB,cAAC,IAAYE,aAAb,CAA0BC,SAAU,cAAC,IAAD,CAAoBC,KAAK,OAA7D,2EAKJ,cAAC,IAAD,UACE,eAAC,IAAD,CAAOT,GAAG,IAAV,UACE,cAAC,IAAYC,MAAb,sBACA,cAAC,IAAD,CAAOC,KAAK,OAAOC,YAAY,GAC7BC,aAAc,SAAAC,GAAK,OAAIf,EAAQ,EAAD,KAAMD,GAAN,IAC5BqB,QAASL,QAEb,cAAC,IAAYE,aAAb,CAA0BC,SAAU,cAAC,IAAD,CAAoBC,KAAK,OAA7D,2EAKJ,cAAC,IAAD,UACE,eAAC,IAAD,CAAOT,GAAG,IAAV,UACE,cAAC,IAAYC,MAAb,uBACA,cAAC,IAAD,CAAUC,KAAK,OAAOC,YAAY,GAChCC,aAAc,SAAAC,GAAK,OAAIf,EAAQ,EAAD,KAAMD,GAAN,IAC5BsB,IAAKN,QAET,cAAC,IAAYE,aAAb,CAA0BC,SAAU,cAAC,IAAD,CAAoBC,KAAK,OAA7D,2EAKJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAQG,QAAS,WA/DzBC,IACKC,IAAI,+CAAgD,CACnDC,OAAQ,CACNC,GAAI3B,EAASiB,aACbW,QAAS5B,EAASqB,QAClBQ,QAAS7B,EAASsB,OAGrBQ,MAAK,SAAUC,QACqBC,GAAjCD,EAASE,KAAKC,iBACfC,MAAM,0CAqD4BC,GAAG,IAAI9B,EAAG,MAAO+B,YAAY,QAA9D,+B","file":"static/js/app.b69da3ab.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { NativeBaseProvider, Button, FormControl, Stack, TextArea, WarningOutlineIcon, Box, Text, Center, View, Input, Heading, Alert } from 'native-base';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function App() {\n  const [formData, setData] = React.useState({});\n  function SendMail(){\n    axios\n        .get(\"https://birdra1n.x10.bz/SecretMail/api/send/\", {\n          params: {\n            to: formData.destinatario,\n            subject: formData.assunto,\n            message: formData.msg\n          },\n        })\n        .then(function (response) {\n         if(response.data.message_success != undefined){\n           alert(\"Seu email foi enviado com sucesso!\")\n         }\n        });\n  }\n  return (\n    <NativeBaseProvider >\n      <Box flex={1} bg=\"#313131\" alignItems=\"center\" justifyContent=\"center\">\n        <Box bg=\"light.50\" w={'85%'} maxW={300} h={'60%'} maxH={400} rounded=\"lg\">\n          <Center>\n            <Heading>SecretMail</Heading>\n            <Text>\n              Obrigado por usar nossa ferramenta.\n\n            </Text>\n          </Center>\n          <FormControl >\n            <Stack mx=\"4\">\n              <FormControl.Label>Destinatário</FormControl.Label>\n              <Input type=\"email\" placeholder=\"\"\n              onChangeText={value => setData({ ...formData,\n                destinatario: value\n              })}\n               />\n              <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                Você esqueceu de preencher o campo do destinatário\n              </FormControl.ErrorMessage>\n            </Stack>\n          </FormControl>\n          <FormControl >\n            <Stack mx=\"4\">\n              <FormControl.Label>Assunto</FormControl.Label>\n              <Input type=\"text\" placeholder=\"\" \n                onChangeText={value => setData({ ...formData,\n                  assunto: value\n                })}/>\n              <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                Você esqueceu de preencher o campo do destinatário\n              </FormControl.ErrorMessage>\n            </Stack>\n          </FormControl>\n          <FormControl >\n            <Stack mx=\"4\">\n              <FormControl.Label>Mensagem</FormControl.Label>\n              <TextArea type=\"text\" placeholder=\"\" \n                onChangeText={value => setData({ ...formData,\n                  msg: value\n                })}/>\n              <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                Você esqueceu de preencher o campo do destinatário\n              </FormControl.ErrorMessage>\n            </Stack>\n          </FormControl>\n          <Center>\n            <Button onPress={()=>SendMail()} mt=\"7\" w={'70%'} colorScheme=\"light\">\n              Enviar\n            </Button>\n          </Center>\n        </Box>\n\n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\n\n"],"sourceRoot":""}