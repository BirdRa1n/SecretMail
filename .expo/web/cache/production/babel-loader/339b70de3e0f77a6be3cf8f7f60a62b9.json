{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"hideDragIndicator\"],_excluded2=[\"isOpen\",\"disableOverlay\",\"onClose\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Modal}from\"../../composites/Modal\";import{usePropsResolution}from\"../../../hooks\";import{ActionSheetContext}from\"./ActionSheetContext\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Actionsheet=function Actionsheet(_ref,ref){var children=_ref.children,_ref$hideDragIndicato=_ref.hideDragIndicator,hideDragIndicator=_ref$hideDragIndicato===void 0?false:_ref$hideDragIndicato,props=_objectWithoutProperties(_ref,_excluded);var _usePropsResolution=usePropsResolution('Actionsheet',props),isOpen=_usePropsResolution.isOpen,disableOverlay=_usePropsResolution.disableOverlay,onClose=_usePropsResolution.onClose,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(Modal,_extends({isOpen:isOpen,onClose:onClose},resolvedProps,{overlayVisible:disableOverlay?false:true,closeOnOverlayClick:disableOverlay?false:true,ref:ref}),React.createElement(ActionSheetContext.Provider,{value:{hideDragIndicator:hideDragIndicator}},children));};export default memo(forwardRef(Actionsheet));","map":{"version":3,"sources":["Actionsheet.tsx"],"names":["Actionsheet","hideDragIndicator","props","resolvedProps","usePropsResolution","useHasResponsiveProps","onClose","disableOverlay","ref","memo","forwardRef"],"mappings":"4cAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,KAAA,8BAEA,OAAA,kBAAA,sBACA,OAAA,kBAAA,4BACA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAA,GAAA,CAGf,IAFH,CAAA,QAEG,MAFH,QAEG,4BAFSC,iBAET,CAFSA,iBAET,gCAFH,KAEG,uBAFuCC,KAEvC,0CACH,wBAKIE,kBAAkB,CAAA,aAAA,CANnB,KAMmB,CALtB,CAAM,MAAN,qBAAM,MAAN,CAAM,cAAN,qBAAM,cAAN,CAAM,OAAN,qBAAM,OAAN,CAIKD,aAJL,0DAQA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CACE,MAAM,CADR,MAAA,CAEE,OAAO,CAAEC,OAFX,CAAA,CAAA,aAAA,CAAA,CAIE,cAAc,CAAEC,cAAc,CAAA,KAAA,CAJhC,IAAA,CAKE,mBAAmB,CAAEA,cAAc,CAAA,KAAA,CALrC,IAAA,CAME,GAAG,CAAEC,GANP,CAAA,CAAA,CAQE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,CAAA,CAA6B,KAAK,CAAE,CAAEP,iBAAAA,CAAAA,iBAAF,CAApC,CAAA,CATJ,QASI,CARF,CADF,CAfF,CAAA,CA+BA,cAAeQ,CAAAA,IAAI,CAACC,UAAU,CAA9B,WAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { ActionSheetContext } from './ActionSheetContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Actionsheet = (\n  { children, hideDragIndicator = false, ...props }: IActionsheetProps,\n  ref: any\n) => {\n  const {\n    isOpen,\n    disableOverlay,\n    onClose,\n    ...resolvedProps\n  } = usePropsResolution('Actionsheet', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      {...resolvedProps}\n      overlayVisible={disableOverlay ? false : true}\n      closeOnOverlayClick={disableOverlay ? false : true}\n      ref={ref}\n    >\n      <ActionSheetContext.Provider value={{ hideDragIndicator }}>\n        {children}\n      </ActionSheetContext.Provider>\n    </Modal>\n  );\n};\n\nexport default memo(forwardRef(Actionsheet));\n"]},"metadata":{},"sourceType":"module"}