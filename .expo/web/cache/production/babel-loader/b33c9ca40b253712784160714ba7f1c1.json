{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"isTruncated\",\"noOfLines\",\"bold\",\"italic\",\"sub\",\"highlight\",\"underline\",\"strikeThrough\",\"fontFamily\",\"fontWeight\",\"fontStyle\",\"_hover\",\"fontSize\",\"numberOfLines\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{memo,forwardRef,useRef}from'react';import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHover}from'@react-native-aria/interactions';import{mergeRefs}from\"../../../utils/mergeRefs\";import{makeStyledComponent}from\"../../../utils/styled\";import{useResolvedFontFamily}from\"../../../hooks/useResolvedFontFamily\";import NativeText from\"react-native-web/dist/exports/Text\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var StyledText=makeStyledComponent(NativeText);var TextAncestorContext=React.createContext(false);var Text=function Text(_ref2,ref){var children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded);var hasTextAncestor=React.useContext(TextAncestorContext);var _usePropsResolution=usePropsResolution('Text',props,{},{resolveResponsively:['noOfLines','numberOfLines'],componentTheme:hasTextAncestor?{}:undefined}),isTruncated=_usePropsResolution.isTruncated,noOfLines=_usePropsResolution.noOfLines,bold=_usePropsResolution.bold,italic=_usePropsResolution.italic,sub=_usePropsResolution.sub,highlight=_usePropsResolution.highlight,underline=_usePropsResolution.underline,strikeThrough=_usePropsResolution.strikeThrough,propFontFamily=_usePropsResolution.fontFamily,propFontWeight=_usePropsResolution.fontWeight,propFontStyle=_usePropsResolution.fontStyle,_hover=_usePropsResolution._hover,fontSize=_usePropsResolution.fontSize,numberOfLines=_usePropsResolution.numberOfLines,reslovedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _ref=useRef(null);var _useHover=useHover({},_hover?_ref:null),isHovered=_useHover.isHovered;var fontFamily=propFontFamily;var fontStyle=italic?'italic':propFontStyle;var fontWeight=bold?'bold':propFontWeight;var resolvedFontFamily=useResolvedFontFamily({fontFamily:fontFamily,fontWeight:fontWeight!==null&&fontWeight!==void 0?fontWeight:hasTextAncestor?undefined:400,fontStyle:fontStyle!==null&&fontStyle!==void 0?fontStyle:hasTextAncestor?undefined:'normal'});if(resolvedFontFamily){fontFamily=resolvedFontFamily;}if(useHasResponsiveProps(props)){return null;}var propsToSpread=_objectSpread(_objectSpread(_objectSpread({},reslovedProps),{},{numberOfLines:numberOfLines||noOfLines?numberOfLines||noOfLines:isTruncated?1:undefined},resolvedFontFamily),{},{bg:highlight?'warning.300':reslovedProps.bg,textDecorationLine:underline&&strikeThrough?'underline line-through':underline?'underline':strikeThrough?'line-through':reslovedProps.textDecorationLine,fontSize:sub?10:fontSize,ref:mergeRefs([ref,_ref])},isHovered&&_hover);return hasTextAncestor?React.createElement(StyledText,propsToSpread,children):React.createElement(TextAncestorContext.Provider,{value:true},React.createElement(StyledText,propsToSpread,children));};export default memo(forwardRef(Text));","map":{"version":3,"sources":["index.tsx"],"names":["StyledText","makeStyledComponent","TextAncestorContext","React","Text","props","hasTextAncestor","fontFamily","fontWeight","fontStyle","reslovedProps","usePropsResolution","resolveResponsively","componentTheme","undefined","_ref","useRef","isHovered","useHover","_hover","italic","bold","resolvedFontFamily","useResolvedFontFamily","useHasResponsiveProps","propsToSpread","numberOfLines","isTruncated","bg","highlight","textDecorationLine","underline","strikeThrough","fontSize","sub","ref","mergeRefs","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef, useRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ITextProps } from './types';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils/mergeRefs';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { Text as NativeText } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledText = makeStyledComponent(NativeText);\n// To have a RN compatible behaviour, we'll inherit parent text styles as base style\nconst TextAncestorContext = React.createContext(false);\n\nconst Text = ({ children, ...props }: ITextProps, ref: any) => {\n  const hasTextAncestor = React.useContext(TextAncestorContext);\n\n  const {\n    isTruncated,\n    noOfLines,\n    bold,\n    italic,\n    sub,\n    highlight,\n    underline,\n    strikeThrough,\n    fontFamily: propFontFamily,\n    fontWeight: propFontWeight,\n    fontStyle: propFontStyle,\n    _hover,\n    fontSize,\n    numberOfLines,\n    ...reslovedProps\n  } = usePropsResolution(\n    'Text',\n    props,\n    {},\n    {\n      resolveResponsively: ['noOfLines', 'numberOfLines'],\n      // We override the component base theme if text has an ancestor.\n      componentTheme: hasTextAncestor ? {} : undefined,\n    }\n  );\n\n  const _ref = useRef(null);\n  // TODO: might have to add this condition\n  const { isHovered } = useHover({}, _hover ? _ref : null);\n  // const { isHovered } = useHover({}, _ref);\n  let fontFamily = propFontFamily;\n  const fontStyle = italic ? 'italic' : propFontStyle;\n  const fontWeight = bold ? 'bold' : propFontWeight;\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? (hasTextAncestor ? undefined : 400),\n    fontStyle: fontStyle ?? (hasTextAncestor ? undefined : 'normal'),\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const propsToSpread = {\n    ...reslovedProps,\n    numberOfLines:\n      numberOfLines || noOfLines\n        ? numberOfLines || noOfLines\n        : isTruncated\n        ? 1\n        : undefined,\n    ...resolvedFontFamily,\n    bg: highlight ? 'warning.300' : reslovedProps.bg,\n    textDecorationLine:\n      underline && strikeThrough\n        ? 'underline line-through'\n        : underline\n        ? 'underline'\n        : strikeThrough\n        ? 'line-through'\n        : reslovedProps.textDecorationLine,\n    fontSize: sub ? 10 : fontSize,\n    ref: mergeRefs([ref, _ref]),\n    ...(isHovered && _hover),\n  };\n\n  return hasTextAncestor ? (\n    <StyledText {...propsToSpread}>{children}</StyledText>\n  ) : (\n    <TextAncestorContext.Provider value={true}>\n      <StyledText {...propsToSpread}>{children}</StyledText>\n    </TextAncestorContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(Text));\nexport type { ITextProps };\n"]},"metadata":{},"sourceType":"module"}