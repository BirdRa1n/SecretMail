{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"];import React from'react';import Box from\"../../primitives/Box\";import{useThemeProps}from\"../../../hooks/useThemeProps\";import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import{canUseDom}from\"../../../utils\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var SlideFade=function SlideFade(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var isDomUsable=canUseDom();var _useThemeProps=useThemeProps('SlideFade',props),animationState=_useThemeProps.in,duration=_useThemeProps.duration,offsetX=_useThemeProps.offsetX,offsetY=_useThemeProps.offsetY;var fadeAnim=React.useRef(new Animated.Value(0)).current;var slideAnimX=React.useRef(new Animated.Value(0)).current;var slideAnimY=React.useRef(new Animated.Value(0)).current;var animIn=function animIn(){if(isDomUsable){Animated.timing(fadeAnim,{toValue:1,duration:duration,useNativeDriver:Platform.OS!=='web'}).start();Animated.timing(slideAnimX,{toValue:0,duration:duration,useNativeDriver:Platform.OS!=='web'}).start();Animated.timing(slideAnimY,{toValue:0,duration:duration,useNativeDriver:Platform.OS!=='web'}).start();}};var animOut=function animOut(){if(isDomUsable){Animated.timing(fadeAnim,{toValue:0,duration:duration,useNativeDriver:Platform.OS!=='web'}).start();offsetX&&Animated.timing(slideAnimX,{toValue:offsetX,duration:duration,useNativeDriver:Platform.OS!=='web'}).start();offsetY&&Animated.timing(slideAnimY,{toValue:offsetY,duration:duration,useNativeDriver:Platform.OS!=='web'}).start();}};animationState?animIn():animOut();if(useHasResponsiveProps(props)){return null;}return React.createElement(Animated.View,{style:[{opacity:fadeAnim,transform:[{translateX:slideAnimX,translateY:slideAnimY}]}],ref:ref},React.createElement(Box,props,children));};export default React.memo(React.forwardRef(SlideFade));","map":{"version":3,"sources":["SlideFade.tsx"],"names":["SlideFade","props","isDomUsable","canUseDom","in","offsetY","useThemeProps","fadeAnim","React","Animated","slideAnimX","slideAnimY","animIn","toValue","duration","useNativeDriver","Platform","animOut","offsetX","animationState","useHasResponsiveProps","opacity","transform","translateX","translateY","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideFadeProps } from './types';\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SlideFade = ({ children, ...props }: ISlideFadeProps, ref?: any) => {\n  const isDomUsable = canUseDom();\n\n  const { in: animationState, duration, offsetX, offsetY } = useThemeProps(\n    'SlideFade',\n    props\n  );\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      offsetX &&\n        Animated.timing(slideAnimX, {\n          toValue: offsetX,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n      offsetY &&\n        Animated.timing(slideAnimY, {\n          toValue: offsetY,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n    }\n  };\n  animationState ? animIn() : animOut();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n          transform: [{ translateX: slideAnimX, translateY: slideAnimY }],\n        },\n      ]}\n      ref={ref}\n    >\n      <Box {...props}>{children}</Box>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(React.forwardRef(SlideFade));\n"]},"metadata":{},"sourceType":"module"}