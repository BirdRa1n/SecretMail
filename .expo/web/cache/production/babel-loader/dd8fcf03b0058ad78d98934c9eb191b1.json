{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"style\",\"isIncrement\",\"disablitityCheck\",\"_active\",\"_disabled\",\"isDisabled\",\"accessibilityLabel\",\"pressHandler\",\"iconColor\"],_excluded3=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import{VStack,Box}from\"../../primitives\";import{useThemeProps}from\"../../../hooks\";import{NumberInputContext}from\"./Context\";import{ChevronUpIcon,ChevronDownIcon}from\"../../primitives/Icon/Icons\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";export var NBStepper=React.forwardRef(function(_ref,ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _useThemeProps=useThemeProps('NumberInputStepper',props),style=_useThemeProps.style,isIncrement=_useThemeProps.isIncrement,disablitityCheck=_useThemeProps.disablitityCheck,_active=_useThemeProps._active,_disabled=_useThemeProps._disabled,isDisabled=_useThemeProps.isDisabled,accessibilityLabel=_useThemeProps.accessibilityLabel,pressHandler=_useThemeProps.pressHandler,iconColor=_useThemeProps.iconColor,newProps=_objectWithoutProperties(_useThemeProps,_excluded2);if(useHasResponsiveProps(props)){return null;}return React.createElement(TouchableOpacity,{activeOpacity:0.2,disabled:disablitityCheck||isDisabled,onPress:pressHandler,accessible:true,accessibilityLabel:accessibilityLabel,ref:ref},React.createElement(Box,_extends({},newProps,_active,disablitityCheck||isDisabled?_disabled:{},{borderColor:\"transparent\",style:style,opacity:disablitityCheck||isDisabled?0.4:1},Platform.OS==='web'?{disabled:disablitityCheck||isDisabled,cursor:disablitityCheck||isDisabled?'not-allowed':'auto'}:{}),children||isIncrement?React.createElement(ChevronUpIcon,{color:iconColor}):React.createElement(ChevronDownIcon,{color:iconColor})));});var NumberInputStepper=function NumberInputStepper(_ref2,ref){var children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded3);var _React$useContext=React.useContext(NumberInputContext),numberInputStepper=_React$useContext.numberInputStepper,setNumberInputStepper=_React$useContext.setNumberInputStepper;React.useEffect(function(){!numberInputStepper&&setNumberInputStepper(React.createElement(VStack,_extends({},props,{ref:ref}),children));},[numberInputStepper,setNumberInputStepper,props,children,ref]);return null;};export default React.memo(React.forwardRef(NumberInputStepper));","map":{"version":3,"sources":["NumberInputStepper.tsx"],"names":["NBStepper","props","newProps","useThemeProps","useHasResponsiveProps","disablitityCheck","ref","disabled","cursor","iconColor","NumberInputStepper","setNumberInputStepper","React"],"mappings":"wiBAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,0IAEA,OAAA,MAAA,CAAA,GAAA,wBACA,OAAA,aAAA,sBAEA,OAAA,kBAAA,iBACA,OAAA,aAAA,CAAA,eAAA,mCACA,OAAA,qBAAA,4CAEA,MAAO,IAAMA,CAAAA,SAAS,CAAG,KAAK,CAAL,UAAA,CACvB,cAAA,GAAA,CAA4C,IAA3C,CAAA,QAA2C,MAA3C,QAA2C,CAA5BC,KAA4B,0CAC1C,mBAWIE,aAAa,CAAA,oBAAA,CAZyB,KAYzB,CAXjB,CAAM,KAAN,gBAAM,KAAN,CAAM,WAAN,gBAAM,WAAN,CAAM,gBAAN,gBAAM,gBAAN,CAAM,OAAN,gBAAM,OAAN,CAAM,SAAN,gBAAM,SAAN,CAAM,UAAN,gBAAM,UAAN,CAAM,kBAAN,gBAAM,kBAAN,CAAM,YAAN,gBAAM,YAAN,CAAM,SAAN,gBAAM,SAAN,CAUKD,QAVL,qDAaA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,CACE,aAAa,CADf,GAAA,CAEE,QAAQ,CAAEC,gBAAgB,EAF5B,UAAA,CAGE,OAAO,CAHT,YAAA,CAIE,UAAU,CAJZ,IAAA,CAKE,kBAAkB,CALpB,kBAAA,CAME,GAAG,CAAEC,GANP,CAAA,CAQE,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,CAAA,QAAA,CAAA,OAAA,CAGOD,gBAAgB,EAAhBA,UAAAA,CAAAA,SAAAA,CAHP,EAAA,CAAA,CAIE,WAAW,CAJb,aAAA,CAKE,KAAK,CALP,KAAA,CAME,OAAO,CAAEA,gBAAgB,EAAhBA,UAAAA,CAAAA,GAAAA,CAAuC,CANlD,CAAA,CAOO,QAAQ,CAAR,EAAA,GAAA,KAAA,CACD,CACEE,QAAQ,CAAEF,gBAAgB,EAD5B,UAAA,CAEEG,MAAM,CAAEH,gBAAgB,EAAhBA,UAAAA,CAAAA,aAAAA,CAAiD,MAF3D,CADC,CAPP,EAAA,CAAA,CAcG,QAAQ,EAAR,WAAA,CACC,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAAe,KAAK,CAAEI,SAAtB,CAAA,CADD,CAGC,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,CAAiB,KAAK,CAAEA,SAAxB,CAAA,CAjBJ,CARF,CADF,CAlBG,CAAkB,CAAlB,CAoDP,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,OAAA,GAAA,CAGtB,IAFH,CAAA,QAEG,OAFH,QAEG,CAFYT,KAEZ,4CACH,sBAGyBW,KAAK,CAALA,UAAAA,CAHzB,kBAGyBA,CAHzB,CAAM,kBAAN,mBAAM,kBAAN,CAEED,qBAFF,mBAEEA,qBAFF,CAKAC,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,CAAA,kBAAA,EACED,qBAAqB,CACnB,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAmB,GAAG,CAAEL,GAAxB,CAAA,CAAA,CAFJ,QAEI,CADmB,CADvB,CADFM,CAAAA,CAOG,CAAA,kBAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,QAAA,CAPHA,GAOG,CAPHA,EAQA,MAAA,KAAA,CAjBF,CAAA,CAoBA,cAAeA,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,kBAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { VStack, Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { INumberInputSteppersProps, INumberInputContext } from './types';\nimport { NumberInputContext } from './Context';\nimport { ChevronUpIcon, ChevronDownIcon } from '../../primitives/Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const NBStepper = React.forwardRef(\n  ({ children, ...props }: any, ref?: any) => {\n    const {\n      style,\n      isIncrement,\n      disablitityCheck,\n      _active,\n      _disabled,\n      isDisabled,\n      accessibilityLabel,\n      pressHandler,\n      iconColor,\n      ...newProps\n    } = useThemeProps('NumberInputStepper', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <TouchableOpacity\n        activeOpacity={0.2}\n        disabled={disablitityCheck || isDisabled}\n        onPress={pressHandler}\n        accessible\n        accessibilityLabel={accessibilityLabel}\n        ref={ref}\n      >\n        <Box\n          {...newProps}\n          {..._active}\n          {...(disablitityCheck || isDisabled ? _disabled : {})}\n          borderColor=\"transparent\"\n          style={style}\n          opacity={disablitityCheck || isDisabled ? 0.4 : 1}\n          {...(Platform.OS === 'web'\n            ? {\n                disabled: disablitityCheck || isDisabled,\n                cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto',\n              }\n            : {})}\n        >\n          {children || isIncrement ? (\n            <ChevronUpIcon color={iconColor} />\n          ) : (\n            <ChevronDownIcon color={iconColor} />\n          )}\n        </Box>\n      </TouchableOpacity>\n    );\n  }\n);\n\nconst NumberInputStepper = (\n  { children, ...props }: INumberInputSteppersProps,\n  ref?: any\n) => {\n  const {\n    numberInputStepper,\n    setNumberInputStepper,\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  React.useEffect(() => {\n    !numberInputStepper &&\n      setNumberInputStepper(\n        <VStack {...props} ref={ref}>\n          {children}\n        </VStack>\n      );\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n  return null;\n};\n\nexport default React.memo(React.forwardRef(NumberInputStepper));\n"]},"metadata":{},"sourceType":"module"}