{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"startIcon\",\"rightIcon\",\"leftIcon\",\"endIcon\",\"spinner\",\"isDisabled\",\"isLoading\",\"isHovered\",\"isPressed\",\"isFocused\",\"isFocusVisible\",\"spinnerPlacement\"],_excluded2=[\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\",\"_text\",\"_stack\",\"_spinner\",\"isLoadingText\",\"_icon\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Spinner from\"../Spinner\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{default as Box}from\"../Box\";import HStack from\"../Stack/HStack\";import{Pressable}from\"../Pressable\";import{composeEventHandlers}from\"../../../utils\";import{useHover,useFocus,useIsPressed}from\"../../primitives/Pressable/Pressable\";import{useFocusRing}from'@react-native-aria/focus';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Button=function Button(_ref,ref){var children=_ref.children,startIcon=_ref.startIcon,rightIcon=_ref.rightIcon,leftIcon=_ref.leftIcon,endIcon=_ref.endIcon,spinner=_ref.spinner,isDisabled=_ref.isDisabled,isLoading=_ref.isLoading,isHoveredProp=_ref.isHovered,isPressedProp=_ref.isPressed,isFocusedProp=_ref.isFocused,isFocusVisibleProp=_ref.isFocusVisible,_ref$spinnerPlacement=_ref.spinnerPlacement,spinnerPlacement=_ref$spinnerPlacement===void 0?'start':_ref$spinnerPlacement,props=_objectWithoutProperties(_ref,_excluded);var _props$accessibilityR;var _useHover=useHover(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=useIsPressed(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=useFocus(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _useFocusRing=useFocusRing(),isFocusVisible=_useFocusRing.isFocusVisible,focusRingProps=_useFocusRing.focusProps;var _usePropsResolution=usePropsResolution('Button',props,{isDisabled:isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isPressed:isPressedProp||isPressed,isLoading:isLoading,isFocusVisible:isFocusVisibleProp||isFocusVisible}),onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,_text=_usePropsResolution._text,_stack=_usePropsResolution._stack,_spinner=_usePropsResolution._spinner,isLoadingText=_usePropsResolution.isLoadingText,_icon=_usePropsResolution._icon,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);if(useHasResponsiveProps(props)){return null;}if(leftIcon){startIcon=leftIcon;}if(rightIcon){endIcon=rightIcon;}if(endIcon&&React.isValidElement(endIcon)){endIcon=React.Children.map(endIcon,function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread({key:\"button-end-icon-\".concat(index)},_icon),child.props));});}if(startIcon&&React.isValidElement(startIcon)){startIcon=React.Children.map(startIcon,function(child,index){return React.cloneElement(child,_objectSpread(_objectSpread({key:\"button-start-icon-\".concat(index)},_icon),child.props));});}var spinnerElement=spinner?spinner:React.createElement(Spinner,_extends({color:_text===null||_text===void 0?void 0:_text.color},_spinner));var boxChildren=function boxChildren(child){return child?React.createElement(Box,{_text:_text},child):null;};return React.createElement(Pressable,_extends({disabled:isDisabled||isLoading,ref:ref,onPressIn:composeEventHandlers(onPressIn,pressableProps.onPressIn),onPressOut:composeEventHandlers(onPressOut,pressableProps.onPressOut),onHoverIn:composeEventHandlers(onHoverIn,hoverProps.onHoverIn),onHoverOut:composeEventHandlers(onHoverOut,hoverProps.onHoverOut),onFocus:composeEventHandlers(composeEventHandlers(onFocus,focusProps.onFocus),focusRingProps.onFocus),onBlur:composeEventHandlers(composeEventHandlers(onBlur,focusProps.onBlur),focusRingProps.onBlur)},resolvedProps,{accessibilityRole:(_props$accessibilityR=props.accessibilityRole)!==null&&_props$accessibilityR!==void 0?_props$accessibilityR:'button'}),React.createElement(HStack,_extends({},_stack,{test:true}),startIcon&&!isLoading?startIcon:null,isLoading&&spinnerPlacement==='start'?spinnerElement:null,isLoading?isLoadingText?boxChildren(isLoadingText):null:boxChildren(children),endIcon&&!isLoading?endIcon:null,isLoading&&spinnerPlacement==='end'?spinnerElement:null));};export default memo(forwardRef(Button));","map":{"version":3,"sources":["Button.tsx"],"names":["default","Button","isHovered","isPressed","isFocused","isFocusVisible","spinnerPlacement","props","useHover","useIsPressed","useFocus","focusProps","focusRingProps","useFocusRing","resolvedProps","usePropsResolution","isDisabled","isHoveredProp","isFocusedProp","isPressedProp","isLoading","isFocusVisibleProp","useHasResponsiveProps","startIcon","endIcon","React","key","child","spinnerElement","spinner","_text","color","boxChildren","composeEventHandlers","pressableProps","hoverProps","isLoadingText","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box, IBoxProps } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport type { IButtonProps } from './types';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Button = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    spinnerPlacement = 'start',\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    _text,\n    _stack,\n    _spinner,\n    isLoadingText,\n    _icon,\n    ...resolvedProps\n  } = usePropsResolution('Button', props, {\n    isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isPressed: isPressedProp || isPressed,\n    isLoading,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  const boxChildren = (child: any) => {\n    return child ? <Box _text={_text}>{child}</Box> : null;\n  };\n\n  return (\n    <Pressable\n      disabled={isDisabled || isLoading}\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n      accessibilityRole={props.accessibilityRole ?? 'button'}\n    >\n      <HStack {..._stack} test={true}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {isLoading\n          ? isLoadingText\n            ? boxChildren(isLoadingText)\n            : null\n          : boxChildren(children)}\n\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Button));\n"]},"metadata":{},"sourceType":"module"}