{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"isHovered\",\"isFocused\",\"isFocusVisible\"],_excluded2=[\"onValueChange\",\"selectedValue\",\"children\",\"dropdownIcon\",\"dropdownCloseIcon\",\"dropdownOpenIcon\",\"placeholder\",\"accessibilityLabel\",\"defaultValue\",\"_item\",\"_selectedItem\",\"onOpen\",\"onClose\",\"optimized\",\"customDropdownIconProps\",\"_actionSheetContent\",\"_actionSheetBody\",\"_webSelect\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import{Actionsheet}from\"../../composites/Actionsheet\";import Box from\"../Box\";import{Input}from\"../Input\";import{useFocusRing}from'@react-native-aria/focus';import{useControllableState}from\"../../../hooks\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{useHover}from'@react-native-aria/interactions';import{mergeRefs}from\"../../../utils\";import{useFormControl}from\"../../composites/FormControl\";import{ChevronDownIcon}from\"../Icon/Icons\";import{ScrollView}from\"../../basic/ScrollView\";import{extractInObject,stylingProps}from\"../../../theme/tools/utils\";import{FlatList}from\"../../basic/FlatList\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{Pressable}from\"../Pressable\";export var SelectContext=React.createContext({onValueChange:function onValueChange(){},selectedValue:null,_selectedItem:{},_item:{}});var Select=function Select(_ref2,ref){var isHoveredProp=_ref2.isHovered,isFocusedProp=_ref2.isFocused,isFocusVisibleProp=_ref2.isFocusVisible,props=_objectWithoutProperties(_ref2,_excluded);var selectProps=useFormControl({isDisabled:props.isDisabled,nativeID:props.nativeID});var flatListData=[];var isDisabled=selectProps.disabled;var tempFix='__NativebasePlaceholder__';var _ref=React.useRef(null);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isOpen=_React$useState2[0],setIsOpen=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isFocused=_React$useState4[0],setIsFocused=_React$useState4[1];var _useFocusRing=useFocusRing(),focusProps=_useFocusRing.focusProps,isFocusVisible=_useFocusRing.isFocusVisible;var _useHover=useHover({isDisabled:isDisabled},_ref),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _usePropsResolution=usePropsResolution('Select',props,{isDisabled:isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isFocusVisible:isFocusVisibleProp||isFocusVisible},undefined),onValueChange=_usePropsResolution.onValueChange,selectedValue=_usePropsResolution.selectedValue,children=_usePropsResolution.children,dropdownIcon=_usePropsResolution.dropdownIcon,dropdownCloseIcon=_usePropsResolution.dropdownCloseIcon,dropdownOpenIcon=_usePropsResolution.dropdownOpenIcon,placeholder=_usePropsResolution.placeholder,accessibilityLabel=_usePropsResolution.accessibilityLabel,defaultValue=_usePropsResolution.defaultValue,_item=_usePropsResolution._item,_selectedItem=_usePropsResolution._selectedItem,onOpen=_usePropsResolution.onOpen,onClose=_usePropsResolution.onClose,optimized=_usePropsResolution.optimized,customDropdownIconProps=_usePropsResolution.customDropdownIconProps,_actionSheetContent=_usePropsResolution._actionSheetContent,_actionSheetBody=_usePropsResolution._actionSheetBody,_webSelect=_usePropsResolution._webSelect,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _useControllableState=useControllableState({value:selectedValue,defaultValue:defaultValue,onChange:function onChange(newValue){onValueChange&&onValueChange(newValue);setIsOpen(false);}}),_useControllableState2=_slicedToArray(_useControllableState,2),value=_useControllableState2[0],setValue=_useControllableState2[1];var itemsList=React.Children.map(children!==null&&children!==void 0?children:[],function(child){return{label:child.props.label,value:child.props.value};});var selectedItemArray=itemsList.filter(function(item){return item.value===value;});var selectedItem=selectedItemArray&&selectedItemArray.length?selectedItemArray[0]:null;var contextValue=React.useMemo(function(){return{onValueChange:setValue,selectedValue:value,_selectedItem:_selectedItem!==null&&_selectedItem!==void 0?_selectedItem:{},_item:_item!==null&&_item!==void 0?_item:{}};},[value,setValue,_selectedItem,_item]);if(useHasResponsiveProps(props)){return null;}var rightIcon=isOpen&&dropdownOpenIcon?dropdownOpenIcon:!isOpen&&dropdownCloseIcon?dropdownCloseIcon:dropdownIcon?dropdownIcon:React.createElement(ChevronDownIcon,customDropdownIconProps);var handleClose=function handleClose(){setIsOpen(false);onClose&&onClose();};if(optimized){React.Children.map(children,function(child){flatListData.push(child.props);});}var _extractInObject=extractInObject(resolvedProps,[].concat(_toConsumableArray(stylingProps.margin),_toConsumableArray(stylingProps.flexbox),_toConsumableArray(stylingProps.position),['shadow','opacity'])),_extractInObject2=_slicedToArray(_extractInObject,1),layoutProps=_extractInObject2[0];var commonInput=React.createElement(Input,_extends({placeholder:placeholder,InputRightElement:rightIcon},resolvedProps,{isFocused:isFocused,isHovered:isHovered,\"aria-hidden\":true,importantForAccessibility:\"no\",value:selectedItem===null||selectedItem===void 0?void 0:selectedItem.label,editable:false,focusable:false,isDisabled:isDisabled,pointerEvents:\"none\"}));return Platform.OS==='web'?React.createElement(Box,null,React.createElement(\"select\",_extends({\"aria-readonly\":selectProps.readOnly,required:selectProps.required,disabled:isDisabled},focusProps,hoverProps,{ref:mergeRefs([ref,_ref]),onChange:function onChange(e){setValue(e.target.value);},value:selectedItem===null?tempFix:value,\"aria-label\":placeholder,onFocus:function onFocus(){setIsFocused(true);onOpen&&onOpen();},onBlur:function onBlur(){setIsFocused(false);onClose&&onClose();}},_webSelect),React.createElement(\"option\",{disabled:true,value:tempFix},placeholder),children),commonInput):React.createElement(React.Fragment,null,React.createElement(Pressable,_extends({onPress:function onPress(){Keyboard.dismiss();setIsOpen(true);onOpen&&onOpen();},disabled:isDisabled,accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",ref:mergeRefs([ref,_ref])},layoutProps),commonInput),React.createElement(Actionsheet,{isOpen:isOpen,onClose:handleClose},React.createElement(Actionsheet.Content,_actionSheetContent,optimized?React.createElement(FlatList,_extends({},_actionSheetBody,{data:flatListData,keyExtractor:function keyExtractor(_item,index){return index.toString();},renderItem:function renderItem(_ref3){var item=_ref3.item;var isSelected=selectedValue===item.value;return React.createElement(Actionsheet.Item,_extends({onPress:function onPress(){if(!isDisabled){setValue(item.value);}},accessibilityState:{selected:isSelected}},item,_item,isSelected&&_selectedItem),item.label);}})):React.createElement(ScrollView,_actionSheetBody,React.createElement(SelectContext.Provider,{value:contextValue},children)))));};export default memo(forwardRef(Select));","map":{"version":3,"sources":["Select.tsx"],"names":["SelectContext","onValueChange","selectedValue","_selectedItem","_item","Select","isHovered","isFocused","isFocusVisible","props","selectProps","useFormControl","isDisabled","nativeID","flatListData","tempFix","_ref","React","useFocusRing","useHover","resolvedProps","usePropsResolution","isHoveredProp","isFocusedProp","isFocusVisibleProp","useControllableState","value","defaultValue","onChange","newValue","setIsOpen","itemsList","children","child","label","selectedItemArray","item","selectedItem","contextValue","useHasResponsiveProps","rightIcon","isOpen","dropdownIcon","handleClose","onClose","extractInObject","stylingProps","commonInput","Platform","mergeRefs","e","setValue","setIsFocused","onOpen","Keyboard","optimized","index","isSelected","selected","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport type { ISelectProps } from './types';\nimport { Platform, Keyboard } from 'react-native';\nimport { Actionsheet } from '../../composites/Actionsheet';\nimport Box from '../Box';\nimport { Input } from '../Input';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useControllableState } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { useFormControl } from '../../composites/FormControl';\nimport { ChevronDownIcon } from '../Icon/Icons';\nimport type { IButtonProps } from '../Button/types';\nimport { ScrollView } from '../../basic/ScrollView';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { FlatList } from '../../basic/FlatList';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { ISelectItemProps } from './types';\nimport { Pressable } from '../Pressable';\n\nexport const SelectContext = React.createContext({\n  onValueChange: (() => {}) as any,\n  selectedValue: null as any,\n  _selectedItem: {} as IButtonProps,\n  _item: {} as IButtonProps,\n});\n\nconst Select = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: ISelectProps,\n  ref: any\n) => {\n  const selectProps = useFormControl({\n    isDisabled: props.isDisabled,\n    nativeID: props.nativeID,\n  });\n  const flatListData: ISelectItemProps[] = [];\n\n  const isDisabled = selectProps.disabled;\n  const tempFix = '__NativebasePlaceholder__';\n  const _ref = React.useRef(null);\n\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const [isFocused, setIsFocused] = React.useState<boolean>(false);\n\n  const { focusProps, isFocusVisible } = useFocusRing();\n  const { hoverProps, isHovered } = useHover({ isDisabled }, _ref);\n\n  const {\n    onValueChange,\n    selectedValue,\n    children,\n    dropdownIcon,\n    dropdownCloseIcon,\n    dropdownOpenIcon,\n    placeholder,\n    accessibilityLabel,\n    defaultValue,\n    _item,\n    _selectedItem,\n    onOpen,\n    onClose,\n    optimized,\n    customDropdownIconProps,\n    _actionSheetContent,\n    _actionSheetBody,\n    _webSelect,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Select',\n    props,\n    {\n      isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    },\n    undefined\n  );\n\n  const [value, setValue] = useControllableState({\n    value: selectedValue,\n    defaultValue,\n    onChange: (newValue) => {\n      onValueChange && onValueChange(newValue);\n      setIsOpen(false);\n    },\n  });\n\n  const itemsList: Array<{ label: string; value: string }> = React.Children.map(\n    children ?? [],\n    (child: any) => {\n      return {\n        label: child.props.label,\n        value: child.props.value,\n      };\n    }\n  );\n\n  const selectedItemArray = itemsList.filter(\n    (item: any) => item.value === value\n  );\n\n  const selectedItem =\n    selectedItemArray && selectedItemArray.length ? selectedItemArray[0] : null;\n\n  const contextValue = React.useMemo(() => {\n    return {\n      onValueChange: setValue,\n      selectedValue: value,\n      _selectedItem: _selectedItem ?? {},\n      _item: _item ?? {},\n    };\n  }, [value, setValue, _selectedItem, _item]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const rightIcon =\n    isOpen && dropdownOpenIcon ? (\n      dropdownOpenIcon\n    ) : !isOpen && dropdownCloseIcon ? (\n      dropdownCloseIcon\n    ) : dropdownIcon ? (\n      dropdownIcon\n    ) : (\n      <ChevronDownIcon {...customDropdownIconProps} />\n    );\n\n  const handleClose = () => {\n    setIsOpen(false);\n    onClose && onClose();\n  };\n\n  if (optimized) {\n    React.Children.map(children, (child: any) => {\n      flatListData.push(child.props);\n    });\n  }\n\n  const [layoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    'shadow',\n    'opacity',\n  ]);\n\n  const commonInput = (\n    <Input\n      placeholder={placeholder}\n      InputRightElement={rightIcon}\n      {...resolvedProps}\n      // NOTE: Adding ts-ignore as we're not exposing isFocused in the Input component\n      // @ts-ignore-next-line\n      isFocused={isFocused}\n      isHovered={isHovered}\n      aria-hidden={true}\n      importantForAccessibility=\"no\"\n      value={selectedItem?.label}\n      editable={false}\n      focusable={false}\n      isDisabled={isDisabled}\n      pointerEvents=\"none\"\n    />\n  );\n\n  return Platform.OS === 'web' ? (\n    <Box>\n      {/* <Box w=\"100%\" h=\"100%\" position=\"absolute\" opacity=\"0\" zIndex={1}> */}\n      <select\n        aria-readonly={selectProps.readOnly}\n        required={selectProps.required}\n        disabled={isDisabled}\n        {...focusProps}\n        {...hoverProps}\n        ref={mergeRefs([ref, _ref])}\n        //@ts-ignore\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n        value={selectedItem === null ? tempFix : value}\n        aria-label={placeholder}\n        onFocus={() => {\n          setIsFocused(true);\n          onOpen && onOpen();\n        }}\n        onBlur={() => {\n          setIsFocused(false);\n          onClose && onClose();\n        }}\n        {..._webSelect}\n      >\n        <option disabled value={tempFix}>\n          {placeholder}\n        </option>\n        {children}\n      </select>\n      {/* </Box> */}\n      {commonInput}\n    </Box>\n  ) : (\n    <>\n      <Pressable\n        onPress={() => {\n          Keyboard.dismiss();\n          setIsOpen(true);\n          onOpen && onOpen();\n        }}\n        disabled={isDisabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        ref={mergeRefs([ref, _ref])}\n        {...layoutProps}\n      >\n        {commonInput}\n      </Pressable>\n      <Actionsheet isOpen={isOpen} onClose={handleClose}>\n        <Actionsheet.Content {..._actionSheetContent}>\n          {/* TODO: Replace ScrollVeiw with FlatList */}\n          {optimized ? (\n            <FlatList\n              {..._actionSheetBody}\n              data={flatListData}\n              // eslint-disable-next-line no-shadow\n              keyExtractor={(_item, index) => index.toString()}\n              renderItem={({ item }: any) => {\n                const isSelected = selectedValue === item.value;\n                return (\n                  <Actionsheet.Item\n                    onPress={() => {\n                      if (!isDisabled) {\n                        setValue(item.value);\n                      }\n                    }}\n                    accessibilityState={{ selected: isSelected }}\n                    {...item}\n                    {..._item}\n                    {...(isSelected && _selectedItem)}\n                  >\n                    {item.label}\n                  </Actionsheet.Item>\n                );\n              }}\n            />\n          ) : (\n            <ScrollView {..._actionSheetBody}>\n              <SelectContext.Provider value={contextValue}>\n                {children}\n              </SelectContext.Provider>\n            </ScrollView>\n          )}\n        </Actionsheet.Content>\n      </Actionsheet>\n    </>\n  );\n};\n\nexport default memo(forwardRef(Select));\n"]},"metadata":{},"sourceType":"module"}