{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"_hover\",\"_expanded\",\"_disabled\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import Box from\"../../primitives/Box\";import{AccordionItemContext}from\"./Context\";import{useThemeProps}from\"../../../hooks\";import{mergeRefs}from\"../../../utils\";import{useHover}from'@react-native-aria/interactions';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var AccordionSummary=function AccordionSummary(_ref2,ref){var children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded);var _React$useContext=React.useContext(AccordionItemContext),index=_React$useContext.index,isOpen=_React$useContext.isOpen,isDisabled=_React$useContext.isDisabled,onOpen=_React$useContext.onOpen,onClose=_React$useContext.onClose;var _useThemeProps=useThemeProps('AccordionSummary',props),_hover=_useThemeProps._hover,_expanded=_useThemeProps._expanded,_disabled=_useThemeProps._disabled,themedProps=_objectWithoutProperties(_useThemeProps,_excluded2);var pressHandler=function pressHandler(){isOpen?onClose&&onClose():onOpen&&onOpen();};var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;if(useHasResponsiveProps(props)){return null;}return React.createElement(TouchableOpacity,{activeOpacity:0.2,disabled:isDisabled,onPress:pressHandler,accessible:true,accessibilityRole:\"checkbox\",ref:mergeRefs([ref,_ref])},React.createElement(Box,_extends({display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"},themedProps,isHovered&&_hover,isOpen&&_expanded,isDisabled&&_disabled,!index&&{borderTopColor:'transparent'},Platform.OS==='web'?{disabled:isDisabled,cursor:isDisabled?'not-allowed':'auto'}:{}),children));};export default React.memo(React.forwardRef(AccordionSummary));","map":{"version":3,"sources":["AccordionSummary.tsx"],"names":["AccordionSummary","props","onClose","React","themedProps","useThemeProps","pressHandler","isOpen","onOpen","_ref","isHovered","useHover","useHasResponsiveProps","mergeRefs","isDisabled","borderTopColor","disabled","cursor"],"mappings":"qbAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,0IAEA,MAAA,CAAA,GAAA,4BAKA,OAAA,oBAAA,iBACA,OAAA,aAAA,sBACA,OAAA,SAAA,sBACA,OAAA,QAAA,KAAA,iCAAA,CACA,OAAA,qBAAA,4CAEA,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,OAAA,GAAA,CAGpB,IAFH,CAAA,QAEG,OAFH,QAEG,CAFYC,KAEZ,2CACH,sBAMgCE,KAAK,CAALA,UAAAA,CANhC,oBAMgCA,CANhC,CAAM,KAAN,mBAAM,KAAN,CAAM,MAAN,mBAAM,MAAN,CAAM,UAAN,mBAAM,UAAN,CAAM,MAAN,mBAAM,MAAN,CAKED,OALF,mBAKEA,OALF,CAQA,mBAAyDG,aAAa,CAAA,kBAAA,CAAtE,KAAsE,CAAtE,CAAM,MAAN,gBAAM,MAAN,CAAM,SAAN,gBAAM,SAAN,CAAM,SAAN,gBAAM,SAAN,CAAyCD,WAAzC,qDAIA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBC,MAAM,CAAGL,OAAO,EAAIA,OAAd,EAAA,CAA0BM,MAAM,EAAIA,MAA1CD,EAAAA,CADF,CAAA,CAIA,GAAME,CAAAA,IAAI,CAAGN,KAAK,CAALA,MAAAA,CAAb,IAAaA,CAAb,CACA,cAAsBQ,QAAQ,CAAA,EAAA,CAlB3B,IAkB2B,CAA9B,CAAQD,SAAR,WAAQA,SAAR,CAEA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,CACE,aAAa,CADf,GAAA,CAEE,QAAQ,CAFV,UAAA,CAGE,OAAO,CAHT,YAAA,CAIE,UAAU,CAJZ,IAAA,CAKE,iBAAiB,CALnB,UAAA,CAME,GAAG,CAAEC,SAAS,CAAC,CAAA,GAAA,CAAD,IAAC,CAAD,CANhB,CAAA,CAQE,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CACE,OAAO,CADT,MAAA,CAEE,aAAa,CAFf,KAAA,CAGE,cAAc,CAHhB,eAAA,CAIE,UAAU,CAAC,QAJb,CAAA,CAAA,WAAA,CAMOH,SAAS,EANhB,MAAA,CAOOH,MAAM,EAPb,SAAA,CAQOO,UAAU,EARjB,SAAA,CASO,CAAA,KAAA,EAAU,CAAEC,cAAc,CAAE,aAAlB,CATjB,CAUO,QAAQ,CAAR,EAAA,GAAA,KAAA,CACD,CACEC,QAAQ,CADV,UAAA,CAEEC,MAAM,CAAEH,UAAU,CAAA,aAAA,CAAmB,MAFvC,CADC,CAVP,EAAA,CAAA,CATJ,QASI,CARF,CADF,CA1BF,CAAA,CA0DA,cAAeX,CAAAA,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,gBAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport Box from '../../primitives/Box';\nimport type {\n  IAccordionSummaryProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionSummary = (\n  { children, ...props }: IAccordionSummaryProps,\n  ref: any\n) => {\n  const {\n    index,\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const { _hover, _expanded, _disabled, ...themedProps } = useThemeProps(\n    'AccordionSummary',\n    props\n  );\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <TouchableOpacity\n      activeOpacity={0.2}\n      disabled={isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={mergeRefs([ref, _ref])}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...themedProps}\n        {...(isHovered && _hover)}\n        {...(isOpen && _expanded)}\n        {...(isDisabled && _disabled)}\n        {...(!index && { borderTopColor: 'transparent' })}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: isDisabled,\n              cursor: isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionSummary));\n"]},"metadata":{},"sourceType":"module"}