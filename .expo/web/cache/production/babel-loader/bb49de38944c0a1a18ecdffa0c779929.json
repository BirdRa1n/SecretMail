{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef,useEffect,useContext}from'react';import{usePropsResolution}from\"../../../hooks\";import{default as Box}from\"../../primitives/Box\";import{PopoverContext}from\"./PopoverContext\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var PopoverHeader=function PopoverHeader(props,ref){var resolvedProps=usePropsResolution('PopoverHeader',props);var _useContext=useContext(PopoverContext),setHeaderMounted=_useContext.setHeaderMounted,headerId=_useContext.headerId;useEffect(function(){setHeaderMounted(true);return function(){setHeaderMounted(false);};},[setHeaderMounted]);if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,_extends({nativeID:headerId},resolvedProps,{ref:ref}));};export default memo(forwardRef(PopoverHeader));","map":{"version":3,"sources":["PopoverHeader.tsx"],"names":["default","PopoverHeader","resolvedProps","usePropsResolution","headerId","useContext","useEffect","setHeaderMounted","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":"uRAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,CAAA,SAAA,CAAA,UAAA,KAAA,OAAA,CACA,OAAA,kBAAA,sBACA,OAASA,OAAO,GAAhB,CAAA,GAAA,4BACA,OAAA,cAAA,wBACA,OAAA,qBAAA,4CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAA,KAAA,CAAA,GAAA,CAAiC,CACrD,GAAMC,CAAAA,aAAa,CAAGC,kBAAkB,CAAA,eAAA,CAAxC,KAAwC,CAAxC,CACA,gBAAuCE,UAAU,CAAjD,cAAiD,CAAjD,CAAM,gBAAN,aAAM,gBAAN,CAA0BD,QAA1B,aAA0BA,QAA1B,CAEAE,SAAS,CAAC,UAAM,CACdC,gBAAgB,CAAhBA,IAAgB,CAAhBA,CACA,MAAO,WAAM,CACXA,gBAAgB,CAAhBA,KAAgB,CAAhBA,CADF,CAAA,CAFO,CAAA,CAKN,CATkD,gBASlD,CALM,CAATD,CAOA,GAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,CAAkC,CAChC,MAAA,KAAA,CACD,CACD,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAK,QAAQ,CAAEJ,QAAf,CAAA,CAAA,aAAA,CAAA,CAA4C,GAAG,CAAEK,GAAjD,CAAA,CAAA,CAAP,CAdF,CAAA,CAiBA,cAAeC,CAAAA,IAAI,CAACC,UAAU,CAA9B,aAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={headerId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]},"metadata":{},"sourceType":"module"}