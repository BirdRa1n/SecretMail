{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"isDisabled\",\"onPress\",\"textValue\"],_excluded2=[\"_text\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef,memo}from'react';import Text from\"../../primitives/Text\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{Pressable}from\"../../primitives/Pressable\";import{MenuContext}from\"./MenuContext\";import{useMenuItem}from\"./useMenu\";import{mergeRefs}from\"../../../utils\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var MenuItem=function MenuItem(_ref,ref){var children=_ref.children,isDisabled=_ref.isDisabled,_onPress=_ref.onPress,textValue=_ref.textValue,props=_objectWithoutProperties(_ref,_excluded);var _React$useContext=React.useContext(MenuContext),closeOnSelect=_React$useContext.closeOnSelect,onClose=_React$useContext.onClose;var menuItemRef=React.useRef(null);var mergedRef=mergeRefs([menuItemRef,ref]);var _usePropsResolution=usePropsResolution('MenuItem',props,{isDisabled:isDisabled},{cascadePseudoProps:true}),_text=_usePropsResolution._text,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),textContent=_React$useState2[0],setTextContent=_React$useState2[1];React.useEffect(function(){var menuItem=menuItemRef.current;if(menuItem){var _menuItem$textContent;setTextContent(((_menuItem$textContent=menuItem.textContent)!==null&&_menuItem$textContent!==void 0?_menuItem$textContent:'').trim());}},[children]);var menuItemProps=useMenuItem({textValue:textValue!==null&&textValue!==void 0?textValue:textContent,ref:menuItemRef});if(useHasResponsiveProps(props)){return null;}return React.createElement(Pressable,_extends({},menuItemProps,resolvedProps,{ref:mergedRef,disabled:isDisabled,accessibilityState:{disabled:isDisabled},onPress:function onPress(e){if(!isDisabled){_onPress&&_onPress(e);if(closeOnSelect){onClose&&onClose();}}}}),React.createElement(React.Fragment,null,React.Children.map(children,function(child,index){if(typeof child==='string'||typeof child==='number'){return React.createElement(Text,_extends({},_text,{key:\"menu-item-\".concat(index)}),child);}else{return child;}})));};export default memo(forwardRef(MenuItem));","map":{"version":3,"sources":["MenuItem.tsx"],"names":["MenuItem","props","onClose","React","menuItemRef","mergedRef","mergeRefs","resolvedProps","usePropsResolution","isDisabled","cascadePseudoProps","menuItem","setTextContent","menuItemProps","useMenuItem","textValue","ref","useHasResponsiveProps","disabled","e","onPress","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IMenuItemProps } from './types';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItem = (\n  { children, isDisabled, onPress, textValue, ...props }: IMenuItemProps,\n  ref: any\n) => {\n  const { closeOnSelect, onClose } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef<any>(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const { _text, ...resolvedProps } = usePropsResolution(\n    'MenuItem',\n    props,\n    {\n      isDisabled,\n    },\n    {\n      cascadePseudoProps: true,\n    }\n  );\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n    if (menuItem) {\n      setTextContent((menuItem.textContent ?? '').trim());\n    }\n  }, [children]);\n\n  const menuItemProps = useMenuItem({\n    textValue: textValue ?? textContent,\n    ref: menuItemRef,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      {...menuItemProps}\n      {...resolvedProps}\n      ref={mergedRef}\n      disabled={isDisabled}\n      accessibilityState={{\n        disabled: isDisabled,\n      }}\n      onPress={(e: any) => {\n        if (!isDisabled) {\n          onPress && onPress(e);\n          if (closeOnSelect) {\n            onClose && onClose();\n          }\n        }\n      }}\n    >\n      <>\n        {React.Children.map(children, (child, index: any) => {\n          if (typeof child === 'string' || typeof child === 'number') {\n            return (\n              <Text {..._text} key={`menu-item-${index}`}>\n                {child}\n              </Text>\n            );\n          } else {\n            return child;\n          }\n        })}\n      </>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(MenuItem));\n"]},"metadata":{},"sourceType":"module"}